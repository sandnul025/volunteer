server.port=8080

# banner
banner.charset=UTF-8
banner.location=classpath:banner.txt

# favicon
spring.mvc.favicon.enabled=false

# thymeleaf
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false

# mapper
mybatis.mapper-locations=mappers/*.xml

# dataSource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://39.104.123.77:3306/volunteer?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=nicholasMall
spring.datasource.password=123456
spring.datasource.initialSize=20
spring.datasource.minIdle=10
spring.datasource.maxActive=100
spring.datasource.maxWait=30000
# 间隔多久才进行一次检测，检测需要关闭的空闲连接
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 个连接在池中最小生存的时间
spring.datasource.minEvictableIdleTimeMillis=300000
# 用来检测连接是否有效的sql
spring.datasource.validationQuery=select 1 from dual
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
spring.datasource.testWhileIdle=true
# 申请连接时执行validationQuery检测连接是否有效
spring.datasource.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效
spring.datasource.testOnReturn=false
# 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。
spring.datasource.poolPreparedStatements=false
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql将无法统计,'wall'用于防火墙
spring.datasource.filters=stat, wall, log4j
