2018-06-09 15:39:34  [ http-nio-80-exec-2:1035079 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039856 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039857 ] - [ INFO ]  # user --->null
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039858 ] - [ INFO ]  # url --->/login
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039858 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:39:39  [ http-nio-80-exec-4:1039864 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039865 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7991d230] was not registered for synchronization because synchronization is not active
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039867 ] - [ INFO ]  {dataSource-3} inited
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039877 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@77562372] will not be managed by Spring
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039878 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039879 ] - [ DEBUG ]  ==> Parameters: 1(String), 111111(String), t123456(String)
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039881 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:39:39  [ http-nio-80-exec-4:1039881 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7991d230]
2018-06-09 15:39:39  [ http-nio-80-exec-5:1039897 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:39:39  [ http-nio-80-exec-5:1039897 ] - [ INFO ]  # user --->com.bankledger.entity.User@6cdb648f
2018-06-09 15:39:39  [ http-nio-80-exec-5:1039898 ] - [ INFO ]  # url --->/main
2018-06-09 15:39:39  [ http-nio-80-exec-5:1039898 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:39:39  [ http-nio-80-exec-5:1039898 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:39:39  [ http-nio-80-exec-5:1039899 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@621c8764] was not registered for synchronization because synchronization is not active
2018-06-09 15:39:39  [ http-nio-80-exec-5:1039899 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@77562372] will not be managed by Spring
2018-06-09 15:39:39  [ http-nio-80-exec-5:1039899 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 15:39:39  [ http-nio-80-exec-5:1039900 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 15:39:39  [ http-nio-80-exec-5:1039905 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:39:39  [ http-nio-80-exec-5:1039906 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@621c8764]
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040024 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040025 ] - [ INFO ]  # user --->com.bankledger.entity.User@6cdb648f
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040025 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040025 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:39:39  [ http-nio-80-exec-6:1040030 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040031 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c3b53b7] was not registered for synchronization because synchronization is not active
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040032 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040045 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@77562372] will not be managed by Spring
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040046 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040046 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040049 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040055 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040056 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040059 ] - [ DEBUG ]  <==      Total: 3
2018-06-09 15:39:39  [ http-nio-80-exec-6:1040059 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c3b53b7]
2018-06-09 15:40:28  [ Thread-34:1088487 ] - [ INFO ]  {dataSource-3} closed
2018-06-09 15:40:28  [ restartedMain:1088811 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 14492 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 15:40:28  [ restartedMain:1088811 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 15:40:28  [ restartedMain:1088811 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 15:40:29  [ restartedMain:1089546 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 15:40:29  [ restartedMain:1089549 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 15:40:29  [ restartedMain:1089556 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 15:40:29  [ restartedMain:1089556 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 15:40:29  [ restartedMain:1089556 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 15:40:29  [ restartedMain:1089557 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 15:40:29  [ restartedMain:1089559 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 15:40:29  [ restartedMain:1089559 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 15:40:29  [ restartedMain:1089559 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 15:40:29  [ restartedMain:1089560 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 15:40:29  [ restartedMain:1089560 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 15:40:29  [ restartedMain:1089560 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 15:40:29  [ restartedMain:1089560 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 15:40:29  [ restartedMain:1089560 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 15:40:29  [ restartedMain:1089657 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 15:40:29  [ restartedMain:1089658 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 15:40:29  [ restartedMain:1089659 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 15:40:29  [ restartedMain:1089659 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 15:40:29  [ restartedMain:1089659 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 15:40:29  [ restartedMain:1089659 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 15:40:29  [ restartedMain:1089661 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 15:40:29  [ restartedMain:1089661 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 15:40:29  [ restartedMain:1089662 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 15:40:29  [ restartedMain:1089662 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 15:40:29  [ restartedMain:1089663 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 15:40:29  [ restartedMain:1089670 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 15:40:29  [ restartedMain:1089670 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 15:40:29  [ restartedMain:1089670 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 15:40:29  [ restartedMain:1089670 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 15:40:29  [ restartedMain:1089671 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 15:40:29  [ restartedMain:1090074 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 15:40:30  [ restartedMain:1090251 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 15:40:30  [ restartedMain:1090251 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 15:40:30  [ restartedMain:1090252 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 15:40:30  [ restartedMain:1090252 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 15:40:30  [ restartedMain:1090252 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 15:40:30  [ restartedMain:1090252 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 15:40:30  [ restartedMain:1090253 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 15:40:30  [ restartedMain:1090253 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 15:40:30  [ restartedMain:1090253 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 15:40:30  [ restartedMain:1090254 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 15:40:30  [ restartedMain:1090254 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 15:40:30  [ restartedMain:1090260 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 15:40:30  [ restartedMain:1090260 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 15:40:30  [ restartedMain:1090260 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 15:40:30  [ restartedMain:1090260 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 15:40:30  [ restartedMain:1090260 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 15:40:30  [ restartedMain:1090561 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 15:40:30  [ restartedMain:1090603 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 15:40:30  [ restartedMain:1091071 ] - [ INFO ]  Started App in 2.303 seconds (JVM running for 1091.865)
2018-06-09 15:40:35  [ http-nio-80-exec-1:1095928 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:40:35  [ http-nio-80-exec-1:1095928 ] - [ INFO ]  # user --->null
2018-06-09 15:40:35  [ http-nio-80-exec-1:1095928 ] - [ INFO ]  # url --->/main
2018-06-09 15:40:35  [ http-nio-80-exec-1:1095928 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:40:35  [ http-nio-80-exec-2:1095932 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:40:35  [ http-nio-80-exec-2:1095933 ] - [ INFO ]  # user --->null
2018-06-09 15:40:35  [ http-nio-80-exec-2:1095933 ] - [ INFO ]  # url --->/login
2018-06-09 15:40:35  [ http-nio-80-exec-2:1095933 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:40:35  [ http-nio-80-exec-2:1095944 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-09 15:40:35  [ http-nio-80-exec-2:1095965 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5ecfd6f1
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1c394300
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3991f2de
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-09 15:40:35  [ http-nio-80-exec-2:1095976 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100223 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100224 ] - [ INFO ]  # user --->null
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100225 ] - [ INFO ]  # url --->/login
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100225 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:40:40  [ http-nio-80-exec-3:1100230 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100230 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9f0b6f] was not registered for synchronization because synchronization is not active
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100232 ] - [ INFO ]  {dataSource-4} inited
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100244 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100244 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100245 ] - [ DEBUG ]  ==> Parameters: 1(String), 111111(String), t123456(String)
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100248 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:40:40  [ http-nio-80-exec-3:1100248 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9f0b6f]
2018-06-09 15:40:40  [ http-nio-80-exec-4:1100266 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:40:40  [ http-nio-80-exec-4:1100267 ] - [ INFO ]  # user --->com.bankledger.entity.User@464fc679
2018-06-09 15:40:40  [ http-nio-80-exec-4:1100267 ] - [ INFO ]  # url --->/main
2018-06-09 15:40:40  [ http-nio-80-exec-4:1100267 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:40:40  [ http-nio-80-exec-4:1100268 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:40:40  [ http-nio-80-exec-4:1100272 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488830c0] was not registered for synchronization because synchronization is not active
2018-06-09 15:40:40  [ http-nio-80-exec-4:1100273 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:40:40  [ http-nio-80-exec-4:1100274 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 15:40:40  [ http-nio-80-exec-4:1100275 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 15:40:40  [ http-nio-80-exec-4:1100278 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:40:40  [ http-nio-80-exec-4:1100278 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488830c0]
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100408 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100409 ] - [ INFO ]  # user --->com.bankledger.entity.User@464fc679
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100409 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100409 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:40:40  [ http-nio-80-exec-8:1100415 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100416 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24c95c72] was not registered for synchronization because synchronization is not active
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100416 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100430 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100431 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100432 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100433 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100434 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100435 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100440 ] - [ DEBUG ]  <==      Total: 3
2018-06-09 15:40:40  [ http-nio-80-exec-8:1100441 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24c95c72]
2018-06-09 15:45:53  [ http-nio-80-exec-6:1413661 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:45:53  [ http-nio-80-exec-6:1413662 ] - [ INFO ]  # user --->com.bankledger.entity.User@464fc679
2018-06-09 15:45:53  [ http-nio-80-exec-6:1413662 ] - [ INFO ]  # url --->/main
2018-06-09 15:45:53  [ http-nio-80-exec-6:1413662 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:45:53  [ http-nio-80-exec-6:1413662 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:45:53  [ http-nio-80-exec-6:1413663 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526f198a] was not registered for synchronization because synchronization is not active
2018-06-09 15:45:53  [ http-nio-80-exec-6:1413663 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:45:53  [ http-nio-80-exec-6:1413664 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 15:45:53  [ http-nio-80-exec-6:1413664 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 15:45:53  [ http-nio-80-exec-6:1413665 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:45:53  [ http-nio-80-exec-6:1413666 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526f198a]
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413832 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413833 ] - [ INFO ]  # user --->com.bankledger.entity.User@464fc679
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413833 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413833 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:45:53  [ http-nio-80-exec-9:1413835 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413839 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c21cf99] was not registered for synchronization because synchronization is not active
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413840 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.5
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413851 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413851 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413852 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413854 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413856 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413856 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413858 ] - [ DEBUG ]  <==      Total: 3
2018-06-09 15:45:53  [ http-nio-80-exec-9:1413858 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c21cf99]
2018-06-09 15:46:32  [ http-nio-80-exec-1:1452699 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:32  [ http-nio-80-exec-1:1452700 ] - [ INFO ]  # user --->null
2018-06-09 15:46:32  [ http-nio-80-exec-1:1452700 ] - [ INFO ]  # url --->/main
2018-06-09 15:46:32  [ http-nio-80-exec-1:1452700 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:46:32  [ http-nio-80-exec-2:1452996 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:32  [ http-nio-80-exec-2:1452996 ] - [ INFO ]  # user --->null
2018-06-09 15:46:32  [ http-nio-80-exec-2:1452996 ] - [ INFO ]  # url --->/login
2018-06-09 15:46:32  [ http-nio-80-exec-2:1452996 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:46:44  [ http-nio-80-exec-5:1464999 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:44  [ http-nio-80-exec-5:1465000 ] - [ INFO ]  # user --->null
2018-06-09 15:46:44  [ http-nio-80-exec-5:1465000 ] - [ INFO ]  # url --->/login
2018-06-09 15:46:44  [ http-nio-80-exec-5:1465000 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:46:44  [ http-nio-80-exec-5:1465001 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:46:44  [ http-nio-80-exec-5:1465001 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715f1c2] was not registered for synchronization because synchronization is not active
2018-06-09 15:46:44  [ http-nio-80-exec-5:1465001 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:46:44  [ http-nio-80-exec-5:1465002 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 15:46:44  [ http-nio-80-exec-5:1465003 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-09 15:46:44  [ http-nio-80-exec-5:1465005 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:46:44  [ http-nio-80-exec-5:1465005 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715f1c2]
2018-06-09 15:46:44  [ http-nio-80-exec-10:1465065 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:44  [ http-nio-80-exec-10:1465065 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:46:44  [ http-nio-80-exec-10:1465065 ] - [ INFO ]  # url --->/main
2018-06-09 15:46:44  [ http-nio-80-exec-10:1465066 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:46:44  [ http-nio-80-exec-10:1465066 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:46:44  [ http-nio-80-exec-10:1465066 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35570e38] was not registered for synchronization because synchronization is not active
2018-06-09 15:46:44  [ http-nio-80-exec-10:1465067 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:46:44  [ http-nio-80-exec-10:1465068 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 15:46:44  [ http-nio-80-exec-10:1465068 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 15:46:44  [ http-nio-80-exec-10:1465069 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:46:44  [ http-nio-80-exec-10:1465070 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35570e38]
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465636 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465637 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465638 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465638 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:46:45  [ http-nio-80-exec-4:1465642 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465643 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50a73f80] was not registered for synchronization because synchronization is not active
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465644 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465664 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465665 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465665 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465666 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:46:45  [ http-nio-80-exec-4:1465667 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50a73f80]
2018-06-09 15:46:47  [ http-nio-80-exec-8:1467918 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:47  [ http-nio-80-exec-8:1467918 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:46:47  [ http-nio-80-exec-8:1467919 ] - [ INFO ]  # url --->/usercenter
2018-06-09 15:46:47  [ http-nio-80-exec-8:1467919 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:46:47  [ http-nio-80-exec-8:1467920 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:46:47  [ http-nio-80-exec-8:1467920 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34dc75e9] was not registered for synchronization because synchronization is not active
2018-06-09 15:46:47  [ http-nio-80-exec-8:1467920 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:46:47  [ http-nio-80-exec-8:1467920 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 15:46:47  [ http-nio-80-exec-8:1467921 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 15:46:47  [ http-nio-80-exec-8:1467923 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:46:47  [ http-nio-80-exec-8:1467923 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34dc75e9]
2018-06-09 15:46:50  [ http-nio-80-exec-10:1470366 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:50  [ http-nio-80-exec-10:1470367 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:46:50  [ http-nio-80-exec-10:1470367 ] - [ INFO ]  # url --->/main
2018-06-09 15:46:50  [ http-nio-80-exec-10:1470367 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:46:50  [ http-nio-80-exec-10:1470367 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:46:50  [ http-nio-80-exec-10:1470367 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43d7fae2] was not registered for synchronization because synchronization is not active
2018-06-09 15:46:50  [ http-nio-80-exec-10:1470368 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:46:50  [ http-nio-80-exec-10:1470368 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 15:46:50  [ http-nio-80-exec-10:1470368 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 15:46:50  [ http-nio-80-exec-10:1470369 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:46:50  [ http-nio-80-exec-10:1470370 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43d7fae2]
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470562 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470562 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470562 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470562 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:46:50  [ http-nio-80-exec-7:1470563 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470564 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@209fa00e] was not registered for synchronization because synchronization is not active
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470564 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.75
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470582 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470582 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470583 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470584 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:46:50  [ http-nio-80-exec-7:1470585 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@209fa00e]
2018-06-09 15:46:51  [ http-nio-80-exec-1:1472054 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:51  [ http-nio-80-exec-1:1472054 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:46:51  [ http-nio-80-exec-1:1472055 ] - [ INFO ]  # url --->/usercenter
2018-06-09 15:46:51  [ http-nio-80-exec-1:1472055 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:46:51  [ http-nio-80-exec-1:1472055 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:46:51  [ http-nio-80-exec-1:1472055 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7540fc] was not registered for synchronization because synchronization is not active
2018-06-09 15:46:51  [ http-nio-80-exec-1:1472056 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:46:51  [ http-nio-80-exec-1:1472057 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 15:46:51  [ http-nio-80-exec-1:1472057 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 15:46:51  [ http-nio-80-exec-1:1472059 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:46:51  [ http-nio-80-exec-1:1472060 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7540fc]
2018-06-09 15:46:54  [ http-nio-80-exec-9:1475023 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:54  [ http-nio-80-exec-9:1475023 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:46:54  [ http-nio-80-exec-9:1475023 ] - [ INFO ]  # url --->/set
2018-06-09 15:46:54  [ http-nio-80-exec-9:1475024 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:46:54  [ http-nio-80-exec-4:1475096 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:46:54  [ http-nio-80-exec-4:1475096 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:46:54  [ http-nio-80-exec-4:1475096 ] - [ INFO ]  # url --->/error
2018-06-09 15:46:54  [ http-nio-80-exec-4:1475096 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:48:22  [ http-nio-80-exec-1:1562903 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:48:22  [ http-nio-80-exec-1:1562904 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:48:22  [ http-nio-80-exec-1:1562904 ] - [ INFO ]  # url --->/set
2018-06-09 15:48:22  [ http-nio-80-exec-1:1562904 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:49:01  [ http-nio-80-exec-6:1601261 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:49:01  [ http-nio-80-exec-6:1601261 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:49:01  [ http-nio-80-exec-6:1601261 ] - [ INFO ]  # url --->/set
2018-06-09 15:49:01  [ http-nio-80-exec-6:1601262 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:49:49  [ http-nio-80-exec-5:1649269 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:49:49  [ http-nio-80-exec-5:1649270 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:49:49  [ http-nio-80-exec-5:1649270 ] - [ INFO ]  # url --->/usercenter
2018-06-09 15:49:49  [ http-nio-80-exec-5:1649270 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:49:49  [ http-nio-80-exec-5:1649271 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:49:49  [ http-nio-80-exec-5:1649271 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74a61982] was not registered for synchronization because synchronization is not active
2018-06-09 15:49:49  [ http-nio-80-exec-5:1649272 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:49:49  [ http-nio-80-exec-5:1649272 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 15:49:49  [ http-nio-80-exec-5:1649274 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 15:49:49  [ http-nio-80-exec-5:1649275 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:49:49  [ http-nio-80-exec-5:1649276 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74a61982]
2018-06-09 15:50:48  [ http-nio-80-exec-10:1708374 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:50:48  [ http-nio-80-exec-10:1708374 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:50:48  [ http-nio-80-exec-10:1708374 ] - [ INFO ]  # url --->/usercenter
2018-06-09 15:50:48  [ http-nio-80-exec-10:1708375 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:50:48  [ http-nio-80-exec-10:1708375 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:50:48  [ http-nio-80-exec-10:1708375 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3092d7d2] was not registered for synchronization because synchronization is not active
2018-06-09 15:50:48  [ http-nio-80-exec-10:1708375 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:50:48  [ http-nio-80-exec-10:1708375 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 15:50:48  [ http-nio-80-exec-10:1708376 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 15:50:48  [ http-nio-80-exec-10:1708377 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:50:48  [ http-nio-80-exec-10:1708378 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3092d7d2]
2018-06-09 15:50:48  [ http-nio-80-exec-7:1709136 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:50:48  [ http-nio-80-exec-7:1709136 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:50:48  [ http-nio-80-exec-7:1709136 ] - [ INFO ]  # url --->/set
2018-06-09 15:50:48  [ http-nio-80-exec-7:1709136 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:51:32  [ http-nio-80-exec-3:1752880 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:51:32  [ http-nio-80-exec-3:1752880 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:51:32  [ http-nio-80-exec-3:1752880 ] - [ INFO ]  # url --->/main
2018-06-09 15:51:32  [ http-nio-80-exec-3:1752880 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:51:32  [ http-nio-80-exec-3:1752881 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:51:32  [ http-nio-80-exec-3:1752881 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5432d0aa] was not registered for synchronization because synchronization is not active
2018-06-09 15:51:32  [ http-nio-80-exec-3:1752881 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:51:32  [ http-nio-80-exec-3:1752882 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 15:51:32  [ http-nio-80-exec-3:1752882 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 15:51:32  [ http-nio-80-exec-3:1752883 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:51:32  [ http-nio-80-exec-3:1752884 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5432d0aa]
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753177 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753177 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753177 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753177 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:51:32  [ http-nio-80-exec-2:1753178 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753178 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fcd37cc] was not registered for synchronization because synchronization is not active
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753178 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753191 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753191 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753192 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753193 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:51:32  [ http-nio-80-exec-2:1753194 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fcd37cc]
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785549 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785549 ] - [ INFO ]  # user --->com.bankledger.entity.User@464fc679
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785549 ] - [ INFO ]  # url --->/project/add
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785549 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:52:05  [ http-nio-80-exec-5:1785571 ] - [ INFO ]   ########## 调用底层Elt接口 - createextenddatatx - 开始 ##########
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785572 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785572 ] - [ INFO ]   # method :createextenddatatx
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785572 ] - [ INFO ]   # Params :[1,"Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","8cd1b963f18ab3fd366601e02667f49e8a812d1d7a5a07ba254fad07edd0bda6",1000,"7B2261646472657373223A22E69DBEE59DAAE5B1B1222C226C696D6974436F756E74223A223230222C2263726561746564223A22323031382D30362D30392031353A35323A3035222C2270726F6A65637454797065223A22E59FBAE7A180E69C8DE58AA1222C226F7267616E697A65223A22E6B7B1E59CB320E58D97E5B1B1E58CBA20E58D97E5B1B1E58CBAE4B989E5B7A5E88194222C2273656E6454797065223A2231222C226469736372697074223A22E69DBEE59DAAE5B1B1E68993E58594E5AD902020E68993E58594E5AD902020E58594E5AD902020E5AD90222C22737461727454696D65223A22323031382D30362D30392030303A30303A3030222C22656E6454696D65223A22323031382D30362D30392030353A30303A3030222C2270726F6A6563744E616D65223A22E69DBEE59DAAE5B1B1E68993E58594E5AD90222C2270726F6A6563744964223A22373139323939313436393936222C226C696D69744F7267616E697A65466C6167223A2230222C22636F696E223A223130222C22737461747573223A2230227D"]
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785572 ] - [ INFO ]   # Body   :{"method":"createextenddatatx","params":[1,"Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","8cd1b963f18ab3fd366601e02667f49e8a812d1d7a5a07ba254fad07edd0bda6",1000,"7B2261646472657373223A22E69DBEE59DAAE5B1B1222C226C696D6974436F756E74223A223230222C2263726561746564223A22323031382D30362D30392031353A35323A3035222C2270726F6A65637454797065223A22E59FBAE7A180E69C8DE58AA1222C226F7267616E697A65223A22E6B7B1E59CB320E58D97E5B1B1E58CBA20E58D97E5B1B1E58CBAE4B989E5B7A5E88194222C2273656E6454797065223A2231222C226469736372697074223A22E69DBEE59DAAE5B1B1E68993E58594E5AD902020E68993E58594E5AD902020E58594E5AD902020E5AD90222C22737461727454696D65223A22323031382D30362D30392030303A30303A3030222C22656E6454696D65223A22323031382D30362D30392030353A30303A3030222C2270726F6A6563744E616D65223A22E69DBEE59DAAE5B1B1E68993E58594E5AD90222C2270726F6A6563744964223A22373139323939313436393936222C226C696D69744F7267616E697A65466C6167223A2230222C22636F696E223A223130222C22737461747573223A2230227D"]}
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785597 ] - [ INFO ]   # Response :{"result":{"txId":"0ab194b6339430ba5b001f3c1f964114557058de3715b826a8bfa01b9c232c29"},"error":null,"id":null}
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785597 ] - [ INFO ]   # use time :26
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785597 ] - [ INFO ]   ########## 调用底层Elt接口 - createextenddatatx - 结束 ##########
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785597 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785597 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53961440] was not registered for synchronization because synchronization is not active
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785598 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785598 ] - [ DEBUG ]  ==>  Preparing: insert into project(projectid ,projecttype ,projectname ,address,organize,starttime ,endtime ,limitcount ,coin,limitorganizeflag ,discript,status,blockaddr,created,txId)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785599 ] - [ DEBUG ]  ==> Parameters: 719299146996(String), 基础服务(String), 松坪山打兔子(String), 松坪山(String), 深圳 南山区 南山区义工联(String), 2018-06-09 00:00:00(String), 2018-06-09 05:00:00(String), 20(String), 10(String), 0(String), 松坪山打兔子  打兔子  兔子  子(String), 0(String), 111111(String), 2018-06-09 15:52:05(String), 0ab194b6339430ba5b001f3c1f964114557058de3715b826a8bfa01b9c232c29(String)
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785630 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 15:52:05  [ http-nio-80-exec-5:1785630 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53961440]
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816620 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816622 ] - [ INFO ]  # user --->com.bankledger.entity.User@464fc679
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816622 ] - [ INFO ]  # url --->/project/add
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816623 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:52:36  [ http-nio-80-exec-6:1816624 ] - [ INFO ]   ########## 调用底层Elt接口 - createextenddatatx - 开始 ##########
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816624 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816624 ] - [ INFO ]   # method :createextenddatatx
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816624 ] - [ INFO ]   # Params :[1,"Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","8cd1b963f18ab3fd366601e02667f49e8a812d1d7a5a07ba254fad07edd0bda
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816625 ] - [ INFO ]   # Body   :{"method":"createextenddatatx","params":[1,"Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","8cd1b963f18ab3fd366601e02667f49e8a812d1d7a5a07ba254fad07edd0bda}
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816657 ] - [ INFO ]   # Response :{"result":{"txId":"0e110ffe958eb25701de4c51baae66bf9b94036db6690c98bc053e446564591b"},"error":null,"id":null}
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816658 ] - [ INFO ]   # use time :34
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816658 ] - [ INFO ]   ########## 调用底层Elt接口 - createextenddatatx - 结束 ##########
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816658 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816658 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e4b35b] was not registered for synchronization because synchronization is not active
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816658 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816659 ] - [ DEBUG ]  ==>  Preparing: insert into project(projectid ,projecttype ,projectname ,address,organize,starttime ,endtime ,limitcount ,coin,limitorganizeflag ,discript,status,blockaddr,created,txId)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816659 ] - [ DEBUG ]  ==> Parameters: 719299395428(String), 基础服务(String), 松坪山打兔子1(String), 松坪山1(String), 深圳 南山区 南山区义工联(String), 2018-06-09 00:00:00(String), 2018-06-09 05:00:00(String), 20(String), 10(String), 0(String), 松坪山打兔子  打兔子  兔子  子(String), 0(String), 111111(String), 2018-06-09 15:52:36(String), 0e110ffe958eb25701de4c51baae66bf9b94036db6690c98bc053e446564591b(String)
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816688 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 15:52:36  [ http-nio-80-exec-6:1816689 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33e4b35b]
2018-06-09 15:56:16  [ http-nio-80-exec-1:2036642 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:56:16  [ http-nio-80-exec-1:2036643 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:56:16  [ http-nio-80-exec-1:2036643 ] - [ INFO ]  # url --->/main
2018-06-09 15:56:16  [ http-nio-80-exec-1:2036643 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:56:16  [ http-nio-80-exec-1:2036643 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:56:16  [ http-nio-80-exec-1:2036644 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5394cdad] was not registered for synchronization because synchronization is not active
2018-06-09 15:56:16  [ http-nio-80-exec-1:2036644 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:56:16  [ http-nio-80-exec-1:2036645 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 15:56:16  [ http-nio-80-exec-1:2036645 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 15:56:16  [ http-nio-80-exec-1:2036646 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:56:16  [ http-nio-80-exec-1:2036647 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5394cdad]
2018-06-09 15:56:16  [ http-nio-80-exec-4:2036981 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:56:16  [ http-nio-80-exec-4:2036981 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:56:16  [ http-nio-80-exec-4:2036981 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 15:56:16  [ http-nio-80-exec-4:2036981 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:56:16  [ http-nio-80-exec-4:2036982 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 15:56:16  [ http-nio-80-exec-4:2036983 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56c49016] was not registered for synchronization because synchronization is not active
2018-06-09 15:56:16  [ http-nio-80-exec-4:2036984 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8333333333333334
2018-06-09 15:56:16  [ http-nio-80-exec-4:2036999 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7358eaac] will not be managed by Spring
2018-06-09 15:56:16  [ http-nio-80-exec-4:2037000 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 15:56:16  [ http-nio-80-exec-4:2037001 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 15:56:16  [ http-nio-80-exec-4:2037002 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 15:56:16  [ http-nio-80-exec-4:2037002 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56c49016]
2018-06-09 15:56:21  [ http-nio-80-exec-9:2041223 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:56:21  [ http-nio-80-exec-9:2041224 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:56:21  [ http-nio-80-exec-9:2041225 ] - [ INFO ]  # url --->/set
2018-06-09 15:56:21  [ http-nio-80-exec-9:2041225 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:56:33  [ http-nio-80-exec-5:2054003 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:56:33  [ http-nio-80-exec-5:2054003 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:56:33  [ http-nio-80-exec-5:2054004 ] - [ INFO ]  # url --->/set
2018-06-09 15:56:33  [ http-nio-80-exec-5:2054005 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:57:25  [ http-nio-80-exec-7:2105705 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:57:25  [ http-nio-80-exec-7:2105706 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:57:25  [ http-nio-80-exec-7:2105706 ] - [ INFO ]  # url --->/set
2018-06-09 15:57:25  [ http-nio-80-exec-7:2105706 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 15:58:44  [ http-nio-80-exec-5:2184650 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 15:58:44  [ http-nio-80-exec-5:2184651 ] - [ INFO ]  # user --->com.bankledger.entity.User@70558e56
2018-06-09 15:58:44  [ http-nio-80-exec-5:2184651 ] - [ INFO ]  # url --->/set
2018-06-09 15:58:44  [ http-nio-80-exec-5:2184651 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:08:06  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-09 16:08:06  [ background-preinit:3 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-09 16:08:06  [ background-preinit:18 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:08:06  [ background-preinit:33 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:08:06  [ background-preinit:35 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:08:06  [ background-preinit:36 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:08:06  [ background-preinit:36 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:08:06  [ restartedMain:347 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 10320 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:08:06  [ restartedMain:347 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:08:06  [ restartedMain:347 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:08:06  [ background-preinit:381 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:08:06  [ background-preinit:393 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:08:06  [ background-preinit:395 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:08:06  [ background-preinit:396 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:08:06  [ background-preinit:398 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:08:06  [ background-preinit:398 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:08:08  [ restartedMain:2807 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:08:09  [ restartedMain:2815 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:08:09  [ restartedMain:2828 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:08:09  [ restartedMain:2829 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:08:09  [ restartedMain:2829 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:08:09  [ restartedMain:2830 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:08:09  [ restartedMain:2834 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:08:09  [ restartedMain:2835 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:08:09  [ restartedMain:2835 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:08:09  [ restartedMain:2835 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:08:09  [ restartedMain:2835 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:08:09  [ restartedMain:2835 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:08:09  [ restartedMain:2836 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:08:09  [ restartedMain:2836 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:08:09  [ restartedMain:3370 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:08:09  [ restartedMain:3375 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:08:09  [ restartedMain:3379 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:08:09  [ restartedMain:3381 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:08:09  [ restartedMain:3382 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:08:09  [ restartedMain:3383 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:08:09  [ restartedMain:3385 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:08:09  [ restartedMain:3385 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:08:09  [ restartedMain:3386 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:08:09  [ restartedMain:3386 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:08:09  [ restartedMain:3386 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:08:09  [ restartedMain:3394 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:08:09  [ restartedMain:3395 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:08:09  [ restartedMain:3395 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:08:09  [ restartedMain:3396 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:08:09  [ restartedMain:3396 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:08:12  [ restartedMain:5960 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-09 16:08:12  [ restartedMain:6076 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:08:12  [ restartedMain:6758 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:08:12  [ restartedMain:6759 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:08:12  [ restartedMain:6773 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:08:12  [ restartedMain:6773 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:08:12  [ restartedMain:6774 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:08:12  [ restartedMain:6774 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:08:12  [ restartedMain:6774 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:08:12  [ restartedMain:6775 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:08:12  [ restartedMain:6775 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:08:12  [ restartedMain:6775 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:08:12  [ restartedMain:6776 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:08:12  [ restartedMain:6784 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:08:12  [ restartedMain:6784 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:08:12  [ restartedMain:6784 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:08:12  [ restartedMain:6785 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:08:12  [ restartedMain:6785 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:08:14  [ restartedMain:8045 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:08:14  [ restartedMain:8268 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:08:15  [ restartedMain:9480 ] - [ INFO ]  Started App in 9.739 seconds (JVM running for 10.746)
2018-06-09 16:08:35  [ http-nio-80-exec-1:29150 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:08:35  [ http-nio-80-exec-1:29150 ] - [ INFO ]  # user --->null
2018-06-09 16:08:35  [ http-nio-80-exec-1:29151 ] - [ INFO ]  # url --->/login
2018-06-09 16:08:35  [ http-nio-80-exec-1:29151 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:08:35  [ http-nio-80-exec-1:29213 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-09 16:08:35  [ http-nio-80-exec-1:29441 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@69e1d311
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@a1f36b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2e3ea6ef
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-09 16:08:35  [ http-nio-80-exec-1:29463 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 16:08:46  [ http-nio-80-exec-9:40359 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:08:46  [ http-nio-80-exec-9:40361 ] - [ INFO ]  # user --->null
2018-06-09 16:08:46  [ http-nio-80-exec-9:40361 ] - [ INFO ]  # url --->/login
2018-06-09 16:08:46  [ http-nio-80-exec-9:40361 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:08:46  [ http-nio-80-exec-9:40405 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:08:46  [ http-nio-80-exec-9:40426 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73b45f11] was not registered for synchronization because synchronization is not active
2018-06-09 16:08:46  [ http-nio-80-exec-9:40513 ] - [ INFO ]  {dataSource-1} inited
2018-06-09 16:08:46  [ http-nio-80-exec-9:40758 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@632f8612] will not be managed by Spring
2018-06-09 16:08:46  [ http-nio-80-exec-9:40764 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:08:46  [ http-nio-80-exec-9:40797 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-09 16:08:46  [ http-nio-80-exec-9:40812 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:08:47  [ http-nio-80-exec-9:40813 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73b45f11]
2018-06-09 16:08:47  [ http-nio-80-exec-10:40942 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:08:47  [ http-nio-80-exec-10:40943 ] - [ INFO ]  # user --->com.bankledger.entity.User@5ef7a1db
2018-06-09 16:08:47  [ http-nio-80-exec-10:40943 ] - [ INFO ]  # url --->/main
2018-06-09 16:08:47  [ http-nio-80-exec-10:40943 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:08:47  [ http-nio-80-exec-10:40943 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:08:47  [ http-nio-80-exec-10:40944 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50304475] was not registered for synchronization because synchronization is not active
2018-06-09 16:08:47  [ http-nio-80-exec-10:40945 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@632f8612] will not be managed by Spring
2018-06-09 16:08:47  [ http-nio-80-exec-10:40947 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:08:47  [ http-nio-80-exec-10:40947 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:08:47  [ http-nio-80-exec-10:40954 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:08:47  [ http-nio-80-exec-10:40955 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50304475]
2018-06-09 16:08:47  [ http-nio-80-exec-10:40955 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:08:47  [ http-nio-80-exec-10:40956 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7122b101] was not registered for synchronization because synchronization is not active
2018-06-09 16:08:47  [ http-nio-80-exec-10:40957 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@632f8612] will not be managed by Spring
2018-06-09 16:08:47  [ http-nio-80-exec-10:40957 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:08:47  [ http-nio-80-exec-10:40957 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:08:47  [ http-nio-80-exec-10:40964 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:08:47  [ http-nio-80-exec-10:40965 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7122b101]
2018-06-09 16:08:47  [ http-nio-80-exec-3:41662 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:08:47  [ http-nio-80-exec-3:41662 ] - [ INFO ]  # user --->com.bankledger.entity.User@5ef7a1db
2018-06-09 16:08:47  [ http-nio-80-exec-3:41662 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:08:47  [ http-nio-80-exec-3:41663 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:08:47  [ http-nio-80-exec-3:41676 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:08:47  [ http-nio-80-exec-3:41676 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@208482f1] was not registered for synchronization because synchronization is not active
2018-06-09 16:08:47  [ http-nio-80-exec-3:41677 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@632f8612] will not be managed by Spring
2018-06-09 16:08:47  [ http-nio-80-exec-3:41677 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:08:47  [ http-nio-80-exec-3:41679 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:08:47  [ http-nio-80-exec-3:41682 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:08:47  [ http-nio-80-exec-3:41682 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@208482f1]
2018-06-09 16:08:47  [ http-nio-80-exec-3:41685 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:08:47  [ http-nio-80-exec-3:41686 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42fbd4b9] was not registered for synchronization because synchronization is not active
2018-06-09 16:08:48  [ http-nio-80-exec-3:41819 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 16:08:48  [ http-nio-80-exec-3:41922 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@632f8612] will not be managed by Spring
2018-06-09 16:08:48  [ http-nio-80-exec-3:41922 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:08:48  [ http-nio-80-exec-3:41923 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:08:48  [ http-nio-80-exec-3:41925 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:08:48  [ http-nio-80-exec-3:41926 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42fbd4b9]
2018-06-09 16:08:50  [ http-nio-80-exec-4:44246 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:08:50  [ http-nio-80-exec-4:44247 ] - [ INFO ]  # user --->com.bankledger.entity.User@5ef7a1db
2018-06-09 16:08:50  [ http-nio-80-exec-4:44247 ] - [ INFO ]  # url --->/set
2018-06-09 16:08:50  [ http-nio-80-exec-4:44247 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:08:51  [ http-nio-80-exec-5:45422 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:08:51  [ http-nio-80-exec-5:45422 ] - [ INFO ]  # user --->com.bankledger.entity.User@5ef7a1db
2018-06-09 16:08:51  [ http-nio-80-exec-5:45422 ] - [ INFO ]  # url --->/open
2018-06-09 16:08:51  [ http-nio-80-exec-5:45423 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:08:51  [ http-nio-80-exec-5:45425 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:08:51  [ http-nio-80-exec-5:45425 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42ab612d] was not registered for synchronization because synchronization is not active
2018-06-09 16:08:51  [ http-nio-80-exec-5:45426 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@632f8612] will not be managed by Spring
2018-06-09 16:08:51  [ http-nio-80-exec-5:45426 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:08:51  [ http-nio-80-exec-5:45427 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:08:51  [ http-nio-80-exec-5:45429 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:08:51  [ http-nio-80-exec-5:45429 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42ab612d]
2018-06-09 16:08:51  [ http-nio-80-exec-5:45430 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:08:51  [ http-nio-80-exec-5:45430 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57780456] was not registered for synchronization because synchronization is not active
2018-06-09 16:08:51  [ http-nio-80-exec-5:45431 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@632f8612] will not be managed by Spring
2018-06-09 16:08:51  [ http-nio-80-exec-5:45431 ] - [ DEBUG ]  ==>  Preparing: udpate user set isopen = ? where idcard = ? 
2018-06-09 16:08:51  [ http-nio-80-exec-5:45434 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57780456]
2018-06-09 16:08:51  [ http-nio-80-exec-5:45450 ] - [ ERROR ]  ################# Exception ##################
2018-06-09 16:08:51  [ http-nio-80-exec-5:45472 ] - [ ERROR ]  ### RequestUrI: /open 
2018-06-09 16:08:51  [ http-nio-80-exec-5:45473 ] - [ ERROR ]  ### RequestParam: {isopen=1} 
2018-06-09 16:08:51  [ http-nio-80-exec-5:45474 ] - [ ERROR ]  ### exception: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isopen' not found. Available parameters are [arg1, arg0, param1, param2]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isopen' not found. Available parameters are [arg1, arg0, param1, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy86.open(Unknown Source)
	at com.bankledger.controller.back.UserController.changeUser(UserController.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'isopen' not found. Available parameters are [arg1, arg0, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:202)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy106.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-09 16:09:22  [ Thread-6:76212 ] - [ INFO ]  {dataSource-1} closed
2018-06-09 16:09:22  [ restartedMain:76560 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 10320 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:09:22  [ restartedMain:76560 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:09:22  [ restartedMain:76561 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:09:23  [ restartedMain:77314 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:09:23  [ restartedMain:77315 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:09:23  [ restartedMain:77326 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:09:23  [ restartedMain:77326 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:09:23  [ restartedMain:77327 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:09:23  [ restartedMain:77327 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:09:23  [ restartedMain:77330 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:09:23  [ restartedMain:77331 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:09:23  [ restartedMain:77331 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:09:23  [ restartedMain:77331 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:09:23  [ restartedMain:77332 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:09:23  [ restartedMain:77332 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:09:23  [ restartedMain:77332 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:09:23  [ restartedMain:77332 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:09:23  [ restartedMain:77465 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:09:23  [ restartedMain:77466 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:09:23  [ restartedMain:77468 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:09:23  [ restartedMain:77468 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:09:23  [ restartedMain:77468 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:09:23  [ restartedMain:77469 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:09:23  [ restartedMain:77470 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:09:23  [ restartedMain:77470 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:09:23  [ restartedMain:77471 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:09:23  [ restartedMain:77471 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:09:23  [ restartedMain:77472 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:09:23  [ restartedMain:77479 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:09:23  [ restartedMain:77485 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:09:23  [ restartedMain:77487 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:09:23  [ restartedMain:77487 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:09:23  [ restartedMain:77488 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:09:24  [ restartedMain:78111 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:09:24  [ restartedMain:78442 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:09:24  [ restartedMain:78443 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:09:24  [ restartedMain:78444 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:09:24  [ restartedMain:78445 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:09:24  [ restartedMain:78446 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:09:24  [ restartedMain:78446 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:09:24  [ restartedMain:78447 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:09:24  [ restartedMain:78447 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:09:24  [ restartedMain:78448 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:09:24  [ restartedMain:78448 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:09:24  [ restartedMain:78449 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:09:24  [ restartedMain:78457 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:09:24  [ restartedMain:78458 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:09:24  [ restartedMain:78458 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:09:24  [ restartedMain:78459 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:09:24  [ restartedMain:78459 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:09:25  [ restartedMain:78942 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:09:25  [ restartedMain:79000 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:09:25  [ restartedMain:79588 ] - [ INFO ]  Started App in 3.081 seconds (JVM running for 80.854)
2018-06-09 16:09:28  [ http-nio-80-exec-1:82121 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:09:28  [ http-nio-80-exec-1:82121 ] - [ INFO ]  # user --->null
2018-06-09 16:09:28  [ http-nio-80-exec-1:82121 ] - [ INFO ]  # url --->/set
2018-06-09 16:09:28  [ http-nio-80-exec-1:82122 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:09:28  [ http-nio-80-exec-2:82133 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:09:28  [ http-nio-80-exec-2:82133 ] - [ INFO ]  # user --->null
2018-06-09 16:09:28  [ http-nio-80-exec-2:82133 ] - [ INFO ]  # url --->/login
2018-06-09 16:09:28  [ http-nio-80-exec-2:82133 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:09:28  [ http-nio-80-exec-2:82152 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-09 16:09:28  [ http-nio-80-exec-2:82206 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@69e1d311
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@a1f36b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2e3ea6ef
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-09 16:09:28  [ http-nio-80-exec-2:82210 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 16:09:33  [ http-nio-80-exec-3:87002 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:09:33  [ http-nio-80-exec-3:87002 ] - [ INFO ]  # user --->null
2018-06-09 16:09:33  [ http-nio-80-exec-3:87003 ] - [ INFO ]  # url --->/login
2018-06-09 16:09:33  [ http-nio-80-exec-3:87003 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:09:33  [ http-nio-80-exec-3:87010 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:09:33  [ http-nio-80-exec-3:87010 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2528f757] was not registered for synchronization because synchronization is not active
2018-06-09 16:09:33  [ http-nio-80-exec-3:87014 ] - [ INFO ]  {dataSource-2} inited
2018-06-09 16:09:33  [ http-nio-80-exec-3:87023 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:09:33  [ http-nio-80-exec-3:87024 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:09:33  [ http-nio-80-exec-3:87024 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-09 16:09:33  [ http-nio-80-exec-3:87027 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:09:33  [ http-nio-80-exec-3:87028 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2528f757]
2018-06-09 16:09:33  [ http-nio-80-exec-4:87049 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:09:33  [ http-nio-80-exec-4:87050 ] - [ INFO ]  # user --->com.bankledger.entity.User@2e67db65
2018-06-09 16:09:33  [ http-nio-80-exec-4:87050 ] - [ INFO ]  # url --->/main
2018-06-09 16:09:33  [ http-nio-80-exec-4:87050 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:09:33  [ http-nio-80-exec-4:87051 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:09:33  [ http-nio-80-exec-4:87052 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20a020d9] was not registered for synchronization because synchronization is not active
2018-06-09 16:09:33  [ http-nio-80-exec-4:87052 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:09:33  [ http-nio-80-exec-4:87053 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:09:33  [ http-nio-80-exec-4:87054 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:09:33  [ http-nio-80-exec-4:87057 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:09:33  [ http-nio-80-exec-4:87058 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20a020d9]
2018-06-09 16:09:33  [ http-nio-80-exec-4:87058 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:09:33  [ http-nio-80-exec-4:87059 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b2d5ad] was not registered for synchronization because synchronization is not active
2018-06-09 16:09:33  [ http-nio-80-exec-4:87059 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:09:33  [ http-nio-80-exec-4:87059 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:09:33  [ http-nio-80-exec-4:87061 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:09:33  [ http-nio-80-exec-4:87063 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:09:33  [ http-nio-80-exec-4:87064 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b2d5ad]
2018-06-09 16:09:33  [ http-nio-80-exec-5:87465 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:09:33  [ http-nio-80-exec-5:87465 ] - [ INFO ]  # user --->com.bankledger.entity.User@2e67db65
2018-06-09 16:09:33  [ http-nio-80-exec-5:87465 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:09:33  [ http-nio-80-exec-5:87466 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:09:33  [ http-nio-80-exec-5:87474 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:09:33  [ http-nio-80-exec-5:87475 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ffe0f9e] was not registered for synchronization because synchronization is not active
2018-06-09 16:09:33  [ http-nio-80-exec-5:87475 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:09:33  [ http-nio-80-exec-5:87475 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:09:33  [ http-nio-80-exec-5:87476 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:09:33  [ http-nio-80-exec-5:87477 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:09:33  [ http-nio-80-exec-5:87478 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ffe0f9e]
2018-06-09 16:09:33  [ http-nio-80-exec-5:87478 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:09:33  [ http-nio-80-exec-5:87479 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@481ab67] was not registered for synchronization because synchronization is not active
2018-06-09 16:09:33  [ http-nio-80-exec-5:87479 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 16:09:33  [ http-nio-80-exec-5:87492 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:09:33  [ http-nio-80-exec-5:87493 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:09:33  [ http-nio-80-exec-5:87494 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:09:33  [ http-nio-80-exec-5:87495 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:09:33  [ http-nio-80-exec-5:87496 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@481ab67]
2018-06-09 16:09:35  [ http-nio-80-exec-6:88847 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:09:35  [ http-nio-80-exec-6:88847 ] - [ INFO ]  # user --->com.bankledger.entity.User@2e67db65
2018-06-09 16:09:35  [ http-nio-80-exec-6:88848 ] - [ INFO ]  # url --->/set
2018-06-09 16:09:35  [ http-nio-80-exec-6:88848 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:09:36  [ http-nio-80-exec-8:90028 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:09:36  [ http-nio-80-exec-8:90029 ] - [ INFO ]  # user --->com.bankledger.entity.User@2e67db65
2018-06-09 16:09:36  [ http-nio-80-exec-8:90029 ] - [ INFO ]  # url --->/open
2018-06-09 16:09:36  [ http-nio-80-exec-8:90029 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:09:36  [ http-nio-80-exec-8:90031 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:09:36  [ http-nio-80-exec-8:90032 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@743883a6] was not registered for synchronization because synchronization is not active
2018-06-09 16:09:36  [ http-nio-80-exec-8:90032 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:09:36  [ http-nio-80-exec-8:90032 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:09:36  [ http-nio-80-exec-8:90033 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:09:36  [ http-nio-80-exec-8:90034 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:09:36  [ http-nio-80-exec-8:90034 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@743883a6]
2018-06-09 16:09:36  [ http-nio-80-exec-8:90036 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:09:36  [ http-nio-80-exec-8:90036 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49273ed0] was not registered for synchronization because synchronization is not active
2018-06-09 16:09:36  [ http-nio-80-exec-8:90037 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:09:36  [ http-nio-80-exec-8:90037 ] - [ DEBUG ]  ==>  Preparing: udpate user set isopen = ? where idcard = ? 
2018-06-09 16:09:36  [ http-nio-80-exec-8:90038 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49273ed0]
2018-06-09 16:09:36  [ http-nio-80-exec-8:90039 ] - [ ERROR ]  ################# Exception ##################
2018-06-09 16:09:36  [ http-nio-80-exec-8:90039 ] - [ ERROR ]  ### RequestUrI: /open 
2018-06-09 16:09:36  [ http-nio-80-exec-8:90040 ] - [ ERROR ]  ### RequestParam: {isopen=1} 
2018-06-09 16:09:36  [ http-nio-80-exec-8:90040 ] - [ ERROR ]  ### exception: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.open(Unknown Source)
	at com.bankledger.controller.back.UserController.changeUser(UserController.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:202)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy106.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-09 16:10:05  [ http-nio-80-exec-10:119466 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:10:05  [ http-nio-80-exec-10:119467 ] - [ INFO ]  # user --->com.bankledger.entity.User@2e67db65
2018-06-09 16:10:05  [ http-nio-80-exec-10:119467 ] - [ INFO ]  # url --->/open
2018-06-09 16:10:05  [ http-nio-80-exec-10:119467 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:10:05  [ http-nio-80-exec-10:119467 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:10:05  [ http-nio-80-exec-10:119468 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1269d17] was not registered for synchronization because synchronization is not active
2018-06-09 16:10:05  [ http-nio-80-exec-10:119468 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:10:05  [ http-nio-80-exec-10:119468 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:10:05  [ http-nio-80-exec-10:119469 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:10:05  [ http-nio-80-exec-10:119471 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:10:05  [ http-nio-80-exec-10:119471 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1269d17]
2018-06-09 16:10:05  [ http-nio-80-exec-10:119471 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:10:05  [ http-nio-80-exec-10:119472 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b279b91] was not registered for synchronization because synchronization is not active
2018-06-09 16:10:05  [ http-nio-80-exec-10:119472 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:10:05  [ http-nio-80-exec-10:119473 ] - [ DEBUG ]  ==>  Preparing: udpate user set isopen = ? where idcard = ? 
2018-06-09 16:10:05  [ http-nio-80-exec-10:119474 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b279b91]
2018-06-09 16:10:05  [ http-nio-80-exec-10:119475 ] - [ ERROR ]  ################# Exception ##################
2018-06-09 16:10:05  [ http-nio-80-exec-10:119476 ] - [ ERROR ]  ### RequestUrI: /open 
2018-06-09 16:10:05  [ http-nio-80-exec-10:119476 ] - [ ERROR ]  ### RequestParam: {isopen=1} 
2018-06-09 16:10:05  [ http-nio-80-exec-10:119476 ] - [ ERROR ]  ### exception: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.open(Unknown Source)
	at com.bankledger.controller.back.UserController.changeUser(UserController.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:202)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy106.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-09 16:10:54  [ http-nio-80-exec-9:168605 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:10:54  [ http-nio-80-exec-9:168605 ] - [ INFO ]  # user --->com.bankledger.entity.User@2e67db65
2018-06-09 16:10:54  [ http-nio-80-exec-9:168605 ] - [ INFO ]  # url --->/open
2018-06-09 16:10:54  [ http-nio-80-exec-9:168606 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:10:54  [ http-nio-80-exec-9:168606 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:10:54  [ http-nio-80-exec-9:168607 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a64bebe] was not registered for synchronization because synchronization is not active
2018-06-09 16:10:54  [ http-nio-80-exec-9:168607 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:10:54  [ http-nio-80-exec-9:168608 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:10:54  [ http-nio-80-exec-9:168608 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:10:54  [ http-nio-80-exec-9:168609 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:10:54  [ http-nio-80-exec-9:168610 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a64bebe]
2018-06-09 16:10:54  [ http-nio-80-exec-9:168611 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:10:54  [ http-nio-80-exec-9:168611 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@509cd5ce] was not registered for synchronization because synchronization is not active
2018-06-09 16:10:54  [ http-nio-80-exec-9:168611 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@2bef0d82] will not be managed by Spring
2018-06-09 16:10:54  [ http-nio-80-exec-9:168611 ] - [ DEBUG ]  ==>  Preparing: udpate user set isopen = ? where idcard = ? 
2018-06-09 16:10:54  [ http-nio-80-exec-9:168612 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@509cd5ce]
2018-06-09 16:10:54  [ http-nio-80-exec-9:168612 ] - [ ERROR ]  ################# Exception ##################
2018-06-09 16:10:54  [ http-nio-80-exec-9:168612 ] - [ ERROR ]  ### RequestUrI: /open 
2018-06-09 16:10:54  [ http-nio-80-exec-9:168613 ] - [ ERROR ]  ### RequestParam: {isopen=1} 
2018-06-09 16:10:54  [ http-nio-80-exec-9:168613 ] - [ ERROR ]  ### exception: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.open(Unknown Source)
	at com.bankledger.controller.back.UserController.changeUser(UserController.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:202)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy106.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-09 16:11:09  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-09 16:11:09  [ background-preinit:4 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-09 16:11:09  [ background-preinit:16 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:11:09  [ background-preinit:20 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:11:09  [ background-preinit:22 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:11:09  [ background-preinit:22 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:11:09  [ background-preinit:23 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:11:09  [ restartedMain:267 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 10548 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:11:09  [ restartedMain:268 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:11:09  [ restartedMain:269 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:11:09  [ background-preinit:271 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:11:09  [ background-preinit:278 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:11:09  [ background-preinit:280 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:11:09  [ background-preinit:282 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:11:09  [ background-preinit:283 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:11:09  [ background-preinit:284 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:11:11  [ restartedMain:1978 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:11:11  [ restartedMain:1985 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:11:11  [ restartedMain:1994 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:11:11  [ restartedMain:1998 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:11:11  [ restartedMain:1999 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:11:11  [ restartedMain:1999 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:11:11  [ restartedMain:2005 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:11:11  [ restartedMain:2008 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:11:11  [ restartedMain:2009 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:11:11  [ restartedMain:2009 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:11:11  [ restartedMain:2010 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:11:11  [ restartedMain:2010 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:11:11  [ restartedMain:2011 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:11:11  [ restartedMain:2011 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:11:12  [ restartedMain:2534 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:11:12  [ restartedMain:2534 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:11:12  [ restartedMain:2536 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:11:12  [ restartedMain:2538 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:11:12  [ restartedMain:2539 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:11:12  [ restartedMain:2540 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:11:12  [ restartedMain:2542 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:11:12  [ restartedMain:2542 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:11:12  [ restartedMain:2542 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:11:12  [ restartedMain:2543 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:11:12  [ restartedMain:2543 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:11:12  [ restartedMain:2551 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:11:12  [ restartedMain:2551 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:11:12  [ restartedMain:2552 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:11:12  [ restartedMain:2552 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:11:12  [ restartedMain:2553 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:11:14  [ restartedMain:4671 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-09 16:11:14  [ restartedMain:4741 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:11:14  [ restartedMain:5339 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:11:14  [ restartedMain:5339 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:11:14  [ restartedMain:5349 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:11:14  [ restartedMain:5350 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:11:14  [ restartedMain:5350 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:11:14  [ restartedMain:5351 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:11:14  [ restartedMain:5352 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:11:14  [ restartedMain:5352 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:11:14  [ restartedMain:5352 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:11:14  [ restartedMain:5353 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:11:14  [ restartedMain:5353 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:11:15  [ restartedMain:5366 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:11:15  [ restartedMain:5366 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:11:15  [ restartedMain:5366 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:11:15  [ restartedMain:5367 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:11:15  [ restartedMain:5368 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:11:16  [ restartedMain:6798 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:11:16  [ restartedMain:7005 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:11:17  [ restartedMain:8253 ] - [ INFO ]  Started App in 8.414 seconds (JVM running for 9.008)
2018-06-09 16:11:26  [ http-nio-80-exec-10:17310 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:11:26  [ http-nio-80-exec-10:17310 ] - [ INFO ]  # user --->null
2018-06-09 16:11:26  [ http-nio-80-exec-10:17311 ] - [ INFO ]  # url --->/set
2018-06-09 16:11:26  [ http-nio-80-exec-10:17312 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:11:26  [ http-nio-80-exec-10:17329 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:11:26  [ http-nio-80-exec-10:17330 ] - [ INFO ]  # user --->null
2018-06-09 16:11:26  [ http-nio-80-exec-10:17330 ] - [ INFO ]  # url --->/login
2018-06-09 16:11:26  [ http-nio-80-exec-10:17330 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:11:27  [ http-nio-80-exec-10:17413 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-09 16:11:27  [ http-nio-80-exec-10:17678 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2458bc80
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3a3dc0f
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@29f4994d
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-09 16:11:27  [ http-nio-80-exec-10:17702 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 16:11:32  [ http-nio-80-exec-9:22980 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:11:32  [ http-nio-80-exec-9:22981 ] - [ INFO ]  # user --->null
2018-06-09 16:11:32  [ http-nio-80-exec-9:22981 ] - [ INFO ]  # url --->/login
2018-06-09 16:11:32  [ http-nio-80-exec-9:22981 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:11:32  [ http-nio-80-exec-9:23035 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:11:32  [ http-nio-80-exec-9:23051 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17492335] was not registered for synchronization because synchronization is not active
2018-06-09 16:11:32  [ http-nio-80-exec-9:23132 ] - [ INFO ]  {dataSource-1} inited
2018-06-09 16:11:33  [ http-nio-80-exec-9:23373 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@4df85c00] will not be managed by Spring
2018-06-09 16:11:33  [ http-nio-80-exec-9:23377 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:11:33  [ http-nio-80-exec-9:23410 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-09 16:11:33  [ http-nio-80-exec-9:23429 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:11:33  [ http-nio-80-exec-9:23430 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17492335]
2018-06-09 16:11:33  [ http-nio-80-exec-8:23592 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:11:33  [ http-nio-80-exec-8:23592 ] - [ INFO ]  # user --->com.bankledger.entity.User@619c16e9
2018-06-09 16:11:33  [ http-nio-80-exec-8:23593 ] - [ INFO ]  # url --->/main
2018-06-09 16:11:33  [ http-nio-80-exec-8:23593 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:11:33  [ http-nio-80-exec-8:23593 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:11:33  [ http-nio-80-exec-8:23594 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f5bf4aa] was not registered for synchronization because synchronization is not active
2018-06-09 16:11:33  [ http-nio-80-exec-8:23594 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@4df85c00] will not be managed by Spring
2018-06-09 16:11:33  [ http-nio-80-exec-8:23594 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:11:33  [ http-nio-80-exec-8:23595 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:11:33  [ http-nio-80-exec-8:23608 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:11:33  [ http-nio-80-exec-8:23609 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f5bf4aa]
2018-06-09 16:11:33  [ http-nio-80-exec-8:23610 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:11:33  [ http-nio-80-exec-8:23610 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e4901de] was not registered for synchronization because synchronization is not active
2018-06-09 16:11:33  [ http-nio-80-exec-8:23610 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@4df85c00] will not be managed by Spring
2018-06-09 16:11:33  [ http-nio-80-exec-8:23611 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:11:33  [ http-nio-80-exec-8:23611 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:11:33  [ http-nio-80-exec-8:23614 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:11:33  [ http-nio-80-exec-8:23618 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e4901de]
2018-06-09 16:11:33  [ http-nio-80-exec-7:24223 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:11:33  [ http-nio-80-exec-7:24223 ] - [ INFO ]  # user --->com.bankledger.entity.User@619c16e9
2018-06-09 16:11:33  [ http-nio-80-exec-7:24224 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:11:33  [ http-nio-80-exec-7:24224 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:11:33  [ http-nio-80-exec-7:24237 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:11:33  [ http-nio-80-exec-7:24237 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633549f1] was not registered for synchronization because synchronization is not active
2018-06-09 16:11:33  [ http-nio-80-exec-7:24238 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@4df85c00] will not be managed by Spring
2018-06-09 16:11:33  [ http-nio-80-exec-7:24238 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:11:33  [ http-nio-80-exec-7:24245 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:11:33  [ http-nio-80-exec-7:24248 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:11:33  [ http-nio-80-exec-7:24248 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633549f1]
2018-06-09 16:11:33  [ http-nio-80-exec-7:24252 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:11:33  [ http-nio-80-exec-7:24253 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fb2037b] was not registered for synchronization because synchronization is not active
2018-06-09 16:11:34  [ http-nio-80-exec-7:24361 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 16:11:34  [ http-nio-80-exec-7:24465 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@4df85c00] will not be managed by Spring
2018-06-09 16:11:34  [ http-nio-80-exec-7:24466 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:11:34  [ http-nio-80-exec-7:24468 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:11:34  [ http-nio-80-exec-7:24470 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:11:34  [ http-nio-80-exec-7:24471 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fb2037b]
2018-06-09 16:11:34  [ http-nio-80-exec-6:25298 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:11:34  [ http-nio-80-exec-6:25299 ] - [ INFO ]  # user --->com.bankledger.entity.User@619c16e9
2018-06-09 16:11:34  [ http-nio-80-exec-6:25299 ] - [ INFO ]  # url --->/set
2018-06-09 16:11:34  [ http-nio-80-exec-6:25299 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:11:36  [ http-nio-80-exec-4:26390 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:11:36  [ http-nio-80-exec-4:26391 ] - [ INFO ]  # user --->com.bankledger.entity.User@619c16e9
2018-06-09 16:11:36  [ http-nio-80-exec-4:26391 ] - [ INFO ]  # url --->/open
2018-06-09 16:11:36  [ http-nio-80-exec-4:26391 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:11:36  [ http-nio-80-exec-4:26393 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:11:36  [ http-nio-80-exec-4:26393 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e79f96b] was not registered for synchronization because synchronization is not active
2018-06-09 16:11:36  [ http-nio-80-exec-4:26393 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@4df85c00] will not be managed by Spring
2018-06-09 16:11:36  [ http-nio-80-exec-4:26394 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:11:36  [ http-nio-80-exec-4:26394 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:11:36  [ http-nio-80-exec-4:26396 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:11:36  [ http-nio-80-exec-4:26396 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e79f96b]
2018-06-09 16:11:36  [ http-nio-80-exec-4:26398 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:11:36  [ http-nio-80-exec-4:26399 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6b0c1f] was not registered for synchronization because synchronization is not active
2018-06-09 16:11:36  [ http-nio-80-exec-4:26400 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@4df85c00] will not be managed by Spring
2018-06-09 16:11:36  [ http-nio-80-exec-4:26400 ] - [ DEBUG ]  ==>  Preparing: udpate user set isopen = ? where idcard = ? 
2018-06-09 16:11:36  [ http-nio-80-exec-4:26403 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6b0c1f]
2018-06-09 16:11:36  [ http-nio-80-exec-4:26406 ] - [ ERROR ]  ################# Exception ##################
2018-06-09 16:11:36  [ http-nio-80-exec-4:26407 ] - [ ERROR ]  ### RequestUrI: /open 
2018-06-09 16:11:36  [ http-nio-80-exec-4:26407 ] - [ ERROR ]  ### RequestParam: {isopen=1} 
2018-06-09 16:11:36  [ http-nio-80-exec-4:26408 ] - [ ERROR ]  ### exception: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy86.open(Unknown Source)
	at com.bankledger.controller.back.UserController.changeUser(UserController.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:202)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy106.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-09 16:11:59  [ http-nio-80-exec-3:49444 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:11:59  [ http-nio-80-exec-3:49445 ] - [ INFO ]  # user --->com.bankledger.entity.User@619c16e9
2018-06-09 16:11:59  [ http-nio-80-exec-3:49445 ] - [ INFO ]  # url --->/open
2018-06-09 16:11:59  [ http-nio-80-exec-3:49445 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:12:06  [ http-nio-80-exec-3:56745 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:12:06  [ http-nio-80-exec-3:56746 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88f0889] was not registered for synchronization because synchronization is not active
2018-06-09 16:12:06  [ http-nio-80-exec-3:56746 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@4df85c00] will not be managed by Spring
2018-06-09 16:12:06  [ http-nio-80-exec-3:56746 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:12:06  [ http-nio-80-exec-3:56747 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:12:06  [ http-nio-80-exec-3:56750 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:12:06  [ http-nio-80-exec-3:56751 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88f0889]
2018-06-09 16:12:26  [ http-nio-80-exec-3:76765 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:12:26  [ http-nio-80-exec-3:76767 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ce6ef4] was not registered for synchronization because synchronization is not active
2018-06-09 16:12:26  [ http-nio-80-exec-3:76767 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@4df85c00] will not be managed by Spring
2018-06-09 16:12:26  [ http-nio-80-exec-3:76767 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:12:26  [ http-nio-80-exec-3:76768 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:12:26  [ http-nio-80-exec-3:76770 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:12:26  [ http-nio-80-exec-3:76771 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37ce6ef4]
2018-06-09 16:12:26  [ http-nio-80-exec-3:76771 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:12:26  [ http-nio-80-exec-3:76772 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6327714d] was not registered for synchronization because synchronization is not active
2018-06-09 16:12:26  [ http-nio-80-exec-3:76772 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@4df85c00] will not be managed by Spring
2018-06-09 16:12:26  [ http-nio-80-exec-3:76772 ] - [ DEBUG ]  ==>  Preparing: udpate user set isopen = ? where idcard = ? 
2018-06-09 16:12:26  [ http-nio-80-exec-3:76773 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6327714d]
2018-06-09 16:12:26  [ http-nio-80-exec-3:76774 ] - [ ERROR ]  ################# Exception ##################
2018-06-09 16:12:26  [ http-nio-80-exec-3:76775 ] - [ ERROR ]  ### RequestUrI: /open 
2018-06-09 16:12:26  [ http-nio-80-exec-3:76775 ] - [ ERROR ]  ### RequestParam: {isopen=1} 
2018-06-09 16:12:26  [ http-nio-80-exec-3:76775 ] - [ ERROR ]  ### exception: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy86.open(Unknown Source)
	at com.bankledger.controller.back.UserController.changeUser(UserController.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:202)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy106.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-09 16:12:53  [ Thread-6:103642 ] - [ INFO ]  {dataSource-1} closed
2018-06-09 16:12:53  [ restartedMain:104026 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 10548 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:12:53  [ restartedMain:104026 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:12:53  [ restartedMain:104027 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:12:54  [ restartedMain:104794 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:12:54  [ restartedMain:104795 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:12:54  [ restartedMain:104804 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:12:54  [ restartedMain:104804 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:12:54  [ restartedMain:104805 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:12:54  [ restartedMain:104805 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:12:54  [ restartedMain:104810 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:12:54  [ restartedMain:104810 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:12:54  [ restartedMain:104810 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:12:54  [ restartedMain:104810 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:12:54  [ restartedMain:104810 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:12:54  [ restartedMain:104810 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:12:54  [ restartedMain:104811 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:12:54  [ restartedMain:104811 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:12:54  [ restartedMain:104969 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:12:54  [ restartedMain:104970 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:12:54  [ restartedMain:104971 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:12:54  [ restartedMain:104971 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:12:54  [ restartedMain:104971 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:12:54  [ restartedMain:104972 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:12:54  [ restartedMain:104973 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:12:54  [ restartedMain:104973 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:12:54  [ restartedMain:104973 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:12:54  [ restartedMain:104974 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:12:54  [ restartedMain:104974 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:12:54  [ restartedMain:104997 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:12:54  [ restartedMain:104998 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:12:54  [ restartedMain:105005 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:12:54  [ restartedMain:105007 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:12:54  [ restartedMain:105007 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:12:55  [ restartedMain:105569 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:12:55  [ restartedMain:105810 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:12:55  [ restartedMain:105811 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:12:55  [ restartedMain:105813 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:12:55  [ restartedMain:105814 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:12:55  [ restartedMain:105814 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:12:55  [ restartedMain:105814 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:12:55  [ restartedMain:105815 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:12:55  [ restartedMain:105815 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:12:55  [ restartedMain:105815 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:12:55  [ restartedMain:105816 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:12:55  [ restartedMain:105816 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:12:55  [ restartedMain:105822 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:12:55  [ restartedMain:105823 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:12:55  [ restartedMain:105824 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:12:55  [ restartedMain:105824 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:12:55  [ restartedMain:105824 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:12:55  [ restartedMain:106328 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:12:56  [ restartedMain:106516 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:12:57  [ restartedMain:107421 ] - [ INFO ]  Started App in 3.45 seconds (JVM running for 108.176)
2018-06-09 16:13:33  [ http-nio-80-exec-1:143555 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:13:33  [ http-nio-80-exec-1:143555 ] - [ INFO ]  # user --->null
2018-06-09 16:13:33  [ http-nio-80-exec-1:143555 ] - [ INFO ]  # url --->/set
2018-06-09 16:13:33  [ http-nio-80-exec-1:143556 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:13:33  [ http-nio-80-exec-2:143562 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:13:33  [ http-nio-80-exec-2:143562 ] - [ INFO ]  # user --->null
2018-06-09 16:13:33  [ http-nio-80-exec-2:143562 ] - [ INFO ]  # url --->/login
2018-06-09 16:13:33  [ http-nio-80-exec-2:143562 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:13:33  [ http-nio-80-exec-2:143575 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-09 16:13:33  [ http-nio-80-exec-2:143598 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2458bc80
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3a3dc0f
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@29f4994d
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-09 16:13:33  [ http-nio-80-exec-2:143615 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 16:13:38  [ http-nio-80-exec-3:148531 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:13:38  [ http-nio-80-exec-3:148532 ] - [ INFO ]  # user --->null
2018-06-09 16:13:38  [ http-nio-80-exec-3:148532 ] - [ INFO ]  # url --->/login
2018-06-09 16:13:38  [ http-nio-80-exec-3:148532 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:13:38  [ http-nio-80-exec-3:148539 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:13:38  [ http-nio-80-exec-3:148539 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a269d9] was not registered for synchronization because synchronization is not active
2018-06-09 16:13:38  [ http-nio-80-exec-3:148541 ] - [ INFO ]  {dataSource-2} inited
2018-06-09 16:13:38  [ http-nio-80-exec-3:148548 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7765889d] will not be managed by Spring
2018-06-09 16:13:38  [ http-nio-80-exec-3:148549 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:13:38  [ http-nio-80-exec-3:148551 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-09 16:13:38  [ http-nio-80-exec-3:148554 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:13:38  [ http-nio-80-exec-3:148555 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a269d9]
2018-06-09 16:13:38  [ http-nio-80-exec-5:148575 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:13:38  [ http-nio-80-exec-5:148576 ] - [ INFO ]  # user --->com.bankledger.entity.User@222ac6f8
2018-06-09 16:13:38  [ http-nio-80-exec-5:148576 ] - [ INFO ]  # url --->/main
2018-06-09 16:13:38  [ http-nio-80-exec-5:148576 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:13:38  [ http-nio-80-exec-5:148576 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:13:38  [ http-nio-80-exec-5:148577 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ced3ccd] was not registered for synchronization because synchronization is not active
2018-06-09 16:13:38  [ http-nio-80-exec-5:148577 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7765889d] will not be managed by Spring
2018-06-09 16:13:38  [ http-nio-80-exec-5:148577 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:13:38  [ http-nio-80-exec-5:148579 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:13:38  [ http-nio-80-exec-5:148581 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:13:38  [ http-nio-80-exec-5:148581 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ced3ccd]
2018-06-09 16:13:38  [ http-nio-80-exec-5:148581 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:13:38  [ http-nio-80-exec-5:148582 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dffc9b9] was not registered for synchronization because synchronization is not active
2018-06-09 16:13:38  [ http-nio-80-exec-5:148583 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7765889d] will not be managed by Spring
2018-06-09 16:13:38  [ http-nio-80-exec-5:148583 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:13:38  [ http-nio-80-exec-5:148583 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:13:38  [ http-nio-80-exec-5:148586 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:13:38  [ http-nio-80-exec-5:148587 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dffc9b9]
2018-06-09 16:13:38  [ http-nio-80-exec-4:148978 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:13:38  [ http-nio-80-exec-4:148978 ] - [ INFO ]  # user --->com.bankledger.entity.User@222ac6f8
2018-06-09 16:13:38  [ http-nio-80-exec-4:148978 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:13:38  [ http-nio-80-exec-4:148978 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:13:38  [ http-nio-80-exec-4:148988 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:13:38  [ http-nio-80-exec-4:148988 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@640b0017] was not registered for synchronization because synchronization is not active
2018-06-09 16:13:38  [ http-nio-80-exec-4:148989 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7765889d] will not be managed by Spring
2018-06-09 16:13:38  [ http-nio-80-exec-4:148989 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:13:38  [ http-nio-80-exec-4:148989 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:13:38  [ http-nio-80-exec-4:148991 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:13:38  [ http-nio-80-exec-4:148991 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@640b0017]
2018-06-09 16:13:38  [ http-nio-80-exec-4:148992 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:13:38  [ http-nio-80-exec-4:148992 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54d47de7] was not registered for synchronization because synchronization is not active
2018-06-09 16:13:38  [ http-nio-80-exec-4:148993 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 16:13:38  [ http-nio-80-exec-4:149009 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7765889d] will not be managed by Spring
2018-06-09 16:13:38  [ http-nio-80-exec-4:149009 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:13:38  [ http-nio-80-exec-4:149010 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:13:38  [ http-nio-80-exec-4:149013 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:13:38  [ http-nio-80-exec-4:149014 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54d47de7]
2018-06-09 16:13:40  [ http-nio-80-exec-9:150360 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:13:40  [ http-nio-80-exec-9:150360 ] - [ INFO ]  # user --->com.bankledger.entity.User@222ac6f8
2018-06-09 16:13:40  [ http-nio-80-exec-9:150360 ] - [ INFO ]  # url --->/set
2018-06-09 16:13:40  [ http-nio-80-exec-9:150361 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:13:41  [ http-nio-80-exec-10:151403 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:13:41  [ http-nio-80-exec-10:151403 ] - [ INFO ]  # user --->com.bankledger.entity.User@222ac6f8
2018-06-09 16:13:41  [ http-nio-80-exec-10:151404 ] - [ INFO ]  # url --->/open
2018-06-09 16:13:41  [ http-nio-80-exec-10:151404 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:13:45  [ http-nio-80-exec-10:155589 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:13:45  [ http-nio-80-exec-10:155590 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bcc3595] was not registered for synchronization because synchronization is not active
2018-06-09 16:13:45  [ http-nio-80-exec-10:155590 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7765889d] will not be managed by Spring
2018-06-09 16:13:45  [ http-nio-80-exec-10:155592 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:13:45  [ http-nio-80-exec-10:155593 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:13:45  [ http-nio-80-exec-10:155595 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:13:45  [ http-nio-80-exec-10:155596 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bcc3595]
2018-06-09 16:13:45  [ http-nio-80-exec-10:155597 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:13:45  [ http-nio-80-exec-10:155597 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73cf804a] was not registered for synchronization because synchronization is not active
2018-06-09 16:13:45  [ http-nio-80-exec-10:155597 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7765889d] will not be managed by Spring
2018-06-09 16:13:45  [ http-nio-80-exec-10:155597 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:13:45  [ http-nio-80-exec-10:155600 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73cf804a]
2018-06-09 16:13:45  [ http-nio-80-exec-10:155601 ] - [ ERROR ]  ################# Exception ##################
2018-06-09 16:13:45  [ http-nio-80-exec-10:155601 ] - [ ERROR ]  ### RequestUrI: /open 
2018-06-09 16:13:45  [ http-nio-80-exec-10:155601 ] - [ ERROR ]  ### RequestParam: {isopen=1} 
2018-06-09 16:13:45  [ http-nio-80-exec-10:155602 ] - [ ERROR ]  ### exception: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy114.open(Unknown Source)
	at com.bankledger.controller.back.UserController.changeUser(UserController.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'isCard' not found. Available parameters are [isopen, idCard, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:202)
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy106.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-09 16:15:59  [ Thread-10:290211 ] - [ INFO ]  {dataSource-2} closed
2018-06-09 16:16:00  [ restartedMain:290530 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 10548 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:16:00  [ restartedMain:290530 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:16:00  [ restartedMain:290531 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:16:01  [ restartedMain:291675 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:16:01  [ restartedMain:291681 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:16:01  [ restartedMain:291699 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:16:01  [ restartedMain:291701 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:16:01  [ restartedMain:291702 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:16:01  [ restartedMain:291703 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:16:01  [ restartedMain:291706 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:16:01  [ restartedMain:291708 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:16:01  [ restartedMain:291709 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:16:01  [ restartedMain:291710 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:16:01  [ restartedMain:291711 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:16:01  [ restartedMain:291712 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:16:01  [ restartedMain:291713 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:16:01  [ restartedMain:291714 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:16:01  [ restartedMain:291924 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:16:01  [ restartedMain:291928 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:16:01  [ restartedMain:291929 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:16:01  [ restartedMain:291930 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:16:01  [ restartedMain:291931 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:16:01  [ restartedMain:291933 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:16:01  [ restartedMain:291934 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:16:01  [ restartedMain:291936 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:16:01  [ restartedMain:291938 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:16:01  [ restartedMain:291939 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:16:01  [ restartedMain:291940 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:16:01  [ restartedMain:291964 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:16:01  [ restartedMain:291964 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:16:01  [ restartedMain:291964 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:16:01  [ restartedMain:291964 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:16:01  [ restartedMain:291964 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:16:02  [ restartedMain:292608 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:16:02  [ restartedMain:292881 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:16:02  [ restartedMain:292882 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:16:02  [ restartedMain:292884 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:16:02  [ restartedMain:292885 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:16:02  [ restartedMain:292886 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:16:02  [ restartedMain:292887 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:16:02  [ restartedMain:292891 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:16:02  [ restartedMain:292892 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:16:02  [ restartedMain:292894 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:16:02  [ restartedMain:292895 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:16:02  [ restartedMain:292896 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:16:02  [ restartedMain:292903 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:16:02  [ restartedMain:292904 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:16:02  [ restartedMain:292904 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:16:02  [ restartedMain:292906 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:16:02  [ restartedMain:292907 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:16:02  [ restartedMain:293304 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:16:03  [ restartedMain:293371 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:16:03  [ restartedMain:293967 ] - [ INFO ]  Started App in 3.481 seconds (JVM running for 294.722)
2018-06-09 16:17:31  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-09 16:17:31  [ background-preinit:2 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-09 16:17:31  [ background-preinit:20 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:17:31  [ background-preinit:30 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:17:31  [ background-preinit:31 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:17:31  [ background-preinit:32 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:17:31  [ background-preinit:32 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:17:31  [ restartedMain:258 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 11684 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:17:31  [ restartedMain:258 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:17:31  [ restartedMain:258 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:17:31  [ background-preinit:266 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:17:31  [ background-preinit:269 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:17:31  [ background-preinit:272 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:17:31  [ background-preinit:273 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:17:31  [ background-preinit:273 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:17:31  [ background-preinit:273 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:17:33  [ restartedMain:1725 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:17:33  [ restartedMain:1732 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:17:33  [ restartedMain:1743 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:17:33  [ restartedMain:1745 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:17:33  [ restartedMain:1746 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:17:33  [ restartedMain:1746 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:17:33  [ restartedMain:1753 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:17:33  [ restartedMain:1755 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:17:33  [ restartedMain:1755 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:17:33  [ restartedMain:1755 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:17:33  [ restartedMain:1756 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:17:33  [ restartedMain:1756 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:17:33  [ restartedMain:1757 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:17:33  [ restartedMain:1757 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:17:33  [ restartedMain:2260 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:17:33  [ restartedMain:2260 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:17:33  [ restartedMain:2261 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:17:33  [ restartedMain:2263 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:17:33  [ restartedMain:2265 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:17:33  [ restartedMain:2265 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:17:33  [ restartedMain:2267 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:17:33  [ restartedMain:2268 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:17:33  [ restartedMain:2268 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:17:33  [ restartedMain:2268 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:17:33  [ restartedMain:2269 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:17:33  [ restartedMain:2275 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:17:33  [ restartedMain:2275 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:17:33  [ restartedMain:2278 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:17:33  [ restartedMain:2279 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:17:33  [ restartedMain:2279 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:17:35  [ restartedMain:4314 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-09 16:17:35  [ restartedMain:4384 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:17:36  [ restartedMain:4948 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:17:36  [ restartedMain:4949 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:17:36  [ restartedMain:4959 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:17:36  [ restartedMain:4960 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:17:36  [ restartedMain:4960 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:17:36  [ restartedMain:4961 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:17:36  [ restartedMain:4961 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:17:36  [ restartedMain:4962 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:17:36  [ restartedMain:4962 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:17:36  [ restartedMain:4963 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:17:36  [ restartedMain:4963 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:17:36  [ restartedMain:4971 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:17:36  [ restartedMain:4972 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:17:36  [ restartedMain:4972 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:17:36  [ restartedMain:4973 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:17:36  [ restartedMain:4973 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:17:37  [ restartedMain:5996 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:17:37  [ restartedMain:6161 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:17:38  [ restartedMain:7206 ] - [ INFO ]  Started App in 7.382 seconds (JVM running for 8.035)
2018-06-09 16:17:56  [ http-nio-80-exec-1:24577 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:17:56  [ http-nio-80-exec-1:24578 ] - [ INFO ]  # user --->null
2018-06-09 16:17:56  [ http-nio-80-exec-1:24578 ] - [ INFO ]  # url --->/set
2018-06-09 16:17:56  [ http-nio-80-exec-1:24578 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:17:56  [ http-nio-80-exec-2:24592 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:17:56  [ http-nio-80-exec-2:24592 ] - [ INFO ]  # user --->null
2018-06-09 16:17:56  [ http-nio-80-exec-2:24592 ] - [ INFO ]  # url --->/login
2018-06-09 16:17:56  [ http-nio-80-exec-2:24593 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:17:56  [ http-nio-80-exec-2:24669 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-09 16:17:56  [ http-nio-80-exec-2:24913 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@643e710c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@68aa0007
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@296ed88d
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-09 16:17:56  [ http-nio-80-exec-2:24922 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 16:18:01  [ http-nio-80-exec-3:29799 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:18:01  [ http-nio-80-exec-3:29801 ] - [ INFO ]  # user --->null
2018-06-09 16:18:01  [ http-nio-80-exec-3:29801 ] - [ INFO ]  # url --->/login
2018-06-09 16:18:01  [ http-nio-80-exec-3:29801 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:18:01  [ http-nio-80-exec-3:29852 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:01  [ http-nio-80-exec-3:29869 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b0c447] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:01  [ http-nio-80-exec-3:29963 ] - [ INFO ]  {dataSource-1} inited
2018-06-09 16:18:01  [ http-nio-80-exec-3:30218 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:01  [ http-nio-80-exec-3:30223 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:18:01  [ http-nio-80-exec-3:30250 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-09 16:18:01  [ http-nio-80-exec-3:30264 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:18:01  [ http-nio-80-exec-3:30265 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b0c447]
2018-06-09 16:18:01  [ http-nio-80-exec-9:30381 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:18:01  [ http-nio-80-exec-9:30382 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:18:01  [ http-nio-80-exec-9:30382 ] - [ INFO ]  # url --->/main
2018-06-09 16:18:01  [ http-nio-80-exec-9:30382 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:18:01  [ http-nio-80-exec-9:30385 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:01  [ http-nio-80-exec-9:30385 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fa845a0] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:01  [ http-nio-80-exec-9:30386 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:01  [ http-nio-80-exec-9:30388 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:18:01  [ http-nio-80-exec-9:30388 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:18:01  [ http-nio-80-exec-9:30391 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:18:01  [ http-nio-80-exec-9:30391 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fa845a0]
2018-06-09 16:18:01  [ http-nio-80-exec-9:30392 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:01  [ http-nio-80-exec-9:30392 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebab0d4] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:01  [ http-nio-80-exec-9:30392 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:01  [ http-nio-80-exec-9:30393 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:18:01  [ http-nio-80-exec-9:30393 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:18:01  [ http-nio-80-exec-9:30395 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:18:01  [ http-nio-80-exec-9:30396 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebab0d4]
2018-06-09 16:18:02  [ http-nio-80-exec-10:30966 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:18:02  [ http-nio-80-exec-10:30966 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:18:02  [ http-nio-80-exec-10:30966 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:18:02  [ http-nio-80-exec-10:30966 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:18:02  [ http-nio-80-exec-10:30985 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:02  [ http-nio-80-exec-10:30986 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5339029b] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:02  [ http-nio-80-exec-10:30995 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:02  [ http-nio-80-exec-10:31001 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:18:02  [ http-nio-80-exec-10:31002 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:18:02  [ http-nio-80-exec-10:31010 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:18:02  [ http-nio-80-exec-10:31011 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5339029b]
2018-06-09 16:18:02  [ http-nio-80-exec-10:31014 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:02  [ http-nio-80-exec-10:31015 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488a5e20] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:02  [ http-nio-80-exec-10:31180 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 16:18:02  [ http-nio-80-exec-10:31249 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:02  [ http-nio-80-exec-10:31250 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:18:02  [ http-nio-80-exec-10:31253 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:18:02  [ http-nio-80-exec-10:31258 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:18:02  [ http-nio-80-exec-10:31262 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488a5e20]
2018-06-09 16:18:04  [ http-nio-80-exec-8:33088 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:18:04  [ http-nio-80-exec-8:33090 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:18:04  [ http-nio-80-exec-8:33090 ] - [ INFO ]  # url --->/set
2018-06-09 16:18:04  [ http-nio-80-exec-8:33090 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:18:08  [ http-nio-80-exec-6:37414 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:18:08  [ http-nio-80-exec-6:37414 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:18:08  [ http-nio-80-exec-6:37414 ] - [ INFO ]  # url --->/open
2018-06-09 16:18:08  [ http-nio-80-exec-6:37415 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:18:08  [ http-nio-80-exec-6:37416 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:08  [ http-nio-80-exec-6:37416 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@425152cc] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:08  [ http-nio-80-exec-6:37417 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:08  [ http-nio-80-exec-6:37417 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:18:08  [ http-nio-80-exec-6:37418 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:18:08  [ http-nio-80-exec-6:37419 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:18:08  [ http-nio-80-exec-6:37420 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@425152cc]
2018-06-09 16:18:08  [ http-nio-80-exec-6:37422 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:08  [ http-nio-80-exec-6:37422 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6343a7b8] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:08  [ http-nio-80-exec-6:37422 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:08  [ http-nio-80-exec-6:37423 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:18:08  [ http-nio-80-exec-6:37423 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:18:08  [ http-nio-80-exec-6:37450 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:18:08  [ http-nio-80-exec-6:37451 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6343a7b8]
2018-06-09 16:18:13  [ http-nio-80-exec-5:41685 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:18:13  [ http-nio-80-exec-5:41685 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:18:13  [ http-nio-80-exec-5:41685 ] - [ INFO ]  # url --->/open
2018-06-09 16:18:13  [ http-nio-80-exec-5:41685 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:18:13  [ http-nio-80-exec-5:41687 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:13  [ http-nio-80-exec-5:41687 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52cfb627] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:13  [ http-nio-80-exec-5:41688 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:13  [ http-nio-80-exec-5:41688 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:18:13  [ http-nio-80-exec-5:41689 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:18:13  [ http-nio-80-exec-5:41691 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:18:13  [ http-nio-80-exec-5:41692 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52cfb627]
2018-06-09 16:18:13  [ http-nio-80-exec-5:41692 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:13  [ http-nio-80-exec-5:41692 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e4ab3a] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:13  [ http-nio-80-exec-5:41693 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:13  [ http-nio-80-exec-5:41693 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:18:13  [ http-nio-80-exec-5:41694 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:18:13  [ http-nio-80-exec-5:41714 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:18:13  [ http-nio-80-exec-5:41714 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e4ab3a]
2018-06-09 16:18:21  [ http-nio-80-exec-4:49492 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:18:21  [ http-nio-80-exec-4:49493 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:18:21  [ http-nio-80-exec-4:49493 ] - [ INFO ]  # url --->/open
2018-06-09 16:18:21  [ http-nio-80-exec-4:49493 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:18:21  [ http-nio-80-exec-4:49494 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:21  [ http-nio-80-exec-4:49495 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c71349] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:21  [ http-nio-80-exec-4:49495 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:21  [ http-nio-80-exec-4:49495 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:18:21  [ http-nio-80-exec-4:49496 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:18:21  [ http-nio-80-exec-4:49500 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:18:21  [ http-nio-80-exec-4:49500 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c71349]
2018-06-09 16:18:21  [ http-nio-80-exec-4:49501 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:21  [ http-nio-80-exec-4:49501 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d9f8ef] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:21  [ http-nio-80-exec-4:49501 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:21  [ http-nio-80-exec-4:49501 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:18:21  [ http-nio-80-exec-4:49502 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:18:21  [ http-nio-80-exec-4:49533 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:18:21  [ http-nio-80-exec-4:49534 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d9f8ef]
2018-06-09 16:18:58  [ http-nio-80-exec-1:86638 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:18:58  [ http-nio-80-exec-1:86638 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:18:58  [ http-nio-80-exec-1:86638 ] - [ INFO ]  # url --->/open
2018-06-09 16:18:58  [ http-nio-80-exec-1:86638 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:18:58  [ http-nio-80-exec-1:86639 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:58  [ http-nio-80-exec-1:86640 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@962a1f2] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:58  [ http-nio-80-exec-1:86640 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:58  [ http-nio-80-exec-1:86641 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:18:58  [ http-nio-80-exec-1:86641 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:18:58  [ http-nio-80-exec-1:86646 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:18:58  [ http-nio-80-exec-1:86647 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@962a1f2]
2018-06-09 16:18:58  [ http-nio-80-exec-1:86648 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:18:58  [ http-nio-80-exec-1:86648 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713d81fd] was not registered for synchronization because synchronization is not active
2018-06-09 16:18:58  [ http-nio-80-exec-1:86649 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:18:58  [ http-nio-80-exec-1:86649 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:18:58  [ http-nio-80-exec-1:86650 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:18:58  [ http-nio-80-exec-1:86682 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:18:58  [ http-nio-80-exec-1:86682 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713d81fd]
2018-06-09 16:19:02  [ http-nio-80-exec-2:90814 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:19:02  [ http-nio-80-exec-2:90814 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:19:02  [ http-nio-80-exec-2:90815 ] - [ INFO ]  # url --->/open
2018-06-09 16:19:02  [ http-nio-80-exec-2:90815 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:19:02  [ http-nio-80-exec-2:90815 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:19:02  [ http-nio-80-exec-2:90816 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50bf188] was not registered for synchronization because synchronization is not active
2018-06-09 16:19:02  [ http-nio-80-exec-2:90816 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:19:02  [ http-nio-80-exec-2:90816 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:19:02  [ http-nio-80-exec-2:90817 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:19:02  [ http-nio-80-exec-2:90820 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:19:02  [ http-nio-80-exec-2:90821 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50bf188]
2018-06-09 16:19:02  [ http-nio-80-exec-2:90821 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:19:02  [ http-nio-80-exec-2:90821 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d6135ed] was not registered for synchronization because synchronization is not active
2018-06-09 16:19:02  [ http-nio-80-exec-2:90822 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:19:02  [ http-nio-80-exec-2:90822 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:19:02  [ http-nio-80-exec-2:90823 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:19:02  [ http-nio-80-exec-2:90846 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:19:02  [ http-nio-80-exec-2:90847 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d6135ed]
2018-06-09 16:20:16  [ http-nio-80-exec-9:165409 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:20:16  [ http-nio-80-exec-9:165409 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:20:16  [ http-nio-80-exec-9:165409 ] - [ INFO ]  # url --->/set
2018-06-09 16:20:16  [ http-nio-80-exec-9:165410 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:20:21  [ http-nio-80-exec-8:170303 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:20:21  [ http-nio-80-exec-8:170304 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:20:21  [ http-nio-80-exec-8:170304 ] - [ INFO ]  # url --->/open
2018-06-09 16:20:21  [ http-nio-80-exec-8:170304 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:20:21  [ http-nio-80-exec-8:170305 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:20:21  [ http-nio-80-exec-8:170306 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c95e25b] was not registered for synchronization because synchronization is not active
2018-06-09 16:20:21  [ http-nio-80-exec-8:170313 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:20:21  [ http-nio-80-exec-8:170313 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:20:21  [ http-nio-80-exec-8:170314 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:20:21  [ http-nio-80-exec-8:170316 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:20:21  [ http-nio-80-exec-8:170318 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c95e25b]
2018-06-09 16:20:21  [ http-nio-80-exec-8:170318 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:20:21  [ http-nio-80-exec-8:170319 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d377caa] was not registered for synchronization because synchronization is not active
2018-06-09 16:20:21  [ http-nio-80-exec-8:170319 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:20:21  [ http-nio-80-exec-8:170319 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:20:21  [ http-nio-80-exec-8:170319 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:20:21  [ http-nio-80-exec-8:170361 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:20:21  [ http-nio-80-exec-8:170362 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d377caa]
2018-06-09 16:20:23  [ http-nio-80-exec-7:172092 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:20:23  [ http-nio-80-exec-7:172092 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:20:23  [ http-nio-80-exec-7:172093 ] - [ INFO ]  # url --->/open
2018-06-09 16:20:23  [ http-nio-80-exec-7:172093 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:20:23  [ http-nio-80-exec-7:172093 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:20:23  [ http-nio-80-exec-7:172094 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@86d1866] was not registered for synchronization because synchronization is not active
2018-06-09 16:20:23  [ http-nio-80-exec-7:172094 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:20:23  [ http-nio-80-exec-7:172095 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:20:23  [ http-nio-80-exec-7:172095 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:20:23  [ http-nio-80-exec-7:172097 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:20:23  [ http-nio-80-exec-7:172097 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@86d1866]
2018-06-09 16:20:23  [ http-nio-80-exec-7:172098 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:20:23  [ http-nio-80-exec-7:172098 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fda8220] was not registered for synchronization because synchronization is not active
2018-06-09 16:20:23  [ http-nio-80-exec-7:172098 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:20:23  [ http-nio-80-exec-7:172098 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:20:23  [ http-nio-80-exec-7:172099 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:20:23  [ http-nio-80-exec-7:172119 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:20:23  [ http-nio-80-exec-7:172119 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fda8220]
2018-06-09 16:21:08  [ http-nio-80-exec-6:216816 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:21:08  [ http-nio-80-exec-6:216816 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:21:08  [ http-nio-80-exec-6:216816 ] - [ INFO ]  # url --->/set
2018-06-09 16:21:08  [ http-nio-80-exec-6:216816 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:21:12  [ http-nio-80-exec-4:220484 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:21:12  [ http-nio-80-exec-4:220485 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:21:12  [ http-nio-80-exec-4:220485 ] - [ INFO ]  # url --->/open
2018-06-09 16:21:12  [ http-nio-80-exec-4:220485 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:21:12  [ http-nio-80-exec-4:220485 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:21:12  [ http-nio-80-exec-4:220486 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1433218d] was not registered for synchronization because synchronization is not active
2018-06-09 16:21:12  [ http-nio-80-exec-4:220486 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:21:12  [ http-nio-80-exec-4:220486 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:21:12  [ http-nio-80-exec-4:220487 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:21:12  [ http-nio-80-exec-4:220488 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:21:12  [ http-nio-80-exec-4:220488 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1433218d]
2018-06-09 16:21:12  [ http-nio-80-exec-4:220489 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:21:12  [ http-nio-80-exec-4:220489 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1844be0e] was not registered for synchronization because synchronization is not active
2018-06-09 16:21:12  [ http-nio-80-exec-4:220489 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:21:12  [ http-nio-80-exec-4:220489 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:21:12  [ http-nio-80-exec-4:220490 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:21:12  [ http-nio-80-exec-4:220520 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:21:12  [ http-nio-80-exec-4:220522 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1844be0e]
2018-06-09 16:21:18  [ http-nio-80-exec-1:226578 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:21:18  [ http-nio-80-exec-1:226579 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:21:18  [ http-nio-80-exec-1:226579 ] - [ INFO ]  # url --->/open
2018-06-09 16:21:18  [ http-nio-80-exec-1:226579 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:21:18  [ http-nio-80-exec-1:226579 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:21:18  [ http-nio-80-exec-1:226580 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@710acf65] was not registered for synchronization because synchronization is not active
2018-06-09 16:21:18  [ http-nio-80-exec-1:226580 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:21:18  [ http-nio-80-exec-1:226581 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:21:18  [ http-nio-80-exec-1:226581 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:21:18  [ http-nio-80-exec-1:226582 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:21:18  [ http-nio-80-exec-1:226583 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@710acf65]
2018-06-09 16:21:18  [ http-nio-80-exec-1:226583 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:21:18  [ http-nio-80-exec-1:226583 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cf9859] was not registered for synchronization because synchronization is not active
2018-06-09 16:21:18  [ http-nio-80-exec-1:226583 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:21:18  [ http-nio-80-exec-1:226583 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:21:18  [ http-nio-80-exec-1:226584 ] - [ DEBUG ]  ==> Parameters: 0(String), 222222(String)
2018-06-09 16:21:18  [ http-nio-80-exec-1:226628 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:21:18  [ http-nio-80-exec-1:226628 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cf9859]
2018-06-09 16:21:32  [ http-nio-80-exec-2:241206 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:21:32  [ http-nio-80-exec-2:241206 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:21:32  [ http-nio-80-exec-2:241206 ] - [ INFO ]  # url --->/set
2018-06-09 16:21:32  [ http-nio-80-exec-2:241206 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:21:35  [ http-nio-80-exec-9:243607 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:21:35  [ http-nio-80-exec-9:243608 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:21:35  [ http-nio-80-exec-9:243608 ] - [ INFO ]  # url --->/set
2018-06-09 16:21:35  [ http-nio-80-exec-9:243608 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:21:36  [ http-nio-80-exec-10:244805 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:21:36  [ http-nio-80-exec-10:244805 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:21:36  [ http-nio-80-exec-10:244806 ] - [ INFO ]  # url --->/open
2018-06-09 16:21:36  [ http-nio-80-exec-10:244806 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:21:36  [ http-nio-80-exec-10:244806 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:21:36  [ http-nio-80-exec-10:244807 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@343a7ef0] was not registered for synchronization because synchronization is not active
2018-06-09 16:21:36  [ http-nio-80-exec-10:244807 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:21:36  [ http-nio-80-exec-10:244807 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:21:36  [ http-nio-80-exec-10:244808 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:21:36  [ http-nio-80-exec-10:244809 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:21:36  [ http-nio-80-exec-10:244809 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@343a7ef0]
2018-06-09 16:21:36  [ http-nio-80-exec-10:244810 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:21:36  [ http-nio-80-exec-10:244810 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc9b927] was not registered for synchronization because synchronization is not active
2018-06-09 16:21:36  [ http-nio-80-exec-10:244810 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ff9096a] will not be managed by Spring
2018-06-09 16:21:36  [ http-nio-80-exec-10:244810 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:21:36  [ http-nio-80-exec-10:244810 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:21:36  [ http-nio-80-exec-10:244833 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:21:36  [ http-nio-80-exec-10:244833 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc9b927]
2018-06-09 16:21:39  [ http-nio-80-exec-8:247791 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:21:39  [ http-nio-80-exec-8:247792 ] - [ INFO ]  # user --->com.bankledger.entity.User@116fa9fd
2018-06-09 16:21:39  [ http-nio-80-exec-8:247792 ] - [ INFO ]  # url --->/set
2018-06-09 16:21:39  [ http-nio-80-exec-8:247792 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:23:02  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-09 16:23:02  [ background-preinit:3 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-09 16:23:02  [ background-preinit:13 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:23:02  [ background-preinit:19 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:23:02  [ background-preinit:20 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:23:02  [ background-preinit:20 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:23:02  [ background-preinit:21 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:23:02  [ background-preinit:244 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:23:03  [ background-preinit:256 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:23:03  [ background-preinit:256 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:23:03  [ background-preinit:257 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:23:03  [ background-preinit:258 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:23:03  [ restartedMain:259 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 4932 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:23:03  [ restartedMain:260 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:23:03  [ restartedMain:261 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:23:03  [ background-preinit:262 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:23:05  [ restartedMain:2329 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:23:05  [ restartedMain:2333 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:23:05  [ restartedMain:2341 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:23:05  [ restartedMain:2342 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:23:05  [ restartedMain:2343 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:23:05  [ restartedMain:2343 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:23:05  [ restartedMain:2347 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:23:05  [ restartedMain:2347 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:23:05  [ restartedMain:2347 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:23:05  [ restartedMain:2347 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:23:05  [ restartedMain:2348 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:23:05  [ restartedMain:2348 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:23:05  [ restartedMain:2348 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:23:05  [ restartedMain:2348 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:23:05  [ restartedMain:2821 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:23:05  [ restartedMain:2821 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:23:05  [ restartedMain:2822 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:23:05  [ restartedMain:2826 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:23:05  [ restartedMain:2828 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:23:05  [ restartedMain:2829 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:23:05  [ restartedMain:2830 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:23:05  [ restartedMain:2830 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:23:05  [ restartedMain:2831 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:23:05  [ restartedMain:2831 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:23:05  [ restartedMain:2832 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:23:05  [ restartedMain:2837 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:23:05  [ restartedMain:2837 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:23:05  [ restartedMain:2837 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:23:05  [ restartedMain:2837 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:23:05  [ restartedMain:2838 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:23:07  [ restartedMain:5147 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-09 16:23:07  [ restartedMain:5220 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:23:08  [ restartedMain:5772 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:23:08  [ restartedMain:5772 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:23:08  [ restartedMain:5784 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:23:08  [ restartedMain:5784 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:23:08  [ restartedMain:5784 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:23:08  [ restartedMain:5784 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:23:08  [ restartedMain:5785 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:23:08  [ restartedMain:5785 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:23:08  [ restartedMain:5786 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:23:08  [ restartedMain:5786 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:23:08  [ restartedMain:5786 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:23:08  [ restartedMain:5794 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:23:08  [ restartedMain:5795 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:23:08  [ restartedMain:5795 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:23:08  [ restartedMain:5796 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:23:08  [ restartedMain:5796 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:23:09  [ restartedMain:6910 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:23:09  [ restartedMain:7065 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:23:11  [ restartedMain:8303 ] - [ INFO ]  Started App in 8.472 seconds (JVM running for 9.096)
2018-06-09 16:23:42  [ restartedMain:39260 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 4932 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:23:42  [ restartedMain:39262 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:23:42  [ restartedMain:39263 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:23:42  [ restartedMain:40102 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:23:42  [ restartedMain:40107 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:23:42  [ restartedMain:40117 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:23:42  [ restartedMain:40118 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:23:42  [ restartedMain:40119 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:23:42  [ restartedMain:40121 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:23:42  [ restartedMain:40125 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:23:42  [ restartedMain:40125 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:23:42  [ restartedMain:40127 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:23:42  [ restartedMain:40129 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:23:42  [ restartedMain:40129 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:23:42  [ restartedMain:40132 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:23:42  [ restartedMain:40134 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:23:42  [ restartedMain:40147 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:23:43  [ restartedMain:40280 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:23:43  [ restartedMain:40282 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:23:43  [ restartedMain:40284 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:23:43  [ restartedMain:40285 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:23:43  [ restartedMain:40285 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:23:43  [ restartedMain:40300 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:23:43  [ restartedMain:40302 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:23:43  [ restartedMain:40304 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:23:43  [ restartedMain:40309 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:23:43  [ restartedMain:40311 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:23:43  [ restartedMain:40318 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:23:43  [ restartedMain:40325 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:23:43  [ restartedMain:40326 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:23:43  [ restartedMain:40329 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:23:43  [ restartedMain:40330 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:23:43  [ restartedMain:40331 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:23:43  [ restartedMain:41220 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:23:44  [ restartedMain:41583 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:23:44  [ restartedMain:41583 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:23:44  [ restartedMain:41585 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:23:44  [ restartedMain:41586 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:23:44  [ restartedMain:41586 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:23:44  [ restartedMain:41586 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:23:44  [ restartedMain:41588 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:23:44  [ restartedMain:41588 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:23:44  [ restartedMain:41589 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:23:44  [ restartedMain:41589 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:23:44  [ restartedMain:41592 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:23:44  [ restartedMain:41598 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:23:44  [ restartedMain:41599 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:23:44  [ restartedMain:41599 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:23:44  [ restartedMain:41600 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:23:44  [ restartedMain:41601 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:23:44  [ restartedMain:42068 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:23:44  [ restartedMain:42136 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:23:45  [ restartedMain:42664 ] - [ INFO ]  Started App in 3.459 seconds (JVM running for 43.458)
2018-06-09 16:24:10  [ http-nio-80-exec-1:67338 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:10  [ http-nio-80-exec-1:67339 ] - [ INFO ]  # user --->null
2018-06-09 16:24:10  [ http-nio-80-exec-1:67339 ] - [ INFO ]  # url --->/project/publish
2018-06-09 16:24:10  [ http-nio-80-exec-1:67339 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:10  [ http-nio-80-exec-1:67355 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:10  [ http-nio-80-exec-1:67355 ] - [ INFO ]  # user --->null
2018-06-09 16:24:10  [ http-nio-80-exec-1:67355 ] - [ INFO ]  # url --->/login
2018-06-09 16:24:10  [ http-nio-80-exec-1:67356 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:10  [ http-nio-80-exec-1:67431 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-09 16:24:10  [ http-nio-80-exec-1:67643 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@74659692
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@16250b95
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@15eb89f9
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-09 16:24:10  [ http-nio-80-exec-1:67650 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 16:24:17  [ http-nio-80-exec-2:74818 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:17  [ http-nio-80-exec-2:74819 ] - [ INFO ]  # user --->null
2018-06-09 16:24:17  [ http-nio-80-exec-2:74819 ] - [ INFO ]  # url --->/login
2018-06-09 16:24:17  [ http-nio-80-exec-2:74819 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:17  [ http-nio-80-exec-2:74867 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:17  [ http-nio-80-exec-2:74882 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5553946d] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:17  [ http-nio-80-exec-2:74956 ] - [ INFO ]  {dataSource-1} inited
2018-06-09 16:24:18  [ http-nio-80-exec-2:75286 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:18  [ http-nio-80-exec-2:75294 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:24:18  [ http-nio-80-exec-2:75353 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-09 16:24:18  [ http-nio-80-exec-2:75371 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:18  [ http-nio-80-exec-2:75372 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5553946d]
2018-06-09 16:24:18  [ http-nio-80-exec-9:75497 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:18  [ http-nio-80-exec-9:75497 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:18  [ http-nio-80-exec-9:75499 ] - [ INFO ]  # url --->/main
2018-06-09 16:24:18  [ http-nio-80-exec-9:75499 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:18  [ http-nio-80-exec-9:75500 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:18  [ http-nio-80-exec-9:75502 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10453932] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:18  [ http-nio-80-exec-9:75502 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:18  [ http-nio-80-exec-9:75503 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:24:18  [ http-nio-80-exec-9:75503 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:24:18  [ http-nio-80-exec-9:75506 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:18  [ http-nio-80-exec-9:75506 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10453932]
2018-06-09 16:24:18  [ http-nio-80-exec-9:75509 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:18  [ http-nio-80-exec-9:75510 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3157cc46] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:18  [ http-nio-80-exec-9:75510 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:18  [ http-nio-80-exec-9:75510 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:24:18  [ http-nio-80-exec-9:75511 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:24:18  [ http-nio-80-exec-9:75513 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:18  [ http-nio-80-exec-9:75514 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3157cc46]
2018-06-09 16:24:18  [ http-nio-80-exec-9:75515 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:18  [ http-nio-80-exec-9:75515 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aa35f5e] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:18  [ http-nio-80-exec-9:75516 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:18  [ http-nio-80-exec-9:75516 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:24:18  [ http-nio-80-exec-9:75516 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:24:18  [ http-nio-80-exec-9:75519 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:18  [ http-nio-80-exec-9:75519 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aa35f5e]
2018-06-09 16:24:18  [ http-nio-80-exec-6:75854 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:18  [ http-nio-80-exec-6:75854 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:18  [ http-nio-80-exec-6:75855 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:24:18  [ http-nio-80-exec-6:75855 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:18  [ http-nio-80-exec-6:75872 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:18  [ http-nio-80-exec-6:75873 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e31fb1] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:18  [ http-nio-80-exec-6:75875 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:18  [ http-nio-80-exec-6:75876 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:24:18  [ http-nio-80-exec-6:75878 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:24:18  [ http-nio-80-exec-6:75879 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:18  [ http-nio-80-exec-6:75880 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e31fb1]
2018-06-09 16:24:18  [ http-nio-80-exec-6:75882 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:18  [ http-nio-80-exec-6:75882 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43abff8f] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:18  [ http-nio-80-exec-6:76006 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 16:24:18  [ http-nio-80-exec-6:76134 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:18  [ http-nio-80-exec-6:76135 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:24:18  [ http-nio-80-exec-6:76135 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:24:18  [ http-nio-80-exec-6:76139 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:18  [ http-nio-80-exec-6:76140 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43abff8f]
2018-06-09 16:24:20  [ http-nio-80-exec-4:77481 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:20  [ http-nio-80-exec-4:77481 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:20  [ http-nio-80-exec-4:77481 ] - [ INFO ]  # url --->/set
2018-06-09 16:24:20  [ http-nio-80-exec-4:77482 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:20  [ http-nio-80-exec-4:77482 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:20  [ http-nio-80-exec-4:77483 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc6ff1] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:20  [ http-nio-80-exec-4:77483 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:20  [ http-nio-80-exec-4:77483 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:24:20  [ http-nio-80-exec-4:77484 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:24:20  [ http-nio-80-exec-4:77485 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:20  [ http-nio-80-exec-4:77486 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc6ff1]
2018-06-09 16:24:20  [ http-nio-80-exec-4:77506 ] - [ ERROR ]  [THYMELEAF][http-nio-80-exec-4] Exception processing template "set": An error happened during template parsing (template: "class path resource [templates/set.html]" - line 38, col 122)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/set.html]" - line 38, col 122)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: (Line = 38, Column = 122) Bad attribute name in sequence " type="checkbox" name="switch" lay-skin="switch" lay-filter="switchSet" th:checked=${userInfo.isopen == '1'}": attribute names cannot start with an equals sign
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:129)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 more
2018-06-09 16:24:20  [ http-nio-80-exec-4:77519 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:20  [ http-nio-80-exec-4:77519 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:20  [ http-nio-80-exec-4:77519 ] - [ INFO ]  # url --->/error
2018-06-09 16:24:20  [ http-nio-80-exec-4:77519 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:36  [ http-nio-80-exec-3:94208 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:36  [ http-nio-80-exec-3:94209 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:36  [ http-nio-80-exec-3:94209 ] - [ INFO ]  # url --->/set
2018-06-09 16:24:36  [ http-nio-80-exec-3:94209 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:36  [ http-nio-80-exec-3:94209 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:36  [ http-nio-80-exec-3:94209 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5803d7e] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:36  [ http-nio-80-exec-3:94210 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:36  [ http-nio-80-exec-3:94210 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:24:36  [ http-nio-80-exec-3:94211 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:24:36  [ http-nio-80-exec-3:94213 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:36  [ http-nio-80-exec-3:94214 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5803d7e]
2018-06-09 16:24:37  [ http-nio-80-exec-3:94270 ] - [ ERROR ]  [THYMELEAF][http-nio-80-exec-3] Exception processing template "set": An error happened during template parsing (template: "class path resource [templates/set.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/set.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "userInfo.isopen == '1'" (template: "set" - line 38, col 93)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 more
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "userInfo.isopen == '1'" (template: "set" - line 38, col 93)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 more
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'isopen' cannot be found on object of type 'com.bankledger.entity.User' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:50)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:368)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.OpEQ.getValueInternal(OpEQ.java:42)
	at org.springframework.expression.spel.ast.OpEQ.getValueInternal(OpEQ.java:32)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 73 more
2018-06-09 16:24:37  [ http-nio-80-exec-3:94279 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:37  [ http-nio-80-exec-3:94279 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:37  [ http-nio-80-exec-3:94279 ] - [ INFO ]  # url --->/error
2018-06-09 16:24:37  [ http-nio-80-exec-3:94279 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:40  [ http-nio-80-exec-7:97975 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:40  [ http-nio-80-exec-7:97975 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:40  [ http-nio-80-exec-7:97975 ] - [ INFO ]  # url --->/set
2018-06-09 16:24:40  [ http-nio-80-exec-7:97976 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:40  [ http-nio-80-exec-7:97976 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:40  [ http-nio-80-exec-7:97976 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28abc754] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:40  [ http-nio-80-exec-7:97977 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:40  [ http-nio-80-exec-7:97977 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:24:40  [ http-nio-80-exec-7:97978 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:24:40  [ http-nio-80-exec-7:97980 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:40  [ http-nio-80-exec-7:97981 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28abc754]
2018-06-09 16:24:40  [ http-nio-80-exec-7:97992 ] - [ ERROR ]  [THYMELEAF][http-nio-80-exec-7] Exception processing template "set": An error happened during template parsing (template: "class path resource [templates/set.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/set.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "userInfo.isopen == '1'" (template: "set" - line 38, col 93)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 more
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "userInfo.isopen == '1'" (template: "set" - line 38, col 93)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 more
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'isopen' cannot be found on object of type 'com.bankledger.entity.User' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:50)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:368)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.OpEQ.getValueInternal(OpEQ.java:42)
	at org.springframework.expression.spel.ast.OpEQ.getValueInternal(OpEQ.java:32)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 73 more
2018-06-09 16:24:40  [ http-nio-80-exec-7:97995 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:40  [ http-nio-80-exec-7:97995 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:40  [ http-nio-80-exec-7:97995 ] - [ INFO ]  # url --->/error
2018-06-09 16:24:40  [ http-nio-80-exec-7:97995 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:48  [ http-nio-80-exec-8:105712 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:48  [ http-nio-80-exec-8:105713 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:48  [ http-nio-80-exec-8:105713 ] - [ INFO ]  # url --->/
2018-06-09 16:24:48  [ http-nio-80-exec-8:105713 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:52  [ http-nio-80-exec-10:110137 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:52  [ http-nio-80-exec-10:110139 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:52  [ http-nio-80-exec-10:110139 ] - [ INFO ]  # url --->/login
2018-06-09 16:24:52  [ http-nio-80-exec-10:110139 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:52  [ http-nio-80-exec-1:110145 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:24:52  [ http-nio-80-exec-1:110145 ] - [ INFO ]  # user --->com.bankledger.entity.User@1e82c492
2018-06-09 16:24:52  [ http-nio-80-exec-1:110145 ] - [ INFO ]  # url --->/main
2018-06-09 16:24:52  [ http-nio-80-exec-1:110145 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:24:52  [ http-nio-80-exec-1:110145 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:52  [ http-nio-80-exec-1:110146 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76bc12e9] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:52  [ http-nio-80-exec-1:110146 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:52  [ http-nio-80-exec-1:110146 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:24:52  [ http-nio-80-exec-1:110147 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:24:52  [ http-nio-80-exec-1:110150 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:52  [ http-nio-80-exec-1:110151 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76bc12e9]
2018-06-09 16:24:52  [ http-nio-80-exec-1:110151 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:52  [ http-nio-80-exec-1:110151 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ead80de] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:52  [ http-nio-80-exec-1:110151 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:52  [ http-nio-80-exec-1:110152 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:24:52  [ http-nio-80-exec-1:110152 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:24:52  [ http-nio-80-exec-1:110153 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:52  [ http-nio-80-exec-1:110154 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ead80de]
2018-06-09 16:24:52  [ http-nio-80-exec-1:110154 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:24:52  [ http-nio-80-exec-1:110154 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55da8fca] was not registered for synchronization because synchronization is not active
2018-06-09 16:24:52  [ http-nio-80-exec-1:110154 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@515fb1f2] will not be managed by Spring
2018-06-09 16:24:52  [ http-nio-80-exec-1:110155 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:24:52  [ http-nio-80-exec-1:110155 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:24:52  [ http-nio-80-exec-1:110156 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:24:52  [ http-nio-80-exec-1:110157 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55da8fca]
2018-06-09 16:25:27  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-09 16:25:27  [ background-preinit:3 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-09 16:25:27  [ background-preinit:15 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:25:27  [ background-preinit:19 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:25:27  [ background-preinit:21 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:25:27  [ background-preinit:21 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:25:27  [ background-preinit:22 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:25:27  [ restartedMain:232 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 12376 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:25:27  [ restartedMain:232 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:25:27  [ restartedMain:233 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:25:27  [ background-preinit:256 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:25:27  [ background-preinit:260 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:25:27  [ background-preinit:263 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:25:27  [ background-preinit:265 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:25:27  [ background-preinit:266 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:25:27  [ background-preinit:267 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:25:29  [ restartedMain:2477 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:25:29  [ restartedMain:2482 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:25:29  [ restartedMain:2491 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:25:29  [ restartedMain:2492 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:25:29  [ restartedMain:2493 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:25:29  [ restartedMain:2493 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:25:29  [ restartedMain:2498 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:25:29  [ restartedMain:2499 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:25:29  [ restartedMain:2499 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:25:29  [ restartedMain:2499 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:25:29  [ restartedMain:2499 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:25:29  [ restartedMain:2500 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:25:29  [ restartedMain:2500 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:25:29  [ restartedMain:2500 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:25:30  [ restartedMain:2951 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:25:30  [ restartedMain:2952 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:25:30  [ restartedMain:2952 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:25:30  [ restartedMain:2955 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:25:30  [ restartedMain:2956 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:25:30  [ restartedMain:2958 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:25:30  [ restartedMain:2959 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:25:30  [ restartedMain:2960 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:25:30  [ restartedMain:2960 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:25:30  [ restartedMain:2961 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:25:30  [ restartedMain:2962 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:25:30  [ restartedMain:2969 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:25:30  [ restartedMain:2969 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:25:30  [ restartedMain:2970 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:25:30  [ restartedMain:2971 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:25:30  [ restartedMain:2971 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:25:32  [ restartedMain:5310 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-09 16:25:32  [ restartedMain:5373 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:25:33  [ restartedMain:5990 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:25:33  [ restartedMain:5990 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:25:33  [ restartedMain:6102 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:25:33  [ restartedMain:6103 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:25:33  [ restartedMain:6104 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:25:33  [ restartedMain:6114 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:25:33  [ restartedMain:6115 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:25:33  [ restartedMain:6116 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:25:33  [ restartedMain:6117 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:25:33  [ restartedMain:6118 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:25:33  [ restartedMain:6119 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:25:33  [ restartedMain:6138 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:25:33  [ restartedMain:6139 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:25:33  [ restartedMain:6140 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:25:33  [ restartedMain:6141 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:25:33  [ restartedMain:6142 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:25:34  [ restartedMain:7300 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:25:34  [ restartedMain:7446 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:25:35  [ restartedMain:8471 ] - [ INFO ]  Started App in 8.633 seconds (JVM running for 9.278)
2018-06-09 16:26:02  [ http-nio-80-exec-1:34991 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:02  [ http-nio-80-exec-1:34991 ] - [ INFO ]  # user --->null
2018-06-09 16:26:02  [ http-nio-80-exec-1:34991 ] - [ INFO ]  # url --->/
2018-06-09 16:26:02  [ http-nio-80-exec-1:34992 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:02  [ http-nio-80-exec-1:35003 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:02  [ http-nio-80-exec-1:35003 ] - [ INFO ]  # user --->null
2018-06-09 16:26:02  [ http-nio-80-exec-1:35003 ] - [ INFO ]  # url --->/login
2018-06-09 16:26:02  [ http-nio-80-exec-1:35003 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:02  [ http-nio-80-exec-1:35058 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-09 16:26:02  [ http-nio-80-exec-1:35286 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2d561f4c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4891bb0b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@40258de7
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-09 16:26:02  [ http-nio-80-exec-1:35303 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 16:26:07  [ http-nio-80-exec-2:40504 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:07  [ http-nio-80-exec-2:40504 ] - [ INFO ]  # user --->null
2018-06-09 16:26:07  [ http-nio-80-exec-2:40504 ] - [ INFO ]  # url --->/login
2018-06-09 16:26:07  [ http-nio-80-exec-2:40505 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:07  [ http-nio-80-exec-2:40555 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:07  [ http-nio-80-exec-2:40591 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f86f31d] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:08  [ http-nio-80-exec-2:40689 ] - [ INFO ]  {dataSource-1} inited
2018-06-09 16:26:08  [ http-nio-80-exec-2:40943 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:08  [ http-nio-80-exec-2:40952 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:26:08  [ http-nio-80-exec-2:40991 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-09 16:26:08  [ http-nio-80-exec-2:41009 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:08  [ http-nio-80-exec-2:41010 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f86f31d]
2018-06-09 16:26:08  [ http-nio-80-exec-10:41173 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:08  [ http-nio-80-exec-10:41173 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:08  [ http-nio-80-exec-10:41173 ] - [ INFO ]  # url --->/main
2018-06-09 16:26:08  [ http-nio-80-exec-10:41174 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:08  [ http-nio-80-exec-10:41174 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:08  [ http-nio-80-exec-10:41176 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e77be5d] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:08  [ http-nio-80-exec-10:41176 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:08  [ http-nio-80-exec-10:41177 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:08  [ http-nio-80-exec-10:41179 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:08  [ http-nio-80-exec-10:41182 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:08  [ http-nio-80-exec-10:41182 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e77be5d]
2018-06-09 16:26:08  [ http-nio-80-exec-10:41183 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:08  [ http-nio-80-exec-10:41183 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f654b29] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:08  [ http-nio-80-exec-10:41185 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:08  [ http-nio-80-exec-10:41185 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:26:08  [ http-nio-80-exec-10:41186 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:26:08  [ http-nio-80-exec-10:41190 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:08  [ http-nio-80-exec-10:41191 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f654b29]
2018-06-09 16:26:08  [ http-nio-80-exec-10:41192 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:08  [ http-nio-80-exec-10:41192 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e321a09] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:08  [ http-nio-80-exec-10:41192 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:08  [ http-nio-80-exec-10:41193 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:08  [ http-nio-80-exec-10:41193 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:08  [ http-nio-80-exec-10:41197 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:08  [ http-nio-80-exec-10:41197 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e321a09]
2018-06-09 16:26:08  [ http-nio-80-exec-9:41632 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:08  [ http-nio-80-exec-9:41633 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:08  [ http-nio-80-exec-9:41633 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:26:08  [ http-nio-80-exec-9:41633 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:08  [ http-nio-80-exec-9:41652 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:08  [ http-nio-80-exec-9:41653 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@550ef2e3] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:08  [ http-nio-80-exec-9:41653 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:08  [ http-nio-80-exec-9:41657 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:08  [ http-nio-80-exec-9:41659 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:08  [ http-nio-80-exec-9:41665 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:08  [ http-nio-80-exec-9:41666 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@550ef2e3]
2018-06-09 16:26:08  [ http-nio-80-exec-9:41668 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:08  [ http-nio-80-exec-9:41669 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5f3937] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:09  [ http-nio-80-exec-9:41869 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 16:26:09  [ http-nio-80-exec-9:42062 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:09  [ http-nio-80-exec-9:42063 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:26:09  [ http-nio-80-exec-9:42064 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:26:09  [ http-nio-80-exec-9:42066 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:09  [ http-nio-80-exec-9:42068 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5f3937]
2018-06-09 16:26:12  [ http-nio-80-exec-8:44857 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:12  [ http-nio-80-exec-8:44858 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:12  [ http-nio-80-exec-8:44859 ] - [ INFO ]  # url --->/set
2018-06-09 16:26:12  [ http-nio-80-exec-8:44860 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:12  [ http-nio-80-exec-8:44861 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:12  [ http-nio-80-exec-8:44862 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23efddf1] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:12  [ http-nio-80-exec-8:44862 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:12  [ http-nio-80-exec-8:44864 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:12  [ http-nio-80-exec-8:44865 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:12  [ http-nio-80-exec-8:44866 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:12  [ http-nio-80-exec-8:44867 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23efddf1]
2018-06-09 16:26:13  [ http-nio-80-exec-2:46297 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:13  [ http-nio-80-exec-2:46297 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:13  [ http-nio-80-exec-2:46297 ] - [ INFO ]  # url --->/open
2018-06-09 16:26:13  [ http-nio-80-exec-2:46297 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:13  [ http-nio-80-exec-2:46299 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:13  [ http-nio-80-exec-2:46299 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51ecfa2d] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:13  [ http-nio-80-exec-2:46300 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:13  [ http-nio-80-exec-2:46300 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:13  [ http-nio-80-exec-2:46301 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:13  [ http-nio-80-exec-2:46303 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:13  [ http-nio-80-exec-2:46304 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51ecfa2d]
2018-06-09 16:26:13  [ http-nio-80-exec-2:46308 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:13  [ http-nio-80-exec-2:46308 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@406c4793] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:13  [ http-nio-80-exec-2:46309 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:13  [ http-nio-80-exec-2:46309 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:26:13  [ http-nio-80-exec-2:46310 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:26:13  [ http-nio-80-exec-2:46352 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:26:13  [ http-nio-80-exec-2:46353 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@406c4793]
2018-06-09 16:26:14  [ http-nio-80-exec-10:47197 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:14  [ http-nio-80-exec-10:47197 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:14  [ http-nio-80-exec-10:47197 ] - [ INFO ]  # url --->/main
2018-06-09 16:26:14  [ http-nio-80-exec-10:47198 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:14  [ http-nio-80-exec-10:47199 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:14  [ http-nio-80-exec-10:47199 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d24ea13] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:14  [ http-nio-80-exec-10:47200 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:14  [ http-nio-80-exec-10:47200 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:14  [ http-nio-80-exec-10:47200 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:14  [ http-nio-80-exec-10:47202 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:14  [ http-nio-80-exec-10:47203 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d24ea13]
2018-06-09 16:26:14  [ http-nio-80-exec-10:47203 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:14  [ http-nio-80-exec-10:47203 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7935f4ae] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:14  [ http-nio-80-exec-10:47203 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:14  [ http-nio-80-exec-10:47203 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:26:14  [ http-nio-80-exec-10:47204 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:26:14  [ http-nio-80-exec-10:47205 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:14  [ http-nio-80-exec-10:47205 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7935f4ae]
2018-06-09 16:26:14  [ http-nio-80-exec-10:47206 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:14  [ http-nio-80-exec-10:47206 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@231b400d] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:14  [ http-nio-80-exec-10:47206 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:14  [ http-nio-80-exec-10:47207 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:14  [ http-nio-80-exec-10:47207 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:14  [ http-nio-80-exec-10:47210 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:14  [ http-nio-80-exec-10:47211 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@231b400d]
2018-06-09 16:26:14  [ http-nio-80-exec-9:47464 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:14  [ http-nio-80-exec-9:47465 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:14  [ http-nio-80-exec-9:47465 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:26:14  [ http-nio-80-exec-9:47465 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:14  [ http-nio-80-exec-9:47466 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:14  [ http-nio-80-exec-9:47467 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@182b2d40] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:14  [ http-nio-80-exec-9:47467 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:14  [ http-nio-80-exec-9:47468 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:14  [ http-nio-80-exec-9:47469 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:14  [ http-nio-80-exec-9:47472 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:14  [ http-nio-80-exec-9:47472 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@182b2d40]
2018-06-09 16:26:14  [ http-nio-80-exec-9:47473 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:14  [ http-nio-80-exec-9:47473 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2792e5b3] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:14  [ http-nio-80-exec-9:47473 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.5
2018-06-09 16:26:14  [ http-nio-80-exec-9:47488 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:14  [ http-nio-80-exec-9:47488 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:26:14  [ http-nio-80-exec-9:47489 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:26:14  [ http-nio-80-exec-9:47492 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:14  [ http-nio-80-exec-9:47492 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2792e5b3]
2018-06-09 16:26:16  [ http-nio-80-exec-5:48943 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:16  [ http-nio-80-exec-5:48943 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:16  [ http-nio-80-exec-5:48943 ] - [ INFO ]  # url --->/main
2018-06-09 16:26:16  [ http-nio-80-exec-5:48943 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:16  [ http-nio-80-exec-5:48946 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:16  [ http-nio-80-exec-5:48946 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f2987a] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:16  [ http-nio-80-exec-5:48947 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:16  [ http-nio-80-exec-5:48947 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:16  [ http-nio-80-exec-5:48948 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:16  [ http-nio-80-exec-5:48951 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:16  [ http-nio-80-exec-5:48952 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23f2987a]
2018-06-09 16:26:16  [ http-nio-80-exec-5:48952 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:16  [ http-nio-80-exec-5:48952 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@605a9056] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:16  [ http-nio-80-exec-5:48953 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:16  [ http-nio-80-exec-5:48953 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:26:16  [ http-nio-80-exec-5:48955 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:26:16  [ http-nio-80-exec-5:48956 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:16  [ http-nio-80-exec-5:48958 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@605a9056]
2018-06-09 16:26:16  [ http-nio-80-exec-5:48959 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:16  [ http-nio-80-exec-5:48959 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e6c5fd9] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:16  [ http-nio-80-exec-5:48959 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:16  [ http-nio-80-exec-5:48960 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:16  [ http-nio-80-exec-5:48960 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:16  [ http-nio-80-exec-5:48965 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:16  [ http-nio-80-exec-5:48966 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e6c5fd9]
2018-06-09 16:26:16  [ http-nio-80-exec-7:49149 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:16  [ http-nio-80-exec-7:49149 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:16  [ http-nio-80-exec-7:49149 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:26:16  [ http-nio-80-exec-7:49150 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:16  [ http-nio-80-exec-7:49151 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:16  [ http-nio-80-exec-7:49152 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@110e2db4] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:16  [ http-nio-80-exec-7:49152 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:16  [ http-nio-80-exec-7:49153 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:16  [ http-nio-80-exec-7:49153 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:16  [ http-nio-80-exec-7:49155 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:16  [ http-nio-80-exec-7:49155 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@110e2db4]
2018-06-09 16:26:16  [ http-nio-80-exec-7:49156 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:16  [ http-nio-80-exec-7:49156 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d650dd2] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:16  [ http-nio-80-exec-7:49158 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2018-06-09 16:26:16  [ http-nio-80-exec-7:49171 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:16  [ http-nio-80-exec-7:49172 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:26:16  [ http-nio-80-exec-7:49173 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:26:16  [ http-nio-80-exec-7:49175 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:16  [ http-nio-80-exec-7:49176 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d650dd2]
2018-06-09 16:26:24  [ http-nio-80-exec-6:57397 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:24  [ http-nio-80-exec-6:57397 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:24  [ http-nio-80-exec-6:57398 ] - [ INFO ]  # url --->/set
2018-06-09 16:26:24  [ http-nio-80-exec-6:57398 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:24  [ http-nio-80-exec-6:57398 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:24  [ http-nio-80-exec-6:57399 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ffbfba4] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:24  [ http-nio-80-exec-6:57400 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:24  [ http-nio-80-exec-6:57402 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:24  [ http-nio-80-exec-6:57402 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:24  [ http-nio-80-exec-6:57404 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:24  [ http-nio-80-exec-6:57405 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ffbfba4]
2018-06-09 16:26:57  [ http-nio-80-exec-3:90628 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:57  [ http-nio-80-exec-3:90629 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:57  [ http-nio-80-exec-3:90629 ] - [ INFO ]  # url --->/set
2018-06-09 16:26:57  [ http-nio-80-exec-3:90629 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:57  [ http-nio-80-exec-3:90629 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:57  [ http-nio-80-exec-3:90629 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aa25976] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:57  [ http-nio-80-exec-3:90630 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:57  [ http-nio-80-exec-3:90630 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:57  [ http-nio-80-exec-3:90630 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:57  [ http-nio-80-exec-3:90632 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:57  [ http-nio-80-exec-3:90632 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aa25976]
2018-06-09 16:26:59  [ http-nio-80-exec-8:92317 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:26:59  [ http-nio-80-exec-8:92317 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:26:59  [ http-nio-80-exec-8:92318 ] - [ INFO ]  # url --->/set
2018-06-09 16:26:59  [ http-nio-80-exec-8:92318 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:26:59  [ http-nio-80-exec-8:92318 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:26:59  [ http-nio-80-exec-8:92318 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e2f5983] was not registered for synchronization because synchronization is not active
2018-06-09 16:26:59  [ http-nio-80-exec-8:92319 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:26:59  [ http-nio-80-exec-8:92319 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:26:59  [ http-nio-80-exec-8:92319 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:26:59  [ http-nio-80-exec-8:92321 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:26:59  [ http-nio-80-exec-8:92322 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e2f5983]
2018-06-09 16:28:01  [ http-nio-80-exec-2:153785 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:01  [ http-nio-80-exec-2:153786 ] - [ INFO ]  # user --->com.bankledger.entity.User@20b0443b
2018-06-09 16:28:01  [ http-nio-80-exec-2:153786 ] - [ INFO ]  # url --->/set
2018-06-09 16:28:01  [ http-nio-80-exec-2:153786 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:01  [ http-nio-80-exec-2:153786 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:01  [ http-nio-80-exec-2:153786 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fc3903a] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:01  [ http-nio-80-exec-2:153794 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@14c1e8b9] will not be managed by Spring
2018-06-09 16:28:01  [ http-nio-80-exec-2:153794 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate from user where idcard = ? 
2018-06-09 16:28:01  [ http-nio-80-exec-2:153796 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:01  [ http-nio-80-exec-2:153801 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:01  [ http-nio-80-exec-2:153801 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fc3903a]
2018-06-09 16:28:21  [ Thread-6:174554 ] - [ INFO ]  {dataSource-1} closed
2018-06-09 16:28:22  [ restartedMain:174920 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 12376 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:28:22  [ restartedMain:174921 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:28:22  [ restartedMain:174921 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:28:23  [ restartedMain:175694 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:28:23  [ restartedMain:175696 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:28:23  [ restartedMain:175705 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:28:23  [ restartedMain:175705 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:28:23  [ restartedMain:175705 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:28:23  [ restartedMain:175705 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:28:23  [ restartedMain:175707 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:28:23  [ restartedMain:175708 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:28:23  [ restartedMain:175709 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:28:23  [ restartedMain:175709 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:28:23  [ restartedMain:175709 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:28:23  [ restartedMain:175709 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:28:23  [ restartedMain:175709 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:28:23  [ restartedMain:175709 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:28:23  [ restartedMain:175833 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:28:23  [ restartedMain:175834 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:28:23  [ restartedMain:175835 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:28:23  [ restartedMain:175835 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:28:23  [ restartedMain:175835 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:28:23  [ restartedMain:175835 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:28:23  [ restartedMain:175836 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:28:23  [ restartedMain:175836 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:28:23  [ restartedMain:175836 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:28:23  [ restartedMain:175837 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:28:23  [ restartedMain:175837 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:28:23  [ restartedMain:175846 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:28:23  [ restartedMain:175851 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:28:23  [ restartedMain:175853 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:28:23  [ restartedMain:175854 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:28:23  [ restartedMain:175860 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:28:23  [ restartedMain:176428 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:28:24  [ restartedMain:176901 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:28:24  [ restartedMain:176902 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:28:24  [ restartedMain:176904 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:28:24  [ restartedMain:176905 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:28:24  [ restartedMain:176905 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:28:24  [ restartedMain:176905 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:28:24  [ restartedMain:176906 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:28:24  [ restartedMain:176906 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:28:24  [ restartedMain:176907 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:28:24  [ restartedMain:176908 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:28:24  [ restartedMain:176908 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:28:24  [ restartedMain:176913 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:28:24  [ restartedMain:176915 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:28:24  [ restartedMain:176915 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:28:24  [ restartedMain:176915 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:28:24  [ restartedMain:176915 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:28:24  [ restartedMain:177578 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:28:25  [ restartedMain:177704 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:28:25  [ restartedMain:178373 ] - [ INFO ]  Started App in 3.505 seconds (JVM running for 179.18)
2018-06-09 16:28:27  [ http-nio-80-exec-9:180371 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:27  [ http-nio-80-exec-9:180372 ] - [ INFO ]  # user --->null
2018-06-09 16:28:27  [ http-nio-80-exec-9:180372 ] - [ INFO ]  # url --->/set
2018-06-09 16:28:27  [ http-nio-80-exec-9:180373 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:27  [ http-nio-80-exec-10:180381 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:27  [ http-nio-80-exec-10:180381 ] - [ INFO ]  # user --->null
2018-06-09 16:28:27  [ http-nio-80-exec-10:180381 ] - [ INFO ]  # url --->/login
2018-06-09 16:28:27  [ http-nio-80-exec-10:180381 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:27  [ http-nio-80-exec-10:180398 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-09 16:28:27  [ http-nio-80-exec-10:180443 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2d561f4c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4891bb0b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@40258de7
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-09 16:28:27  [ http-nio-80-exec-10:180449 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 16:28:32  [ http-nio-80-exec-8:185045 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:32  [ http-nio-80-exec-8:185046 ] - [ INFO ]  # user --->null
2018-06-09 16:28:32  [ http-nio-80-exec-8:185046 ] - [ INFO ]  # url --->/login
2018-06-09 16:28:32  [ http-nio-80-exec-8:185046 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:32  [ http-nio-80-exec-8:185053 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:32  [ http-nio-80-exec-8:185054 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a746c9c] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:32  [ http-nio-80-exec-8:185056 ] - [ INFO ]  {dataSource-2} inited
2018-06-09 16:28:32  [ http-nio-80-exec-8:185063 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:32  [ http-nio-80-exec-8:185064 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:28:32  [ http-nio-80-exec-8:185065 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-09 16:28:32  [ http-nio-80-exec-8:185069 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:32  [ http-nio-80-exec-8:185069 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a746c9c]
2018-06-09 16:28:32  [ http-nio-80-exec-7:185087 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:32  [ http-nio-80-exec-7:185087 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:32  [ http-nio-80-exec-7:185087 ] - [ INFO ]  # url --->/main
2018-06-09 16:28:32  [ http-nio-80-exec-7:185087 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:32  [ http-nio-80-exec-7:185088 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:32  [ http-nio-80-exec-7:185088 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c62293e] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:32  [ http-nio-80-exec-7:185088 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:32  [ http-nio-80-exec-7:185088 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:32  [ http-nio-80-exec-7:185089 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:32  [ http-nio-80-exec-7:185090 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:32  [ http-nio-80-exec-7:185091 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c62293e]
2018-06-09 16:28:32  [ http-nio-80-exec-7:185091 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:32  [ http-nio-80-exec-7:185091 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d5f2305] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:32  [ http-nio-80-exec-7:185092 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:32  [ http-nio-80-exec-7:185092 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:28:32  [ http-nio-80-exec-7:185092 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:28:32  [ http-nio-80-exec-7:185096 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:32  [ http-nio-80-exec-7:185097 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d5f2305]
2018-06-09 16:28:32  [ http-nio-80-exec-7:185097 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:32  [ http-nio-80-exec-7:185097 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c485e6b] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:32  [ http-nio-80-exec-7:185098 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:32  [ http-nio-80-exec-7:185098 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:32  [ http-nio-80-exec-7:185098 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:32  [ http-nio-80-exec-7:185100 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:32  [ http-nio-80-exec-7:185102 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c485e6b]
2018-06-09 16:28:32  [ http-nio-80-exec-6:185341 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:32  [ http-nio-80-exec-6:185341 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:32  [ http-nio-80-exec-6:185341 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:28:32  [ http-nio-80-exec-6:185341 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:32  [ http-nio-80-exec-6:185348 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:32  [ http-nio-80-exec-6:185349 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7700edd5] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:32  [ http-nio-80-exec-6:185349 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:32  [ http-nio-80-exec-6:185349 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:32  [ http-nio-80-exec-6:185349 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:32  [ http-nio-80-exec-6:185351 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:32  [ http-nio-80-exec-6:185351 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7700edd5]
2018-06-09 16:28:32  [ http-nio-80-exec-6:185352 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:32  [ http-nio-80-exec-6:185352 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b76081a] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:32  [ http-nio-80-exec-6:185352 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 16:28:32  [ http-nio-80-exec-6:185361 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:32  [ http-nio-80-exec-6:185362 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:28:32  [ http-nio-80-exec-6:185362 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:28:32  [ http-nio-80-exec-6:185363 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:32  [ http-nio-80-exec-6:185364 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b76081a]
2018-06-09 16:28:33  [ http-nio-80-exec-5:186276 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:33  [ http-nio-80-exec-5:186277 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:33  [ http-nio-80-exec-5:186277 ] - [ INFO ]  # url --->/set
2018-06-09 16:28:33  [ http-nio-80-exec-5:186277 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:33  [ http-nio-80-exec-5:186279 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:33  [ http-nio-80-exec-5:186279 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cf02101] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:33  [ http-nio-80-exec-5:186280 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:33  [ http-nio-80-exec-5:186280 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:33  [ http-nio-80-exec-5:186281 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:33  [ http-nio-80-exec-5:186282 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:33  [ http-nio-80-exec-5:186282 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cf02101]
2018-06-09 16:28:34  [ http-nio-80-exec-4:187540 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:34  [ http-nio-80-exec-4:187541 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:34  [ http-nio-80-exec-4:187541 ] - [ INFO ]  # url --->/list
2018-06-09 16:28:34  [ http-nio-80-exec-4:187543 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:34  [ http-nio-80-exec-4:187544 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:34  [ http-nio-80-exec-4:187545 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1780107d] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:34  [ http-nio-80-exec-4:187546 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:34  [ http-nio-80-exec-4:187546 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:28:34  [ http-nio-80-exec-4:187547 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:28:34  [ http-nio-80-exec-4:187548 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:28:34  [ http-nio-80-exec-4:187549 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1780107d]
2018-06-09 16:28:35  [ http-nio-80-exec-1:187832 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:35  [ http-nio-80-exec-1:187832 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:35  [ http-nio-80-exec-1:187832 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:28:35  [ http-nio-80-exec-1:187832 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:35  [ http-nio-80-exec-1:187833 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:35  [ http-nio-80-exec-1:187834 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281f6ae4] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:35  [ http-nio-80-exec-1:187835 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:35  [ http-nio-80-exec-1:187836 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:35  [ http-nio-80-exec-1:187836 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:35  [ http-nio-80-exec-1:187846 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:35  [ http-nio-80-exec-1:187846 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281f6ae4]
2018-06-09 16:28:35  [ http-nio-80-exec-1:187847 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:35  [ http-nio-80-exec-1:187847 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@776ca615] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:35  [ http-nio-80-exec-1:187847 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.5
2018-06-09 16:28:35  [ http-nio-80-exec-1:187878 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:35  [ http-nio-80-exec-1:187879 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:28:35  [ http-nio-80-exec-1:187879 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:28:35  [ http-nio-80-exec-1:187881 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:35  [ http-nio-80-exec-1:187881 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@776ca615]
2018-06-09 16:28:37  [ http-nio-80-exec-3:190340 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:37  [ http-nio-80-exec-3:190340 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:37  [ http-nio-80-exec-3:190340 ] - [ INFO ]  # url --->/main
2018-06-09 16:28:37  [ http-nio-80-exec-3:190341 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:37  [ http-nio-80-exec-3:190341 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:37  [ http-nio-80-exec-3:190341 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@575ddc26] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:37  [ http-nio-80-exec-3:190341 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:37  [ http-nio-80-exec-3:190342 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:37  [ http-nio-80-exec-3:190342 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:37  [ http-nio-80-exec-3:190345 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:37  [ http-nio-80-exec-3:190346 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@575ddc26]
2018-06-09 16:28:37  [ http-nio-80-exec-3:190346 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:37  [ http-nio-80-exec-3:190346 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5da5b756] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:37  [ http-nio-80-exec-3:190347 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:37  [ http-nio-80-exec-3:190347 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:28:37  [ http-nio-80-exec-3:190347 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:28:37  [ http-nio-80-exec-3:190348 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:37  [ http-nio-80-exec-3:190349 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5da5b756]
2018-06-09 16:28:37  [ http-nio-80-exec-3:190349 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:37  [ http-nio-80-exec-3:190349 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21a26158] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:37  [ http-nio-80-exec-3:190349 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:37  [ http-nio-80-exec-3:190350 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:37  [ http-nio-80-exec-3:190350 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:37  [ http-nio-80-exec-3:190351 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:37  [ http-nio-80-exec-3:190352 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21a26158]
2018-06-09 16:28:37  [ http-nio-80-exec-2:190562 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:37  [ http-nio-80-exec-2:190562 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:37  [ http-nio-80-exec-2:190563 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:28:37  [ http-nio-80-exec-2:190563 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:37  [ http-nio-80-exec-2:190563 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:37  [ http-nio-80-exec-2:190564 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4fcf3e] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:37  [ http-nio-80-exec-2:190564 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:37  [ http-nio-80-exec-2:190565 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:37  [ http-nio-80-exec-2:190565 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:37  [ http-nio-80-exec-2:190566 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:37  [ http-nio-80-exec-2:190567 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4fcf3e]
2018-06-09 16:28:37  [ http-nio-80-exec-2:190567 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:37  [ http-nio-80-exec-2:190568 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7a44e] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:37  [ http-nio-80-exec-2:190568 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2018-06-09 16:28:37  [ http-nio-80-exec-2:190583 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:37  [ http-nio-80-exec-2:190583 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:28:37  [ http-nio-80-exec-2:190584 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:28:37  [ http-nio-80-exec-2:190585 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:37  [ http-nio-80-exec-2:190585 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7a44e]
2018-06-09 16:28:39  [ http-nio-80-exec-9:191708 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:39  [ http-nio-80-exec-9:191708 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:39  [ http-nio-80-exec-9:191708 ] - [ INFO ]  # url --->/list
2018-06-09 16:28:39  [ http-nio-80-exec-9:191708 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:39  [ http-nio-80-exec-9:191709 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:39  [ http-nio-80-exec-9:191710 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@679aea39] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:39  [ http-nio-80-exec-9:191711 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:39  [ http-nio-80-exec-9:191711 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:28:39  [ http-nio-80-exec-9:191713 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:28:39  [ http-nio-80-exec-9:191715 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:28:39  [ http-nio-80-exec-9:191715 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@679aea39]
2018-06-09 16:28:39  [ http-nio-80-exec-10:191891 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:39  [ http-nio-80-exec-10:191892 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:39  [ http-nio-80-exec-10:191892 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:28:39  [ http-nio-80-exec-10:191892 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:39  [ http-nio-80-exec-10:191893 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:39  [ http-nio-80-exec-10:191893 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ac6a3e] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:39  [ http-nio-80-exec-10:191894 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:39  [ http-nio-80-exec-10:191894 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:39  [ http-nio-80-exec-10:191895 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:39  [ http-nio-80-exec-10:191896 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:39  [ http-nio-80-exec-10:191897 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ac6a3e]
2018-06-09 16:28:39  [ http-nio-80-exec-10:191897 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:39  [ http-nio-80-exec-10:191897 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40cf7644] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:39  [ http-nio-80-exec-10:191898 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.75
2018-06-09 16:28:39  [ http-nio-80-exec-10:191924 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:39  [ http-nio-80-exec-10:191924 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:28:39  [ http-nio-80-exec-10:191925 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:28:39  [ http-nio-80-exec-10:191926 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:39  [ http-nio-80-exec-10:191926 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40cf7644]
2018-06-09 16:28:40  [ http-nio-80-exec-8:193357 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:40  [ http-nio-80-exec-8:193357 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:40  [ http-nio-80-exec-8:193357 ] - [ INFO ]  # url --->/set
2018-06-09 16:28:40  [ http-nio-80-exec-8:193357 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:40  [ http-nio-80-exec-8:193358 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:40  [ http-nio-80-exec-8:193358 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a160d6] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:40  [ http-nio-80-exec-8:193359 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:40  [ http-nio-80-exec-8:193359 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:40  [ http-nio-80-exec-8:193360 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:40  [ http-nio-80-exec-8:193361 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:40  [ http-nio-80-exec-8:193362 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a160d6]
2018-06-09 16:28:41  [ http-nio-80-exec-7:194221 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:41  [ http-nio-80-exec-7:194221 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:41  [ http-nio-80-exec-7:194221 ] - [ INFO ]  # url --->/open
2018-06-09 16:28:41  [ http-nio-80-exec-7:194221 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:41  [ http-nio-80-exec-7:194223 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:41  [ http-nio-80-exec-7:194223 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@393e0593] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:41  [ http-nio-80-exec-7:194224 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:41  [ http-nio-80-exec-7:194224 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:41  [ http-nio-80-exec-7:194224 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:41  [ http-nio-80-exec-7:194226 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:41  [ http-nio-80-exec-7:194227 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@393e0593]
2018-06-09 16:28:41  [ http-nio-80-exec-7:194227 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:41  [ http-nio-80-exec-7:194228 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aea00b4] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:41  [ http-nio-80-exec-7:194228 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:41  [ http-nio-80-exec-7:194228 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:28:41  [ http-nio-80-exec-7:194229 ] - [ DEBUG ]  ==> Parameters: 0(String), 222222(String)
2018-06-09 16:28:41  [ http-nio-80-exec-7:194273 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:28:41  [ http-nio-80-exec-7:194273 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aea00b4]
2018-06-09 16:28:42  [ http-nio-80-exec-6:195306 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:42  [ http-nio-80-exec-6:195306 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:42  [ http-nio-80-exec-6:195306 ] - [ INFO ]  # url --->/main
2018-06-09 16:28:42  [ http-nio-80-exec-6:195307 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:42  [ http-nio-80-exec-6:195307 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:42  [ http-nio-80-exec-6:195308 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@522d821e] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:42  [ http-nio-80-exec-6:195308 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:42  [ http-nio-80-exec-6:195309 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:42  [ http-nio-80-exec-6:195309 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:42  [ http-nio-80-exec-6:195311 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:42  [ http-nio-80-exec-6:195313 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@522d821e]
2018-06-09 16:28:42  [ http-nio-80-exec-6:195314 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:42  [ http-nio-80-exec-6:195314 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fddb2f6] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:42  [ http-nio-80-exec-6:195314 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:42  [ http-nio-80-exec-6:195314 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:28:42  [ http-nio-80-exec-6:195315 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:28:42  [ http-nio-80-exec-6:195316 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:42  [ http-nio-80-exec-6:195316 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fddb2f6]
2018-06-09 16:28:42  [ http-nio-80-exec-6:195316 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:42  [ http-nio-80-exec-6:195317 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5663bc8a] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:42  [ http-nio-80-exec-6:195317 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:42  [ http-nio-80-exec-6:195317 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:42  [ http-nio-80-exec-6:195317 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:42  [ http-nio-80-exec-6:195318 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:42  [ http-nio-80-exec-6:195319 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5663bc8a]
2018-06-09 16:28:42  [ http-nio-80-exec-5:195511 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:42  [ http-nio-80-exec-5:195511 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:42  [ http-nio-80-exec-5:195511 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:28:42  [ http-nio-80-exec-5:195512 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:42  [ http-nio-80-exec-5:195513 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:42  [ http-nio-80-exec-5:195513 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2739c1b] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:42  [ http-nio-80-exec-5:195514 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:42  [ http-nio-80-exec-5:195514 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:42  [ http-nio-80-exec-5:195514 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:42  [ http-nio-80-exec-5:195516 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:42  [ http-nio-80-exec-5:195516 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2739c1b]
2018-06-09 16:28:42  [ http-nio-80-exec-5:195517 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:42  [ http-nio-80-exec-5:195517 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5325359b] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:42  [ http-nio-80-exec-5:195517 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8
2018-06-09 16:28:42  [ http-nio-80-exec-5:195526 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:42  [ http-nio-80-exec-5:195527 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:28:42  [ http-nio-80-exec-5:195527 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:28:42  [ http-nio-80-exec-5:195529 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:42  [ http-nio-80-exec-5:195530 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5325359b]
2018-06-09 16:28:44  [ http-nio-80-exec-4:197228 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:44  [ http-nio-80-exec-4:197229 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:44  [ http-nio-80-exec-4:197229 ] - [ INFO ]  # url --->/main
2018-06-09 16:28:44  [ http-nio-80-exec-4:197230 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:44  [ http-nio-80-exec-4:197230 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:44  [ http-nio-80-exec-4:197231 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38550989] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:44  [ http-nio-80-exec-4:197232 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:44  [ http-nio-80-exec-4:197232 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:44  [ http-nio-80-exec-4:197233 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:44  [ http-nio-80-exec-4:197238 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:44  [ http-nio-80-exec-4:197239 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38550989]
2018-06-09 16:28:44  [ http-nio-80-exec-4:197239 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:44  [ http-nio-80-exec-4:197239 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab2091e] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:44  [ http-nio-80-exec-4:197239 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:44  [ http-nio-80-exec-4:197239 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:28:44  [ http-nio-80-exec-4:197240 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:28:44  [ http-nio-80-exec-4:197241 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:44  [ http-nio-80-exec-4:197241 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab2091e]
2018-06-09 16:28:44  [ http-nio-80-exec-4:197241 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:44  [ http-nio-80-exec-4:197242 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3257054e] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:44  [ http-nio-80-exec-4:197242 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:44  [ http-nio-80-exec-4:197242 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:44  [ http-nio-80-exec-4:197242 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:44  [ http-nio-80-exec-4:197246 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:44  [ http-nio-80-exec-4:197247 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3257054e]
2018-06-09 16:28:44  [ http-nio-80-exec-1:197493 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:28:44  [ http-nio-80-exec-1:197494 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:28:44  [ http-nio-80-exec-1:197495 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:28:44  [ http-nio-80-exec-1:197496 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:28:44  [ http-nio-80-exec-1:197498 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:44  [ http-nio-80-exec-1:197498 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d321ecc] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:44  [ http-nio-80-exec-1:197499 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:44  [ http-nio-80-exec-1:197499 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:28:44  [ http-nio-80-exec-1:197499 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:28:44  [ http-nio-80-exec-1:197502 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:44  [ http-nio-80-exec-1:197502 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d321ecc]
2018-06-09 16:28:44  [ http-nio-80-exec-1:197502 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:28:44  [ http-nio-80-exec-1:197503 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14bea153] was not registered for synchronization because synchronization is not active
2018-06-09 16:28:44  [ http-nio-80-exec-1:197503 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8333333333333334
2018-06-09 16:28:44  [ http-nio-80-exec-1:197522 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:28:44  [ http-nio-80-exec-1:197523 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:28:44  [ http-nio-80-exec-1:197523 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:28:44  [ http-nio-80-exec-1:197524 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:28:44  [ http-nio-80-exec-1:197525 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14bea153]
2018-06-09 16:29:20  [ http-nio-80-exec-3:233520 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:29:20  [ http-nio-80-exec-3:233521 ] - [ INFO ]  # user --->com.bankledger.entity.User@12a5c51a
2018-06-09 16:29:20  [ http-nio-80-exec-3:233521 ] - [ INFO ]  # url --->/main
2018-06-09 16:29:20  [ http-nio-80-exec-3:233521 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:29:20  [ http-nio-80-exec-3:233521 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:29:20  [ http-nio-80-exec-3:233521 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48358580] was not registered for synchronization because synchronization is not active
2018-06-09 16:29:20  [ http-nio-80-exec-3:233522 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@34b395a2] will not be managed by Spring
2018-06-09 16:29:20  [ http-nio-80-exec-3:233522 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:29:20  [ http-nio-80-exec-3:233522 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:29:20  [ http-nio-80-exec-3:233523 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:29:20  [ http-nio-80-exec-3:233524 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48358580]
2018-06-09 16:29:52  [ Thread-10:265625 ] - [ INFO ]  {dataSource-2} closed
2018-06-09 16:30:00  [ restartedMain:273181 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 12376 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-09 16:30:00  [ restartedMain:273181 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-09 16:30:00  [ restartedMain:273182 ] - [ INFO ]  The following profiles are active: dev
2018-06-09 16:30:01  [ restartedMain:273907 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-09 16:30:01  [ restartedMain:273909 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-09 16:30:01  [ restartedMain:273917 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-09 16:30:01  [ restartedMain:273918 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-09 16:30:01  [ restartedMain:273919 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-09 16:30:01  [ restartedMain:273920 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-09 16:30:01  [ restartedMain:273922 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-09 16:30:01  [ restartedMain:273922 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-09 16:30:01  [ restartedMain:273922 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-09 16:30:01  [ restartedMain:273922 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-09 16:30:01  [ restartedMain:273922 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-09 16:30:01  [ restartedMain:273922 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-09 16:30:01  [ restartedMain:273922 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-09 16:30:01  [ restartedMain:273923 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-09 16:30:01  [ restartedMain:274035 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:30:01  [ restartedMain:274036 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:30:01  [ restartedMain:274036 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:30:01  [ restartedMain:274037 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:30:01  [ restartedMain:274037 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:30:01  [ restartedMain:274037 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:30:01  [ restartedMain:274037 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:30:01  [ restartedMain:274038 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:30:01  [ restartedMain:274039 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:30:01  [ restartedMain:274040 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:30:01  [ restartedMain:274041 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:30:01  [ restartedMain:274051 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:30:01  [ restartedMain:274055 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:30:01  [ restartedMain:274056 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:30:01  [ restartedMain:274056 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:30:01  [ restartedMain:274056 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:30:01  [ restartedMain:274590 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-09 16:30:02  [ restartedMain:274855 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:30:02  [ restartedMain:274856 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-09 16:30:02  [ restartedMain:274858 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-09 16:30:02  [ restartedMain:274859 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-09 16:30:02  [ restartedMain:274859 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-09 16:30:02  [ restartedMain:274859 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-09 16:30:02  [ restartedMain:274859 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-09 16:30:02  [ restartedMain:274859 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-09 16:30:02  [ restartedMain:274860 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-09 16:30:02  [ restartedMain:274860 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-09 16:30:02  [ restartedMain:274861 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-09 16:30:02  [ restartedMain:274866 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-09 16:30:02  [ restartedMain:274866 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-09 16:30:02  [ restartedMain:274866 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-09 16:30:02  [ restartedMain:274866 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-09 16:30:02  [ restartedMain:274866 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-09 16:30:02  [ restartedMain:275240 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-09 16:30:02  [ http-nio-80-exec-3:275277 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:30:02  [ http-nio-80-exec-3:275281 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20d1c69a] was not registered for synchronization because synchronization is not active
2018-06-09 16:30:02  [ http-nio-80-exec-3:275288 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20d1c69a]
2018-06-09 16:30:02  [ restartedMain:275328 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-09 16:30:03  [ restartedMain:276116 ] - [ INFO ]  Started App in 2.99 seconds (JVM running for 276.922)
2018-06-09 16:30:03  [ http-nio-80-exec-9:276228 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:30:03  [ http-nio-80-exec-9:276230 ] - [ INFO ]  # user --->null
2018-06-09 16:30:03  [ http-nio-80-exec-9:276231 ] - [ INFO ]  # url --->/main
2018-06-09 16:30:03  [ http-nio-80-exec-9:276231 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:30:03  [ http-nio-80-exec-10:276241 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:30:03  [ http-nio-80-exec-10:276242 ] - [ INFO ]  # user --->null
2018-06-09 16:30:03  [ http-nio-80-exec-10:276242 ] - [ INFO ]  # url --->/login
2018-06-09 16:30:03  [ http-nio-80-exec-10:276242 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:30:03  [ http-nio-80-exec-10:276253 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-09 16:30:03  [ http-nio-80-exec-10:276268 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2d561f4c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4891bb0b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@40258de7
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-09 16:30:03  [ http-nio-80-exec-10:276272 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-09 16:30:10  [ http-nio-80-exec-7:283622 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:30:10  [ http-nio-80-exec-7:283624 ] - [ INFO ]  # user --->null
2018-06-09 16:30:10  [ http-nio-80-exec-7:283624 ] - [ INFO ]  # url --->/login
2018-06-09 16:30:10  [ http-nio-80-exec-7:283625 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:30:10  [ http-nio-80-exec-7:283638 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:30:10  [ http-nio-80-exec-7:283639 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34979102] was not registered for synchronization because synchronization is not active
2018-06-09 16:30:10  [ http-nio-80-exec-7:283644 ] - [ INFO ]  {dataSource-3} inited
2018-06-09 16:30:10  [ http-nio-80-exec-7:283651 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:30:10  [ http-nio-80-exec-7:283652 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:30:10  [ http-nio-80-exec-7:283654 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-09 16:30:10  [ http-nio-80-exec-7:283656 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:30:10  [ http-nio-80-exec-7:283657 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34979102]
2018-06-09 16:30:10  [ http-nio-80-exec-6:283672 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:30:10  [ http-nio-80-exec-6:283672 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:30:10  [ http-nio-80-exec-6:283672 ] - [ INFO ]  # url --->/main
2018-06-09 16:30:10  [ http-nio-80-exec-6:283672 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:30:10  [ http-nio-80-exec-6:283672 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:30:10  [ http-nio-80-exec-6:283673 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@342e7e5e] was not registered for synchronization because synchronization is not active
2018-06-09 16:30:10  [ http-nio-80-exec-6:283674 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:30:10  [ http-nio-80-exec-6:283674 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:30:10  [ http-nio-80-exec-6:283675 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:30:10  [ http-nio-80-exec-6:283676 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:30:10  [ http-nio-80-exec-6:283676 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@342e7e5e]
2018-06-09 16:30:16  [ http-nio-80-exec-6:289138 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:30:16  [ http-nio-80-exec-6:289143 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75137465] was not registered for synchronization because synchronization is not active
2018-06-09 16:30:16  [ http-nio-80-exec-6:289152 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:30:16  [ http-nio-80-exec-6:289159 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:30:16  [ http-nio-80-exec-6:289168 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:30:16  [ http-nio-80-exec-6:289177 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:30:16  [ http-nio-80-exec-6:289184 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75137465]
2018-06-09 16:30:22  [ http-nio-80-exec-8:294927 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:30:22  [ http-nio-80-exec-8:294927 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:30:22  [ http-nio-80-exec-8:294927 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:30:22  [ http-nio-80-exec-8:294927 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:30:22  [ http-nio-80-exec-8:294935 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:30:22  [ http-nio-80-exec-8:294935 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4efbebb6] was not registered for synchronization because synchronization is not active
2018-06-09 16:30:22  [ http-nio-80-exec-8:294935 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:30:22  [ http-nio-80-exec-8:294935 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:30:22  [ http-nio-80-exec-8:294936 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:30:22  [ http-nio-80-exec-8:294937 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:30:22  [ http-nio-80-exec-8:294938 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4efbebb6]
2018-06-09 16:30:22  [ http-nio-80-exec-8:294938 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:30:22  [ http-nio-80-exec-8:294938 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f7fa1a6] was not registered for synchronization because synchronization is not active
2018-06-09 16:30:22  [ http-nio-80-exec-8:294939 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-09 16:30:22  [ http-nio-80-exec-8:294951 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:30:22  [ http-nio-80-exec-8:294951 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:30:22  [ http-nio-80-exec-8:294952 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:30:22  [ http-nio-80-exec-8:294953 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:30:22  [ http-nio-80-exec-8:294953 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f7fa1a6]
2018-06-09 16:31:07  [ http-nio-80-exec-9:340031 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:07  [ http-nio-80-exec-9:340032 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:07  [ http-nio-80-exec-9:340033 ] - [ INFO ]  # url --->/main
2018-06-09 16:31:07  [ http-nio-80-exec-9:340034 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:07  [ http-nio-80-exec-9:340034 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:07  [ http-nio-80-exec-9:340035 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1032d81c] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:07  [ http-nio-80-exec-9:340035 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:07  [ http-nio-80-exec-9:340036 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:07  [ http-nio-80-exec-9:340037 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:07  [ http-nio-80-exec-9:340038 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:07  [ http-nio-80-exec-9:340039 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1032d81c]
2018-06-09 16:31:07  [ http-nio-80-exec-9:340039 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:07  [ http-nio-80-exec-9:340039 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aaedc67] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:07  [ http-nio-80-exec-9:340039 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:07  [ http-nio-80-exec-9:340040 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:31:07  [ http-nio-80-exec-9:340040 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:31:07  [ http-nio-80-exec-9:340041 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:07  [ http-nio-80-exec-9:340042 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aaedc67]
2018-06-09 16:31:12  [ http-nio-80-exec-10:344701 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:12  [ http-nio-80-exec-10:344703 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:12  [ http-nio-80-exec-10:344703 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:31:12  [ http-nio-80-exec-10:344704 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:12  [ http-nio-80-exec-10:344705 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:12  [ http-nio-80-exec-10:344706 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4834ec64] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:12  [ http-nio-80-exec-10:344706 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:12  [ http-nio-80-exec-10:344707 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:12  [ http-nio-80-exec-10:344708 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:12  [ http-nio-80-exec-10:344709 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:12  [ http-nio-80-exec-10:344709 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4834ec64]
2018-06-09 16:31:12  [ http-nio-80-exec-10:344710 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:12  [ http-nio-80-exec-10:344710 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574e68ee] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:12  [ http-nio-80-exec-10:344711 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.5
2018-06-09 16:31:12  [ http-nio-80-exec-10:344725 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:12  [ http-nio-80-exec-10:344726 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:31:12  [ http-nio-80-exec-10:344726 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:12  [ http-nio-80-exec-10:344727 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:12  [ http-nio-80-exec-10:344728 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574e68ee]
2018-06-09 16:31:15  [ http-nio-80-exec-7:348496 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:15  [ http-nio-80-exec-7:348496 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:15  [ http-nio-80-exec-7:348496 ] - [ INFO ]  # url --->/set
2018-06-09 16:31:15  [ http-nio-80-exec-7:348496 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:15  [ http-nio-80-exec-7:348498 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:15  [ http-nio-80-exec-7:348498 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48390cf1] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:15  [ http-nio-80-exec-7:348498 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:15  [ http-nio-80-exec-7:348498 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:15  [ http-nio-80-exec-7:348499 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:15  [ http-nio-80-exec-7:348500 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:15  [ http-nio-80-exec-7:348500 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48390cf1]
2018-06-09 16:31:16  [ http-nio-80-exec-2:349573 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:16  [ http-nio-80-exec-2:349574 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:16  [ http-nio-80-exec-2:349574 ] - [ INFO ]  # url --->/open
2018-06-09 16:31:16  [ http-nio-80-exec-2:349574 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:16  [ http-nio-80-exec-2:349577 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:16  [ http-nio-80-exec-2:349577 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b938ab0] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:16  [ http-nio-80-exec-2:349579 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:16  [ http-nio-80-exec-2:349579 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:16  [ http-nio-80-exec-2:349580 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:16  [ http-nio-80-exec-2:349581 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:16  [ http-nio-80-exec-2:349582 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b938ab0]
2018-06-09 16:31:16  [ http-nio-80-exec-2:349582 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:16  [ http-nio-80-exec-2:349583 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aae808b] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:16  [ http-nio-80-exec-2:349583 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:16  [ http-nio-80-exec-2:349583 ] - [ DEBUG ]  ==>  Preparing: update user set isopen = ? where idcard = ? 
2018-06-09 16:31:16  [ http-nio-80-exec-2:349584 ] - [ DEBUG ]  ==> Parameters: 1(String), 222222(String)
2018-06-09 16:31:16  [ http-nio-80-exec-2:349624 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:31:16  [ http-nio-80-exec-2:349624 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aae808b]
2018-06-09 16:31:17  [ http-nio-80-exec-3:350321 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:17  [ http-nio-80-exec-3:350321 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:17  [ http-nio-80-exec-3:350321 ] - [ INFO ]  # url --->/main
2018-06-09 16:31:17  [ http-nio-80-exec-3:350321 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:17  [ http-nio-80-exec-3:350322 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:17  [ http-nio-80-exec-3:350322 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@101b1aed] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:17  [ http-nio-80-exec-3:350323 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:17  [ http-nio-80-exec-3:350324 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:17  [ http-nio-80-exec-3:350325 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:17  [ http-nio-80-exec-3:350326 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:17  [ http-nio-80-exec-3:350326 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@101b1aed]
2018-06-09 16:31:17  [ http-nio-80-exec-3:350327 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:17  [ http-nio-80-exec-3:350327 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@512610d6] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:17  [ http-nio-80-exec-3:350327 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:17  [ http-nio-80-exec-3:350327 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:31:17  [ http-nio-80-exec-3:350328 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:31:17  [ http-nio-80-exec-3:350329 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:17  [ http-nio-80-exec-3:350329 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@512610d6]
2018-06-09 16:31:17  [ http-nio-80-exec-5:350458 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:17  [ http-nio-80-exec-5:350458 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:17  [ http-nio-80-exec-5:350458 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:31:17  [ http-nio-80-exec-5:350458 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:17  [ http-nio-80-exec-5:350459 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:17  [ http-nio-80-exec-5:350459 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f557c75] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:17  [ http-nio-80-exec-5:350459 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:17  [ http-nio-80-exec-5:350460 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:17  [ http-nio-80-exec-5:350460 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:17  [ http-nio-80-exec-5:350463 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:17  [ http-nio-80-exec-5:350464 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f557c75]
2018-06-09 16:31:17  [ http-nio-80-exec-5:350465 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:17  [ http-nio-80-exec-5:350465 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276fd08b] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:17  [ http-nio-80-exec-5:350465 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2018-06-09 16:31:17  [ http-nio-80-exec-5:350479 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:17  [ http-nio-80-exec-5:350480 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:31:17  [ http-nio-80-exec-5:350480 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:17  [ http-nio-80-exec-5:350481 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:17  [ http-nio-80-exec-5:350482 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276fd08b]
2018-06-09 16:31:27  [ http-nio-80-exec-1:359804 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:27  [ http-nio-80-exec-1:359804 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:27  [ http-nio-80-exec-1:359804 ] - [ INFO ]  # url --->/list
2018-06-09 16:31:27  [ http-nio-80-exec-1:359805 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:27  [ http-nio-80-exec-1:359806 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:27  [ http-nio-80-exec-1:359807 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bf3fc84] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:27  [ http-nio-80-exec-1:359807 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:27  [ http-nio-80-exec-1:359807 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:31:27  [ http-nio-80-exec-1:359808 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:27  [ http-nio-80-exec-1:359815 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:31:27  [ http-nio-80-exec-1:359815 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bf3fc84]
2018-06-09 16:31:27  [ http-nio-80-exec-4:359906 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:27  [ http-nio-80-exec-4:359906 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:27  [ http-nio-80-exec-4:359906 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:31:27  [ http-nio-80-exec-4:359906 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:27  [ http-nio-80-exec-4:359907 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:27  [ http-nio-80-exec-4:359908 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f1bac34] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:27  [ http-nio-80-exec-4:359908 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:27  [ http-nio-80-exec-4:359909 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:27  [ http-nio-80-exec-4:359909 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:27  [ http-nio-80-exec-4:359910 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:27  [ http-nio-80-exec-4:359914 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f1bac34]
2018-06-09 16:31:27  [ http-nio-80-exec-4:359915 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:27  [ http-nio-80-exec-4:359916 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@513b1453] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:27  [ http-nio-80-exec-4:359918 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.75
2018-06-09 16:31:27  [ http-nio-80-exec-4:359939 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:27  [ http-nio-80-exec-4:359939 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:31:27  [ http-nio-80-exec-4:359940 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:27  [ http-nio-80-exec-4:359941 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:27  [ http-nio-80-exec-4:359942 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@513b1453]
2018-06-09 16:31:27  [ http-nio-80-exec-8:360317 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:27  [ http-nio-80-exec-8:360317 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:27  [ http-nio-80-exec-8:360317 ] - [ INFO ]  # url --->/organize
2018-06-09 16:31:27  [ http-nio-80-exec-8:360318 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:27  [ http-nio-80-exec-8:360319 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:27  [ http-nio-80-exec-8:360319 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@453df61] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:27  [ http-nio-80-exec-8:360319 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:27  [ http-nio-80-exec-8:360319 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-09 16:31:27  [ http-nio-80-exec-8:360320 ] - [ DEBUG ]  ==> Parameters: null
2018-06-09 16:31:27  [ http-nio-80-exec-8:360320 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:31:27  [ http-nio-80-exec-8:360321 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@453df61]
2018-06-09 16:31:27  [ http-nio-80-exec-9:360353 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:27  [ http-nio-80-exec-9:360354 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:27  [ http-nio-80-exec-9:360354 ] - [ INFO ]  # url --->/error
2018-06-09 16:31:27  [ http-nio-80-exec-9:360354 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:28  [ http-nio-80-exec-10:360802 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:28  [ http-nio-80-exec-10:360802 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:28  [ http-nio-80-exec-10:360802 ] - [ INFO ]  # url --->/main
2018-06-09 16:31:28  [ http-nio-80-exec-10:360803 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:28  [ http-nio-80-exec-10:360803 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:28  [ http-nio-80-exec-10:360803 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49576ad5] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:28  [ http-nio-80-exec-10:360804 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:28  [ http-nio-80-exec-10:360804 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:28  [ http-nio-80-exec-10:360805 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:28  [ http-nio-80-exec-10:360806 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:28  [ http-nio-80-exec-10:360807 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49576ad5]
2018-06-09 16:31:28  [ http-nio-80-exec-10:360807 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:28  [ http-nio-80-exec-10:360807 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab22e50] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:28  [ http-nio-80-exec-10:360807 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:28  [ http-nio-80-exec-10:360808 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:31:28  [ http-nio-80-exec-10:360808 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:31:28  [ http-nio-80-exec-10:360809 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:28  [ http-nio-80-exec-10:360809 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab22e50]
2018-06-09 16:31:28  [ http-nio-80-exec-7:360893 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:28  [ http-nio-80-exec-7:360894 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:28  [ http-nio-80-exec-7:360894 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:31:28  [ http-nio-80-exec-7:360894 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:28  [ http-nio-80-exec-7:360896 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:28  [ http-nio-80-exec-7:360897 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f41ba8] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:28  [ http-nio-80-exec-7:360898 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:28  [ http-nio-80-exec-7:360899 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:28  [ http-nio-80-exec-7:360900 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:28  [ http-nio-80-exec-7:360901 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:28  [ http-nio-80-exec-7:360901 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f41ba8]
2018-06-09 16:31:28  [ http-nio-80-exec-7:360902 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:28  [ http-nio-80-exec-7:360902 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b5a0e1b] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:28  [ http-nio-80-exec-7:360902 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8
2018-06-09 16:31:28  [ http-nio-80-exec-7:360923 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:28  [ http-nio-80-exec-7:360923 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:31:28  [ http-nio-80-exec-7:360924 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:28  [ http-nio-80-exec-7:360924 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:28  [ http-nio-80-exec-7:360925 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b5a0e1b]
2018-06-09 16:31:28  [ http-nio-80-exec-6:361141 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:28  [ http-nio-80-exec-6:361142 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:28  [ http-nio-80-exec-6:361142 ] - [ INFO ]  # url --->/list
2018-06-09 16:31:28  [ http-nio-80-exec-6:361142 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:28  [ http-nio-80-exec-6:361143 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:28  [ http-nio-80-exec-6:361144 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@455e976e] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:28  [ http-nio-80-exec-6:361144 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:28  [ http-nio-80-exec-6:361144 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:31:28  [ http-nio-80-exec-6:361147 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:28  [ http-nio-80-exec-6:361148 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:31:28  [ http-nio-80-exec-6:361149 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@455e976e]
2018-06-09 16:31:28  [ http-nio-80-exec-2:361254 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:28  [ http-nio-80-exec-2:361254 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:28  [ http-nio-80-exec-2:361254 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:31:28  [ http-nio-80-exec-2:361254 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:28  [ http-nio-80-exec-2:361255 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:28  [ http-nio-80-exec-2:361255 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a817fc4] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:28  [ http-nio-80-exec-2:361255 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:28  [ http-nio-80-exec-2:361256 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:28  [ http-nio-80-exec-2:361256 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:28  [ http-nio-80-exec-2:361257 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:28  [ http-nio-80-exec-2:361257 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a817fc4]
2018-06-09 16:31:28  [ http-nio-80-exec-2:361257 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:28  [ http-nio-80-exec-2:361258 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33406cff] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:28  [ http-nio-80-exec-2:361258 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8333333333333334
2018-06-09 16:31:28  [ http-nio-80-exec-2:361272 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:28  [ http-nio-80-exec-2:361272 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:31:28  [ http-nio-80-exec-2:361272 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:28  [ http-nio-80-exec-2:361274 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:28  [ http-nio-80-exec-2:361274 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33406cff]
2018-06-09 16:31:28  [ http-nio-80-exec-3:361685 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:28  [ http-nio-80-exec-3:361685 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:28  [ http-nio-80-exec-3:361686 ] - [ INFO ]  # url --->/organize
2018-06-09 16:31:28  [ http-nio-80-exec-3:361686 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:28  [ http-nio-80-exec-3:361686 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:29  [ http-nio-80-exec-3:361687 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@540e38e8] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:29  [ http-nio-80-exec-3:361687 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:29  [ http-nio-80-exec-3:361688 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-09 16:31:29  [ http-nio-80-exec-3:361689 ] - [ DEBUG ]  ==> Parameters: null
2018-06-09 16:31:29  [ http-nio-80-exec-3:361690 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:31:29  [ http-nio-80-exec-3:361690 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@540e38e8]
2018-06-09 16:31:29  [ http-nio-80-exec-5:361720 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:29  [ http-nio-80-exec-5:361721 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:29  [ http-nio-80-exec-5:361721 ] - [ INFO ]  # url --->/error
2018-06-09 16:31:29  [ http-nio-80-exec-5:361721 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:29  [ http-nio-80-exec-1:362042 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:29  [ http-nio-80-exec-1:362044 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:29  [ http-nio-80-exec-1:362044 ] - [ INFO ]  # url --->/main
2018-06-09 16:31:29  [ http-nio-80-exec-1:362045 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:29  [ http-nio-80-exec-1:362046 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:29  [ http-nio-80-exec-1:362046 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d386cd4] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:29  [ http-nio-80-exec-1:362047 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:29  [ http-nio-80-exec-1:362047 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:29  [ http-nio-80-exec-1:362048 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:29  [ http-nio-80-exec-1:362049 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:29  [ http-nio-80-exec-1:362050 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d386cd4]
2018-06-09 16:31:29  [ http-nio-80-exec-1:362050 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:29  [ http-nio-80-exec-1:362050 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646b29ab] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:29  [ http-nio-80-exec-1:362051 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:29  [ http-nio-80-exec-1:362051 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:31:29  [ http-nio-80-exec-1:362051 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:31:29  [ http-nio-80-exec-1:362052 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:29  [ http-nio-80-exec-1:362053 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646b29ab]
2018-06-09 16:31:29  [ http-nio-80-exec-4:362188 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:29  [ http-nio-80-exec-4:362189 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:29  [ http-nio-80-exec-4:362189 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:31:29  [ http-nio-80-exec-4:362189 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:29  [ http-nio-80-exec-4:362190 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:29  [ http-nio-80-exec-4:362190 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e786e73] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:29  [ http-nio-80-exec-4:362191 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:29  [ http-nio-80-exec-4:362192 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:29  [ http-nio-80-exec-4:362192 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:29  [ http-nio-80-exec-4:362194 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:29  [ http-nio-80-exec-4:362194 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e786e73]
2018-06-09 16:31:29  [ http-nio-80-exec-4:362195 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:29  [ http-nio-80-exec-4:362195 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30011165] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:29  [ http-nio-80-exec-4:362196 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8571428571428571
2018-06-09 16:31:29  [ http-nio-80-exec-4:362211 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:29  [ http-nio-80-exec-4:362212 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:31:29  [ http-nio-80-exec-4:362212 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:29  [ http-nio-80-exec-4:362214 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:29  [ http-nio-80-exec-4:362215 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30011165]
2018-06-09 16:31:29  [ http-nio-80-exec-8:362370 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:29  [ http-nio-80-exec-8:362372 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:29  [ http-nio-80-exec-8:362373 ] - [ INFO ]  # url --->/list
2018-06-09 16:31:29  [ http-nio-80-exec-8:362373 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:29  [ http-nio-80-exec-8:362373 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:29  [ http-nio-80-exec-8:362374 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34a58fb9] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:29  [ http-nio-80-exec-8:362374 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:29  [ http-nio-80-exec-8:362374 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:31:29  [ http-nio-80-exec-8:362375 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:29  [ http-nio-80-exec-8:362375 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:31:29  [ http-nio-80-exec-8:362376 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34a58fb9]
2018-06-09 16:31:29  [ http-nio-80-exec-9:362487 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:29  [ http-nio-80-exec-9:362488 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:29  [ http-nio-80-exec-9:362488 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:31:29  [ http-nio-80-exec-9:362488 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:29  [ http-nio-80-exec-9:362489 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:29  [ http-nio-80-exec-9:362490 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e17133f] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:29  [ http-nio-80-exec-9:362490 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:29  [ http-nio-80-exec-9:362490 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:29  [ http-nio-80-exec-9:362491 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:29  [ http-nio-80-exec-9:362494 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:29  [ http-nio-80-exec-9:362496 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e17133f]
2018-06-09 16:31:29  [ http-nio-80-exec-9:362498 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:29  [ http-nio-80-exec-9:362499 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c3746a7] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:29  [ http-nio-80-exec-9:362499 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.875
2018-06-09 16:31:29  [ http-nio-80-exec-9:362517 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:29  [ http-nio-80-exec-9:362517 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:31:29  [ http-nio-80-exec-9:362517 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:29  [ http-nio-80-exec-9:362519 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:29  [ http-nio-80-exec-9:362520 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c3746a7]
2018-06-09 16:31:30  [ http-nio-80-exec-10:362707 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:30  [ http-nio-80-exec-10:362708 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:30  [ http-nio-80-exec-10:362708 ] - [ INFO ]  # url --->/organize
2018-06-09 16:31:30  [ http-nio-80-exec-10:362708 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:30  [ http-nio-80-exec-10:362708 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:30  [ http-nio-80-exec-10:362708 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e4bbf72] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:30  [ http-nio-80-exec-10:362709 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:30  [ http-nio-80-exec-10:362709 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-09 16:31:30  [ http-nio-80-exec-10:362709 ] - [ DEBUG ]  ==> Parameters: null
2018-06-09 16:31:30  [ http-nio-80-exec-10:362710 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:31:30  [ http-nio-80-exec-10:362713 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e4bbf72]
2018-06-09 16:31:30  [ http-nio-80-exec-7:362746 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:30  [ http-nio-80-exec-7:362746 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:30  [ http-nio-80-exec-7:362746 ] - [ INFO ]  # url --->/error
2018-06-09 16:31:30  [ http-nio-80-exec-7:362746 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:30  [ http-nio-80-exec-6:363075 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:30  [ http-nio-80-exec-6:363075 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:30  [ http-nio-80-exec-6:363075 ] - [ INFO ]  # url --->/list
2018-06-09 16:31:30  [ http-nio-80-exec-6:363076 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:30  [ http-nio-80-exec-6:363076 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:30  [ http-nio-80-exec-6:363076 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@326eccdd] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:30  [ http-nio-80-exec-6:363077 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:30  [ http-nio-80-exec-6:363077 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:31:30  [ http-nio-80-exec-6:363077 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:30  [ http-nio-80-exec-6:363079 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:31:30  [ http-nio-80-exec-6:363080 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@326eccdd]
2018-06-09 16:31:30  [ http-nio-80-exec-2:363204 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:30  [ http-nio-80-exec-2:363205 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:30  [ http-nio-80-exec-2:363205 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:31:30  [ http-nio-80-exec-2:363205 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:30  [ http-nio-80-exec-2:363206 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:30  [ http-nio-80-exec-2:363208 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f7d1c30] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:30  [ http-nio-80-exec-2:363208 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:30  [ http-nio-80-exec-2:363209 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:30  [ http-nio-80-exec-2:363209 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:30  [ http-nio-80-exec-2:363211 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:30  [ http-nio-80-exec-2:363212 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f7d1c30]
2018-06-09 16:31:30  [ http-nio-80-exec-2:363213 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:30  [ http-nio-80-exec-2:363213 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a07c7f] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:30  [ http-nio-80-exec-2:363214 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8888888888888888
2018-06-09 16:31:30  [ http-nio-80-exec-2:363233 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:30  [ http-nio-80-exec-2:363233 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:31:30  [ http-nio-80-exec-2:363234 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:30  [ http-nio-80-exec-2:363234 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:30  [ http-nio-80-exec-2:363235 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a07c7f]
2018-06-09 16:31:30  [ http-nio-80-exec-3:363402 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:30  [ http-nio-80-exec-3:363403 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:30  [ http-nio-80-exec-3:363403 ] - [ INFO ]  # url --->/main
2018-06-09 16:31:30  [ http-nio-80-exec-3:363403 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:30  [ http-nio-80-exec-3:363403 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:30  [ http-nio-80-exec-3:363403 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eafbd5e] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:30  [ http-nio-80-exec-3:363404 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:30  [ http-nio-80-exec-3:363404 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:30  [ http-nio-80-exec-3:363404 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:30  [ http-nio-80-exec-3:363406 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:30  [ http-nio-80-exec-3:363406 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eafbd5e]
2018-06-09 16:31:30  [ http-nio-80-exec-3:363407 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:30  [ http-nio-80-exec-3:363407 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ade0eff] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:30  [ http-nio-80-exec-3:363407 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:30  [ http-nio-80-exec-3:363407 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:31:30  [ http-nio-80-exec-3:363407 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:31:30  [ http-nio-80-exec-3:363408 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:30  [ http-nio-80-exec-3:363408 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ade0eff]
2018-06-09 16:31:30  [ http-nio-80-exec-5:363517 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:30  [ http-nio-80-exec-5:363517 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:30  [ http-nio-80-exec-5:363518 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:31:30  [ http-nio-80-exec-5:363518 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:30  [ http-nio-80-exec-5:363520 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:30  [ http-nio-80-exec-5:363520 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@334a7af8] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:30  [ http-nio-80-exec-5:363520 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:30  [ http-nio-80-exec-5:363520 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:30  [ http-nio-80-exec-5:363521 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:30  [ http-nio-80-exec-5:363522 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:30  [ http-nio-80-exec-5:363522 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@334a7af8]
2018-06-09 16:31:30  [ http-nio-80-exec-5:363522 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:30  [ http-nio-80-exec-5:363522 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44416bf5] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:30  [ http-nio-80-exec-5:363523 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9
2018-06-09 16:31:30  [ http-nio-80-exec-5:363539 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:30  [ http-nio-80-exec-5:363540 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:31:30  [ http-nio-80-exec-5:363540 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:30  [ http-nio-80-exec-5:363541 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:30  [ http-nio-80-exec-5:363542 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44416bf5]
2018-06-09 16:31:30  [ http-nio-80-exec-1:363683 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:30  [ http-nio-80-exec-1:363683 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:30  [ http-nio-80-exec-1:363684 ] - [ INFO ]  # url --->/list
2018-06-09 16:31:30  [ http-nio-80-exec-1:363684 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:30  [ http-nio-80-exec-1:363685 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:30  [ http-nio-80-exec-1:363685 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cf608a] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:30  [ http-nio-80-exec-1:363686 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:30  [ http-nio-80-exec-1:363686 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:31:31  [ http-nio-80-exec-1:363687 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:31  [ http-nio-80-exec-1:363688 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:31:31  [ http-nio-80-exec-1:363688 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cf608a]
2018-06-09 16:31:31  [ http-nio-80-exec-4:363773 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:31:31  [ http-nio-80-exec-4:363773 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:31:31  [ http-nio-80-exec-4:363773 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:31:31  [ http-nio-80-exec-4:363773 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:31:31  [ http-nio-80-exec-4:363774 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:31  [ http-nio-80-exec-4:363774 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ace60c8] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:31  [ http-nio-80-exec-4:363775 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:31  [ http-nio-80-exec-4:363775 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:31:31  [ http-nio-80-exec-4:363775 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:31:31  [ http-nio-80-exec-4:363776 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:31  [ http-nio-80-exec-4:363776 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ace60c8]
2018-06-09 16:31:31  [ http-nio-80-exec-4:363777 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:31:31  [ http-nio-80-exec-4:363777 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210dc740] was not registered for synchronization because synchronization is not active
2018-06-09 16:31:31  [ http-nio-80-exec-4:363777 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9090909090909091
2018-06-09 16:31:31  [ http-nio-80-exec-4:363790 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:31:31  [ http-nio-80-exec-4:363791 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:31:31  [ http-nio-80-exec-4:363791 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:31:31  [ http-nio-80-exec-4:363792 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:31:31  [ http-nio-80-exec-4:363792 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210dc740]
2018-06-09 16:32:21  [ http-nio-80-exec-7:414274 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:32:21  [ http-nio-80-exec-7:414274 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:32:21  [ http-nio-80-exec-7:414275 ] - [ INFO ]  # url --->/list
2018-06-09 16:32:21  [ http-nio-80-exec-7:414275 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:32:21  [ http-nio-80-exec-7:414275 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:32:21  [ http-nio-80-exec-7:414276 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64004508] was not registered for synchronization because synchronization is not active
2018-06-09 16:32:21  [ http-nio-80-exec-7:414277 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:32:21  [ http-nio-80-exec-7:414277 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:32:21  [ http-nio-80-exec-7:414278 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:32:21  [ http-nio-80-exec-7:414279 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:32:21  [ http-nio-80-exec-7:414280 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64004508]
2018-06-09 16:32:21  [ http-nio-80-exec-4:414554 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:32:21  [ http-nio-80-exec-4:414554 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:32:21  [ http-nio-80-exec-4:414554 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:32:21  [ http-nio-80-exec-4:414554 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:32:21  [ http-nio-80-exec-4:414555 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:32:21  [ http-nio-80-exec-4:414555 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f69139b] was not registered for synchronization because synchronization is not active
2018-06-09 16:32:21  [ http-nio-80-exec-4:414556 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:32:21  [ http-nio-80-exec-4:414556 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:32:21  [ http-nio-80-exec-4:414557 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:32:21  [ http-nio-80-exec-4:414558 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:32:21  [ http-nio-80-exec-4:414558 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f69139b]
2018-06-09 16:32:21  [ http-nio-80-exec-4:414558 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:32:21  [ http-nio-80-exec-4:414559 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774a6ad4] was not registered for synchronization because synchronization is not active
2018-06-09 16:32:21  [ http-nio-80-exec-4:414559 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9166666666666666
2018-06-09 16:32:21  [ http-nio-80-exec-4:414571 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:32:21  [ http-nio-80-exec-4:414571 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:32:21  [ http-nio-80-exec-4:414572 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:32:21  [ http-nio-80-exec-4:414573 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:32:21  [ http-nio-80-exec-4:414573 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774a6ad4]
2018-06-09 16:35:46  [ http-nio-80-exec-10:619371 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:35:46  [ http-nio-80-exec-10:619371 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:35:46  [ http-nio-80-exec-10:619371 ] - [ INFO ]  # url --->/list
2018-06-09 16:35:46  [ http-nio-80-exec-10:619373 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:35:46  [ http-nio-80-exec-10:619373 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:35:46  [ http-nio-80-exec-10:619373 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a48b638] was not registered for synchronization because synchronization is not active
2018-06-09 16:35:46  [ http-nio-80-exec-10:619374 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:35:46  [ http-nio-80-exec-10:619375 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:35:46  [ http-nio-80-exec-10:619375 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:35:46  [ http-nio-80-exec-10:619376 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:35:46  [ http-nio-80-exec-10:619377 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a48b638]
2018-06-09 16:35:47  [ http-nio-80-exec-7:619703 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:35:47  [ http-nio-80-exec-7:619703 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:35:47  [ http-nio-80-exec-7:619703 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:35:47  [ http-nio-80-exec-7:619704 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:35:47  [ http-nio-80-exec-7:619704 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:35:47  [ http-nio-80-exec-7:619705 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a06e7df] was not registered for synchronization because synchronization is not active
2018-06-09 16:35:47  [ http-nio-80-exec-7:619705 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:35:47  [ http-nio-80-exec-7:619705 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:35:47  [ http-nio-80-exec-7:619706 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:35:47  [ http-nio-80-exec-7:619707 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:35:47  [ http-nio-80-exec-7:619707 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a06e7df]
2018-06-09 16:35:47  [ http-nio-80-exec-7:619708 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:35:47  [ http-nio-80-exec-7:619708 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cc9eea] was not registered for synchronization because synchronization is not active
2018-06-09 16:35:47  [ http-nio-80-exec-7:619708 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9230769230769231
2018-06-09 16:35:47  [ http-nio-80-exec-7:619738 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:35:47  [ http-nio-80-exec-7:619738 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:35:47  [ http-nio-80-exec-7:619738 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:35:47  [ http-nio-80-exec-7:619739 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:35:47  [ http-nio-80-exec-7:619740 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cc9eea]
2018-06-09 16:35:49  [ http-nio-80-exec-6:622049 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:35:49  [ http-nio-80-exec-6:622049 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:35:49  [ http-nio-80-exec-6:622050 ] - [ INFO ]  # url --->/list
2018-06-09 16:35:49  [ http-nio-80-exec-6:622050 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:35:49  [ http-nio-80-exec-6:622050 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:35:49  [ http-nio-80-exec-6:622051 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5704e4e2] was not registered for synchronization because synchronization is not active
2018-06-09 16:35:49  [ http-nio-80-exec-6:622051 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:35:49  [ http-nio-80-exec-6:622051 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:35:49  [ http-nio-80-exec-6:622052 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:35:49  [ http-nio-80-exec-6:622053 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:35:49  [ http-nio-80-exec-6:622053 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5704e4e2]
2018-06-09 16:35:49  [ http-nio-80-exec-8:622277 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:35:49  [ http-nio-80-exec-8:622277 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:35:49  [ http-nio-80-exec-8:622277 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:35:49  [ http-nio-80-exec-8:622279 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:35:49  [ http-nio-80-exec-8:622282 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:35:49  [ http-nio-80-exec-8:622283 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c2e5bbf] was not registered for synchronization because synchronization is not active
2018-06-09 16:35:49  [ http-nio-80-exec-8:622283 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:35:49  [ http-nio-80-exec-8:622283 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:35:49  [ http-nio-80-exec-8:622284 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:35:49  [ http-nio-80-exec-8:622285 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:35:49  [ http-nio-80-exec-8:622285 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c2e5bbf]
2018-06-09 16:35:49  [ http-nio-80-exec-8:622286 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:35:49  [ http-nio-80-exec-8:622286 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c1dc4b0] was not registered for synchronization because synchronization is not active
2018-06-09 16:35:49  [ http-nio-80-exec-8:622286 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9285714285714286
2018-06-09 16:35:49  [ http-nio-80-exec-8:622302 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:35:49  [ http-nio-80-exec-8:622302 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:35:49  [ http-nio-80-exec-8:622302 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:35:49  [ http-nio-80-exec-8:622303 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:35:49  [ http-nio-80-exec-8:622304 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c1dc4b0]
2018-06-09 16:36:11  [ http-nio-80-exec-10:644630 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:11  [ http-nio-80-exec-10:644630 ] - [ INFO ]  # user --->null
2018-06-09 16:36:11  [ http-nio-80-exec-10:644630 ] - [ INFO ]  # url --->/set
2018-06-09 16:36:11  [ http-nio-80-exec-10:644631 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:11  [ http-nio-80-exec-4:644637 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:11  [ http-nio-80-exec-4:644638 ] - [ INFO ]  # user --->null
2018-06-09 16:36:11  [ http-nio-80-exec-4:644638 ] - [ INFO ]  # url --->/login
2018-06-09 16:36:11  [ http-nio-80-exec-4:644638 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:20  [ http-nio-80-exec-1:652874 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:20  [ http-nio-80-exec-1:652874 ] - [ INFO ]  # user --->null
2018-06-09 16:36:20  [ http-nio-80-exec-1:652874 ] - [ INFO ]  # url --->/login
2018-06-09 16:36:20  [ http-nio-80-exec-1:652875 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:20  [ http-nio-80-exec-1:652875 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:20  [ http-nio-80-exec-1:652876 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29db4a9d] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:20  [ http-nio-80-exec-1:652877 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:20  [ http-nio-80-exec-1:652877 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:36:20  [ http-nio-80-exec-1:652877 ] - [ DEBUG ]  ==> Parameters: 1(String), 111111(String), t123456(String)
2018-06-09 16:36:20  [ http-nio-80-exec-1:652879 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:20  [ http-nio-80-exec-1:652879 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29db4a9d]
2018-06-09 16:36:20  [ http-nio-80-exec-2:652898 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:20  [ http-nio-80-exec-2:652898 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:20  [ http-nio-80-exec-2:652898 ] - [ INFO ]  # url --->/main
2018-06-09 16:36:20  [ http-nio-80-exec-2:652898 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:20  [ http-nio-80-exec-2:652898 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:20  [ http-nio-80-exec-2:652899 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50a046a] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:20  [ http-nio-80-exec-2:652899 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:20  [ http-nio-80-exec-2:652899 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:20  [ http-nio-80-exec-2:652900 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:20  [ http-nio-80-exec-2:652901 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:20  [ http-nio-80-exec-2:652901 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50a046a]
2018-06-09 16:36:20  [ http-nio-80-exec-2:652901 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:20  [ http-nio-80-exec-2:652901 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba095f4] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:20  [ http-nio-80-exec-2:652902 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:20  [ http-nio-80-exec-2:652902 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-09 16:36:20  [ http-nio-80-exec-2:652902 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:20  [ http-nio-80-exec-2:652903 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:20  [ http-nio-80-exec-2:652904 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba095f4]
2018-06-09 16:36:20  [ http-nio-80-exec-5:653454 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:20  [ http-nio-80-exec-5:653454 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:20  [ http-nio-80-exec-5:653454 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:36:20  [ http-nio-80-exec-5:653454 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:20  [ http-nio-80-exec-5:653455 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:20  [ http-nio-80-exec-5:653455 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e2fa61b] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:20  [ http-nio-80-exec-5:653456 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:20  [ http-nio-80-exec-5:653456 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:20  [ http-nio-80-exec-5:653456 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:20  [ http-nio-80-exec-5:653457 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:20  [ http-nio-80-exec-5:653458 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e2fa61b]
2018-06-09 16:36:20  [ http-nio-80-exec-5:653458 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:20  [ http-nio-80-exec-5:653458 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fde3d54] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:20  [ http-nio-80-exec-5:653458 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9333333333333333
2018-06-09 16:36:20  [ http-nio-80-exec-5:653468 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:20  [ http-nio-80-exec-5:653468 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-09 16:36:20  [ http-nio-80-exec-5:653469 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:20  [ http-nio-80-exec-5:653470 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:20  [ http-nio-80-exec-5:653472 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-09 16:36:20  [ http-nio-80-exec-5:653472 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-09 16:36:20  [ http-nio-80-exec-5:653478 ] - [ DEBUG ]  <==      Total: 5
2018-06-09 16:36:20  [ http-nio-80-exec-5:653478 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fde3d54]
2018-06-09 16:36:22  [ http-nio-80-exec-3:654794 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:22  [ http-nio-80-exec-3:654794 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:22  [ http-nio-80-exec-3:654795 ] - [ INFO ]  # url --->/project/publish
2018-06-09 16:36:22  [ http-nio-80-exec-3:654795 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:23  [ http-nio-80-exec-6:656401 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:23  [ http-nio-80-exec-6:656402 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:23  [ http-nio-80-exec-6:656402 ] - [ INFO ]  # url --->/project/projectPage
2018-06-09 16:36:23  [ http-nio-80-exec-6:656402 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:24  [ http-nio-80-exec-9:656954 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:24  [ http-nio-80-exec-9:656954 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:24  [ http-nio-80-exec-9:656954 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:36:24  [ http-nio-80-exec-9:656954 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:24  [ http-nio-80-exec-9:656956 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:24  [ http-nio-80-exec-9:656956 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e42187] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:24  [ http-nio-80-exec-9:656956 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:24  [ http-nio-80-exec-9:656957 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:24  [ http-nio-80-exec-9:656957 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:24  [ http-nio-80-exec-9:656958 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:24  [ http-nio-80-exec-9:656958 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e42187]
2018-06-09 16:36:24  [ http-nio-80-exec-9:656958 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:24  [ http-nio-80-exec-9:656958 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@434d4670] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:24  [ http-nio-80-exec-9:656959 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9375
2018-06-09 16:36:24  [ http-nio-80-exec-9:656970 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:24  [ http-nio-80-exec-9:656970 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-09 16:36:24  [ http-nio-80-exec-9:656970 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:24  [ http-nio-80-exec-9:656971 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:24  [ http-nio-80-exec-9:656972 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-09 16:36:24  [ http-nio-80-exec-9:656973 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-09 16:36:24  [ http-nio-80-exec-9:656974 ] - [ DEBUG ]  <==      Total: 5
2018-06-09 16:36:24  [ http-nio-80-exec-9:656974 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@434d4670]
2018-06-09 16:36:26  [ http-nio-80-exec-8:659068 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:26  [ http-nio-80-exec-8:659068 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:26  [ http-nio-80-exec-8:659068 ] - [ INFO ]  # url --->/project/submitAuth
2018-06-09 16:36:26  [ http-nio-80-exec-8:659068 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:26  [ http-nio-80-exec-8:659075 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:26  [ http-nio-80-exec-8:659075 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@397d5239] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:26  [ http-nio-80-exec-8:659076 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:26  [ http-nio-80-exec-8:659076 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:26  [ http-nio-80-exec-8:659076 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:26  [ http-nio-80-exec-8:659077 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:26  [ http-nio-80-exec-8:659078 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@397d5239]
2018-06-09 16:36:26  [ http-nio-80-exec-8:659083 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:26  [ http-nio-80-exec-8:659084 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cec5f8c] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:26  [ http-nio-80-exec-8:659084 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:26  [ http-nio-80-exec-8:659084 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? and blockaddr = ? 
2018-06-09 16:36:26  [ http-nio-80-exec-8:659085 ] - [ DEBUG ]  ==> Parameters: 719285413052(String), 111111(String)
2018-06-09 16:36:26  [ http-nio-80-exec-8:659085 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:26  [ http-nio-80-exec-8:659086 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cec5f8c]
2018-06-09 16:36:26  [ http-nio-80-exec-8:659086 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:26  [ http-nio-80-exec-8:659086 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@672b4224] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:26  [ http-nio-80-exec-8:659086 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:26  [ http-nio-80-exec-8:659087 ] - [ DEBUG ]  ==>  Preparing: update project set status = ? where projectid = ? and blockaddr = ? 
2018-06-09 16:36:26  [ http-nio-80-exec-8:659087 ] - [ DEBUG ]  ==> Parameters: 1(String), 719285413052(String), 111111(String)
2018-06-09 16:36:26  [ http-nio-80-exec-8:659118 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:36:26  [ http-nio-80-exec-8:659118 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@672b4224]
2018-06-09 16:36:27  [ http-nio-80-exec-10:659984 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:27  [ http-nio-80-exec-10:659984 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:27  [ http-nio-80-exec-10:659984 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:36:27  [ http-nio-80-exec-10:659984 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:27  [ http-nio-80-exec-10:659985 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:27  [ http-nio-80-exec-10:659986 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e591ee5] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:27  [ http-nio-80-exec-10:659986 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:27  [ http-nio-80-exec-10:659986 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:27  [ http-nio-80-exec-10:659987 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:27  [ http-nio-80-exec-10:659988 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:27  [ http-nio-80-exec-10:659988 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e591ee5]
2018-06-09 16:36:27  [ http-nio-80-exec-10:659989 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:27  [ http-nio-80-exec-10:659989 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15fb6c89] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:27  [ http-nio-80-exec-10:659989 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9411764705882353
2018-06-09 16:36:27  [ http-nio-80-exec-10:660020 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:27  [ http-nio-80-exec-10:660020 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-09 16:36:27  [ http-nio-80-exec-10:660021 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:27  [ http-nio-80-exec-10:660022 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:27  [ http-nio-80-exec-10:660023 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-09 16:36:27  [ http-nio-80-exec-10:660024 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-09 16:36:27  [ http-nio-80-exec-10:660028 ] - [ DEBUG ]  <==      Total: 5
2018-06-09 16:36:27  [ http-nio-80-exec-10:660029 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15fb6c89]
2018-06-09 16:36:28  [ http-nio-80-exec-4:661386 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:28  [ http-nio-80-exec-4:661387 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:28  [ http-nio-80-exec-4:661387 ] - [ INFO ]  # url --->/project/submitAuth
2018-06-09 16:36:28  [ http-nio-80-exec-4:661387 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:28  [ http-nio-80-exec-4:661387 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:28  [ http-nio-80-exec-4:661388 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b25d171] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:28  [ http-nio-80-exec-4:661388 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:28  [ http-nio-80-exec-4:661388 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:28  [ http-nio-80-exec-4:661388 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:28  [ http-nio-80-exec-4:661389 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:28  [ http-nio-80-exec-4:661390 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b25d171]
2018-06-09 16:36:28  [ http-nio-80-exec-4:661390 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:28  [ http-nio-80-exec-4:661390 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b015ae3] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:28  [ http-nio-80-exec-4:661390 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:28  [ http-nio-80-exec-4:661390 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? and blockaddr = ? 
2018-06-09 16:36:28  [ http-nio-80-exec-4:661391 ] - [ DEBUG ]  ==> Parameters: 719286129380(String), 111111(String)
2018-06-09 16:36:28  [ http-nio-80-exec-4:661392 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:28  [ http-nio-80-exec-4:661392 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b015ae3]
2018-06-09 16:36:28  [ http-nio-80-exec-4:661392 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:28  [ http-nio-80-exec-4:661393 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56773e03] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:28  [ http-nio-80-exec-4:661393 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:28  [ http-nio-80-exec-4:661393 ] - [ DEBUG ]  ==>  Preparing: update project set status = ? where projectid = ? and blockaddr = ? 
2018-06-09 16:36:28  [ http-nio-80-exec-4:661395 ] - [ DEBUG ]  ==> Parameters: 1(String), 719286129380(String), 111111(String)
2018-06-09 16:36:28  [ http-nio-80-exec-4:661426 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:36:28  [ http-nio-80-exec-4:661427 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56773e03]
2018-06-09 16:36:29  [ http-nio-80-exec-1:662430 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:29  [ http-nio-80-exec-1:662430 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:29  [ http-nio-80-exec-1:662430 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:36:29  [ http-nio-80-exec-1:662431 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:29  [ http-nio-80-exec-1:662431 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:29  [ http-nio-80-exec-1:662431 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a192714] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:29  [ http-nio-80-exec-1:662432 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:29  [ http-nio-80-exec-1:662432 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:29  [ http-nio-80-exec-1:662433 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:29  [ http-nio-80-exec-1:662434 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:29  [ http-nio-80-exec-1:662434 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a192714]
2018-06-09 16:36:29  [ http-nio-80-exec-1:662435 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:29  [ http-nio-80-exec-1:662436 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@be38639] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:29  [ http-nio-80-exec-1:662436 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9444444444444444
2018-06-09 16:36:29  [ http-nio-80-exec-1:662453 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:29  [ http-nio-80-exec-1:662453 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-09 16:36:29  [ http-nio-80-exec-1:662454 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:29  [ http-nio-80-exec-1:662455 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:29  [ http-nio-80-exec-1:662456 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-09 16:36:29  [ http-nio-80-exec-1:662457 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-09 16:36:29  [ http-nio-80-exec-1:662460 ] - [ DEBUG ]  <==      Total: 5
2018-06-09 16:36:29  [ http-nio-80-exec-1:662461 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@be38639]
2018-06-09 16:36:31  [ http-nio-80-exec-2:663746 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:31  [ http-nio-80-exec-2:663746 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:31  [ http-nio-80-exec-2:663746 ] - [ INFO ]  # url --->/project/submitAuth
2018-06-09 16:36:31  [ http-nio-80-exec-2:663746 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:31  [ http-nio-80-exec-2:663747 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:31  [ http-nio-80-exec-2:663747 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@481ac061] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:31  [ http-nio-80-exec-2:663748 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:31  [ http-nio-80-exec-2:663748 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:31  [ http-nio-80-exec-2:663748 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:31  [ http-nio-80-exec-2:663749 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:31  [ http-nio-80-exec-2:663750 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@481ac061]
2018-06-09 16:36:31  [ http-nio-80-exec-2:663750 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:31  [ http-nio-80-exec-2:663750 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b98ea6] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:31  [ http-nio-80-exec-2:663750 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:31  [ http-nio-80-exec-2:663750 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? and blockaddr = ? 
2018-06-09 16:36:31  [ http-nio-80-exec-2:663751 ] - [ DEBUG ]  ==> Parameters: 719290337404(String), 111111(String)
2018-06-09 16:36:31  [ http-nio-80-exec-2:663752 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:31  [ http-nio-80-exec-2:663752 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b98ea6]
2018-06-09 16:36:31  [ http-nio-80-exec-2:663752 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:31  [ http-nio-80-exec-2:663752 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ed5f25c] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:31  [ http-nio-80-exec-2:663752 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:31  [ http-nio-80-exec-2:663753 ] - [ DEBUG ]  ==>  Preparing: update project set status = ? where projectid = ? and blockaddr = ? 
2018-06-09 16:36:31  [ http-nio-80-exec-2:663753 ] - [ DEBUG ]  ==> Parameters: 1(String), 719290337404(String), 111111(String)
2018-06-09 16:36:31  [ http-nio-80-exec-2:663773 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:36:31  [ http-nio-80-exec-2:663774 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ed5f25c]
2018-06-09 16:36:31  [ http-nio-80-exec-5:664372 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:31  [ http-nio-80-exec-5:664372 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:31  [ http-nio-80-exec-5:664373 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:36:31  [ http-nio-80-exec-5:664373 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:31  [ http-nio-80-exec-5:664374 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:31  [ http-nio-80-exec-5:664374 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd1bb59] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:31  [ http-nio-80-exec-5:664375 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:31  [ http-nio-80-exec-5:664375 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:31  [ http-nio-80-exec-5:664375 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:31  [ http-nio-80-exec-5:664377 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:31  [ http-nio-80-exec-5:664379 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd1bb59]
2018-06-09 16:36:31  [ http-nio-80-exec-5:664379 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:31  [ http-nio-80-exec-5:664379 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e841f19] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:31  [ http-nio-80-exec-5:664380 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9473684210526315
2018-06-09 16:36:31  [ http-nio-80-exec-5:664395 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:31  [ http-nio-80-exec-5:664396 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-09 16:36:31  [ http-nio-80-exec-5:664396 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-09 16:36:31  [ http-nio-80-exec-5:664397 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:31  [ http-nio-80-exec-5:664398 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-09 16:36:31  [ http-nio-80-exec-5:664399 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-09 16:36:31  [ http-nio-80-exec-5:664400 ] - [ DEBUG ]  <==      Total: 5
2018-06-09 16:36:31  [ http-nio-80-exec-5:664401 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e841f19]
2018-06-09 16:36:32  [ http-nio-80-exec-3:665442 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:32  [ http-nio-80-exec-3:665442 ] - [ INFO ]  # user --->com.bankledger.entity.User@172d72b4
2018-06-09 16:36:32  [ http-nio-80-exec-3:665442 ] - [ INFO ]  # url --->/loginOut
2018-06-09 16:36:32  [ http-nio-80-exec-3:665442 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:32  [ http-nio-80-exec-7:665471 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:32  [ http-nio-80-exec-7:665471 ] - [ INFO ]  # user --->null
2018-06-09 16:36:32  [ http-nio-80-exec-7:665471 ] - [ INFO ]  # url --->/login
2018-06-09 16:36:32  [ http-nio-80-exec-7:665471 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:36  [ http-nio-80-exec-6:669589 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:36  [ http-nio-80-exec-6:669589 ] - [ INFO ]  # user --->null
2018-06-09 16:36:36  [ http-nio-80-exec-6:669589 ] - [ INFO ]  # url --->/login
2018-06-09 16:36:36  [ http-nio-80-exec-6:669590 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:36  [ http-nio-80-exec-6:669590 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:36  [ http-nio-80-exec-6:669591 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3209ce70] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:36  [ http-nio-80-exec-6:669591 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:36  [ http-nio-80-exec-6:669591 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript from user where type = ? and idcard = ? and password = ? 
2018-06-09 16:36:36  [ http-nio-80-exec-6:669592 ] - [ DEBUG ]  ==> Parameters: 0(String), 000000(String), t123456(String)
2018-06-09 16:36:36  [ http-nio-80-exec-6:669594 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:36  [ http-nio-80-exec-6:669595 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3209ce70]
2018-06-09 16:36:36  [ http-nio-80-exec-9:669615 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:36  [ http-nio-80-exec-9:669615 ] - [ INFO ]  # user --->com.bankledger.entity.User@5b1f6e93
2018-06-09 16:36:36  [ http-nio-80-exec-9:669615 ] - [ INFO ]  # url --->/main
2018-06-09 16:36:36  [ http-nio-80-exec-9:669615 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:36  [ http-nio-80-exec-9:669616 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:36  [ http-nio-80-exec-9:669616 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44ddd171] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:36  [ http-nio-80-exec-9:669616 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:36  [ http-nio-80-exec-9:669616 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:36  [ http-nio-80-exec-9:669617 ] - [ DEBUG ]  ==> Parameters: 000000(String)
2018-06-09 16:36:36  [ http-nio-80-exec-9:669618 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:36  [ http-nio-80-exec-9:669618 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44ddd171]
2018-06-09 16:36:36  [ http-nio-80-exec-9:669619 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:36  [ http-nio-80-exec-9:669619 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d2e6414] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:36  [ http-nio-80-exec-9:669619 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:36  [ http-nio-80-exec-9:669619 ] - [ DEBUG ]  ==>  Preparing: select count(0) from project where status= '1' 
2018-06-09 16:36:36  [ http-nio-80-exec-9:669620 ] - [ DEBUG ]  ==> Parameters: 
2018-06-09 16:36:36  [ http-nio-80-exec-9:669620 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:36  [ http-nio-80-exec-9:669621 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d2e6414]
2018-06-09 16:36:37  [ http-nio-80-exec-8:670156 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:37  [ http-nio-80-exec-8:670157 ] - [ INFO ]  # user --->com.bankledger.entity.User@5b1f6e93
2018-06-09 16:36:37  [ http-nio-80-exec-8:670157 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:36:37  [ http-nio-80-exec-8:670157 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:37  [ http-nio-80-exec-8:670158 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:37  [ http-nio-80-exec-8:670158 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@114f553] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:37  [ http-nio-80-exec-8:670159 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:37  [ http-nio-80-exec-8:670159 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:37  [ http-nio-80-exec-8:670159 ] - [ DEBUG ]  ==> Parameters: 000000(String)
2018-06-09 16:36:37  [ http-nio-80-exec-8:670160 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:37  [ http-nio-80-exec-8:670161 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@114f553]
2018-06-09 16:36:37  [ http-nio-80-exec-8:670161 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:37  [ http-nio-80-exec-8:670162 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e79c0bc] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:37  [ http-nio-80-exec-8:670162 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.95
2018-06-09 16:36:37  [ http-nio-80-exec-8:670174 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:37  [ http-nio-80-exec-8:670175 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-09 16:36:37  [ http-nio-80-exec-8:670175 ] - [ DEBUG ]  ==> Parameters: 
2018-06-09 16:36:37  [ http-nio-80-exec-8:670176 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:37  [ http-nio-80-exec-8:670177 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-09 16:36:37  [ http-nio-80-exec-8:670178 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-09 16:36:37  [ http-nio-80-exec-8:670202 ] - [ DEBUG ]  <==      Total: 5
2018-06-09 16:36:37  [ http-nio-80-exec-8:670203 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e79c0bc]
2018-06-09 16:36:38  [ http-nio-80-exec-10:671188 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:38  [ http-nio-80-exec-10:671190 ] - [ INFO ]  # user --->com.bankledger.entity.User@5b1f6e93
2018-06-09 16:36:38  [ http-nio-80-exec-10:671190 ] - [ INFO ]  # url --->/project/auth
2018-06-09 16:36:38  [ http-nio-80-exec-10:671190 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:38  [ http-nio-80-exec-1:671594 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:38  [ http-nio-80-exec-1:671594 ] - [ INFO ]  # user --->com.bankledger.entity.User@5b1f6e93
2018-06-09 16:36:38  [ http-nio-80-exec-1:671594 ] - [ INFO ]  # url --->/project/getListAuth
2018-06-09 16:36:38  [ http-nio-80-exec-1:671594 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:38  [ http-nio-80-exec-1:671599 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:38  [ http-nio-80-exec-1:671599 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a867e5] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:38  [ http-nio-80-exec-1:671599 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9523809523809523
2018-06-09 16:36:38  [ http-nio-80-exec-1:671608 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:38  [ http-nio-80-exec-1:671608 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-09 16:36:38  [ http-nio-80-exec-1:671609 ] - [ DEBUG ]  ==> Parameters: 
2018-06-09 16:36:38  [ http-nio-80-exec-1:671610 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:38  [ http-nio-80-exec-1:671611 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-09 16:36:38  [ http-nio-80-exec-1:671611 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-09 16:36:38  [ http-nio-80-exec-1:671614 ] - [ DEBUG ]  <==      Total: 5
2018-06-09 16:36:38  [ http-nio-80-exec-1:671615 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a867e5]
2018-06-09 16:36:40  [ http-nio-80-exec-2:673347 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:40  [ http-nio-80-exec-2:673348 ] - [ INFO ]  # user --->com.bankledger.entity.User@5b1f6e93
2018-06-09 16:36:40  [ http-nio-80-exec-2:673348 ] - [ INFO ]  # url --->/project/passAuth
2018-06-09 16:36:40  [ http-nio-80-exec-2:673348 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:40  [ http-nio-80-exec-2:673349 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:40  [ http-nio-80-exec-2:673349 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64df806b] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:40  [ http-nio-80-exec-2:673349 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:40  [ http-nio-80-exec-2:673349 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:40  [ http-nio-80-exec-2:673350 ] - [ DEBUG ]  ==> Parameters: 000000(String)
2018-06-09 16:36:40  [ http-nio-80-exec-2:673351 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:40  [ http-nio-80-exec-2:673351 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64df806b]
2018-06-09 16:36:40  [ http-nio-80-exec-2:673351 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:40  [ http-nio-80-exec-2:673351 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be80f6a] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:40  [ http-nio-80-exec-2:673352 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:40  [ http-nio-80-exec-2:673352 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-09 16:36:40  [ http-nio-80-exec-2:673352 ] - [ DEBUG ]  ==> Parameters: 719285413052(String)
2018-06-09 16:36:40  [ http-nio-80-exec-2:673353 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:40  [ http-nio-80-exec-2:673353 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4be80f6a]
2018-06-09 16:36:40  [ http-nio-80-exec-2:673353 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:40  [ http-nio-80-exec-2:673354 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68c222db] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:40  [ http-nio-80-exec-2:673354 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:40  [ http-nio-80-exec-2:673354 ] - [ DEBUG ]  ==>  Preparing: update project set status = ? where projectid = ? 
2018-06-09 16:36:40  [ http-nio-80-exec-2:673354 ] - [ DEBUG ]  ==> Parameters: 2(String), 719285413052(String)
2018-06-09 16:36:40  [ http-nio-80-exec-2:673384 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:36:40  [ http-nio-80-exec-2:673385 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68c222db]
2018-06-09 16:36:41  [ http-nio-80-exec-5:674423 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:41  [ http-nio-80-exec-5:674423 ] - [ INFO ]  # user --->com.bankledger.entity.User@5b1f6e93
2018-06-09 16:36:41  [ http-nio-80-exec-5:674423 ] - [ INFO ]  # url --->/project/getListAuth
2018-06-09 16:36:41  [ http-nio-80-exec-5:674423 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:41  [ http-nio-80-exec-5:674424 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:41  [ http-nio-80-exec-5:674424 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c5c810f] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:41  [ http-nio-80-exec-5:674424 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9545454545454546
2018-06-09 16:36:41  [ http-nio-80-exec-5:674443 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:41  [ http-nio-80-exec-5:674443 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-09 16:36:41  [ http-nio-80-exec-5:674444 ] - [ DEBUG ]  ==> Parameters: 
2018-06-09 16:36:41  [ http-nio-80-exec-5:674445 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:41  [ http-nio-80-exec-5:674447 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-09 16:36:41  [ http-nio-80-exec-5:674448 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-09 16:36:41  [ http-nio-80-exec-5:674449 ] - [ DEBUG ]  <==      Total: 5
2018-06-09 16:36:41  [ http-nio-80-exec-5:674450 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c5c810f]
2018-06-09 16:36:43  [ http-nio-80-exec-3:676026 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:43  [ http-nio-80-exec-3:676028 ] - [ INFO ]  # user --->com.bankledger.entity.User@5b1f6e93
2018-06-09 16:36:43  [ http-nio-80-exec-3:676029 ] - [ INFO ]  # url --->/project/passAuth
2018-06-09 16:36:43  [ http-nio-80-exec-3:676029 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:43  [ http-nio-80-exec-3:676030 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:43  [ http-nio-80-exec-3:676030 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c634ac8] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:43  [ http-nio-80-exec-3:676031 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:43  [ http-nio-80-exec-3:676031 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:43  [ http-nio-80-exec-3:676031 ] - [ DEBUG ]  ==> Parameters: 000000(String)
2018-06-09 16:36:43  [ http-nio-80-exec-3:676032 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:43  [ http-nio-80-exec-3:676032 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c634ac8]
2018-06-09 16:36:43  [ http-nio-80-exec-3:676032 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:43  [ http-nio-80-exec-3:676033 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee44217] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:43  [ http-nio-80-exec-3:676033 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:43  [ http-nio-80-exec-3:676033 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-09 16:36:43  [ http-nio-80-exec-3:676033 ] - [ DEBUG ]  ==> Parameters: 719286129380(String)
2018-06-09 16:36:43  [ http-nio-80-exec-3:676034 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:43  [ http-nio-80-exec-3:676034 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee44217]
2018-06-09 16:36:43  [ http-nio-80-exec-3:676034 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:43  [ http-nio-80-exec-3:676035 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f715e5] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:43  [ http-nio-80-exec-3:676035 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:43  [ http-nio-80-exec-3:676035 ] - [ DEBUG ]  ==>  Preparing: update project set status = ? where projectid = ? 
2018-06-09 16:36:43  [ http-nio-80-exec-3:676035 ] - [ DEBUG ]  ==> Parameters: 2(String), 719286129380(String)
2018-06-09 16:36:43  [ http-nio-80-exec-3:676056 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:36:43  [ http-nio-80-exec-3:676057 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f715e5]
2018-06-09 16:36:44  [ http-nio-80-exec-7:676717 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:44  [ http-nio-80-exec-7:676718 ] - [ INFO ]  # user --->com.bankledger.entity.User@5b1f6e93
2018-06-09 16:36:44  [ http-nio-80-exec-7:676718 ] - [ INFO ]  # url --->/project/getListAuth
2018-06-09 16:36:44  [ http-nio-80-exec-7:676718 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:44  [ http-nio-80-exec-7:676719 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:44  [ http-nio-80-exec-7:676719 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d1e1948] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:44  [ http-nio-80-exec-7:676719 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9565217391304348
2018-06-09 16:36:44  [ http-nio-80-exec-7:676737 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:44  [ http-nio-80-exec-7:676737 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-09 16:36:44  [ http-nio-80-exec-7:676738 ] - [ DEBUG ]  ==> Parameters: 
2018-06-09 16:36:44  [ http-nio-80-exec-7:676739 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:44  [ http-nio-80-exec-7:676742 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-09 16:36:44  [ http-nio-80-exec-7:676743 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-09 16:36:44  [ http-nio-80-exec-7:676745 ] - [ DEBUG ]  <==      Total: 5
2018-06-09 16:36:44  [ http-nio-80-exec-7:676746 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d1e1948]
2018-06-09 16:36:45  [ http-nio-80-exec-6:678184 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:45  [ http-nio-80-exec-6:678185 ] - [ INFO ]  # user --->com.bankledger.entity.User@5b1f6e93
2018-06-09 16:36:45  [ http-nio-80-exec-6:678185 ] - [ INFO ]  # url --->/project/passAuth
2018-06-09 16:36:45  [ http-nio-80-exec-6:678185 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:45  [ http-nio-80-exec-6:678186 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:45  [ http-nio-80-exec-6:678186 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed00557] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:45  [ http-nio-80-exec-6:678187 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:45  [ http-nio-80-exec-6:678187 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:45  [ http-nio-80-exec-6:678187 ] - [ DEBUG ]  ==> Parameters: 000000(String)
2018-06-09 16:36:45  [ http-nio-80-exec-6:678188 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:45  [ http-nio-80-exec-6:678189 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed00557]
2018-06-09 16:36:45  [ http-nio-80-exec-6:678189 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:45  [ http-nio-80-exec-6:678189 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39c1c372] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:45  [ http-nio-80-exec-6:678189 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:45  [ http-nio-80-exec-6:678189 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-09 16:36:45  [ http-nio-80-exec-6:678190 ] - [ DEBUG ]  ==> Parameters: 719290337404(String)
2018-06-09 16:36:45  [ http-nio-80-exec-6:678191 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:45  [ http-nio-80-exec-6:678191 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39c1c372]
2018-06-09 16:36:45  [ http-nio-80-exec-6:678191 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:45  [ http-nio-80-exec-6:678191 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16360aa] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:45  [ http-nio-80-exec-6:678192 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:45  [ http-nio-80-exec-6:678192 ] - [ DEBUG ]  ==>  Preparing: update project set status = ? where projectid = ? 
2018-06-09 16:36:45  [ http-nio-80-exec-6:678192 ] - [ DEBUG ]  ==> Parameters: 2(String), 719290337404(String)
2018-06-09 16:36:45  [ http-nio-80-exec-6:678215 ] - [ DEBUG ]  <==    Updates: 1
2018-06-09 16:36:45  [ http-nio-80-exec-6:678216 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16360aa]
2018-06-09 16:36:46  [ http-nio-80-exec-9:678764 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:46  [ http-nio-80-exec-9:678765 ] - [ INFO ]  # user --->com.bankledger.entity.User@5b1f6e93
2018-06-09 16:36:46  [ http-nio-80-exec-9:678765 ] - [ INFO ]  # url --->/project/getListAuth
2018-06-09 16:36:46  [ http-nio-80-exec-9:678765 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:46  [ http-nio-80-exec-9:678766 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:46  [ http-nio-80-exec-9:678766 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cbd4972] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:46  [ http-nio-80-exec-9:678766 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9583333333333334
2018-06-09 16:36:46  [ http-nio-80-exec-9:678780 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:46  [ http-nio-80-exec-9:678780 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-09 16:36:46  [ http-nio-80-exec-9:678781 ] - [ DEBUG ]  ==> Parameters: 
2018-06-09 16:36:46  [ http-nio-80-exec-9:678782 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:46  [ http-nio-80-exec-9:678783 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-09 16:36:46  [ http-nio-80-exec-9:678784 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-09 16:36:46  [ http-nio-80-exec-9:678785 ] - [ DEBUG ]  <==      Total: 5
2018-06-09 16:36:46  [ http-nio-80-exec-9:678785 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cbd4972]
2018-06-09 16:36:49  [ http-nio-80-exec-5:681842 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:49  [ http-nio-80-exec-5:681842 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:36:49  [ http-nio-80-exec-5:681843 ] - [ INFO ]  # url --->/list
2018-06-09 16:36:49  [ http-nio-80-exec-5:681843 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:49  [ http-nio-80-exec-5:681843 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:49  [ http-nio-80-exec-5:681843 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a03949] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:49  [ http-nio-80-exec-5:681844 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:49  [ http-nio-80-exec-5:681844 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-09 16:36:49  [ http-nio-80-exec-5:681845 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:36:49  [ http-nio-80-exec-5:681847 ] - [ DEBUG ]  <==      Total: 3
2018-06-09 16:36:49  [ http-nio-80-exec-5:681848 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a03949]
2018-06-09 16:36:49  [ http-nio-80-exec-7:682091 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:36:49  [ http-nio-80-exec-7:682091 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:36:49  [ http-nio-80-exec-7:682092 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-09 16:36:49  [ http-nio-80-exec-7:682092 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:36:49  [ http-nio-80-exec-7:682092 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:49  [ http-nio-80-exec-7:682093 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@862ad90] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:49  [ http-nio-80-exec-7:682093 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:49  [ http-nio-80-exec-7:682093 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:36:49  [ http-nio-80-exec-7:682093 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:36:49  [ http-nio-80-exec-7:682094 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:49  [ http-nio-80-exec-7:682095 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@862ad90]
2018-06-09 16:36:49  [ http-nio-80-exec-7:682096 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:36:49  [ http-nio-80-exec-7:682097 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8fc85b] was not registered for synchronization because synchronization is not active
2018-06-09 16:36:49  [ http-nio-80-exec-7:682097 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.96
2018-06-09 16:36:49  [ http-nio-80-exec-7:682108 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:36:49  [ http-nio-80-exec-7:682108 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-09 16:36:49  [ http-nio-80-exec-7:682109 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-09 16:36:49  [ http-nio-80-exec-7:682110 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:36:49  [ http-nio-80-exec-7:682111 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? LIMIT ? 
2018-06-09 16:36:49  [ http-nio-80-exec-7:682112 ] - [ DEBUG ]  ==> Parameters: 2(String), 10(Integer)
2018-06-09 16:36:49  [ http-nio-80-exec-7:682115 ] - [ DEBUG ]  <==      Total: 3
2018-06-09 16:36:49  [ http-nio-80-exec-7:682115 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8fc85b]
2018-06-09 16:37:01  [ http-nio-80-exec-6:693768 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:37:01  [ http-nio-80-exec-6:693768 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:37:01  [ http-nio-80-exec-6:693768 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-09 16:37:01  [ http-nio-80-exec-6:693768 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:37:01  [ http-nio-80-exec-8:694031 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:37:01  [ http-nio-80-exec-8:694032 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:37:01  [ http-nio-80-exec-8:694032 ] - [ INFO ]  # url --->/coin/getList
2018-06-09 16:37:01  [ http-nio-80-exec-8:694032 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:37:01  [ http-nio-80-exec-8:694037 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:37:01  [ http-nio-80-exec-8:694038 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d4d6c1e] was not registered for synchronization because synchronization is not active
2018-06-09 16:37:01  [ http-nio-80-exec-8:694038 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:37:01  [ http-nio-80-exec-8:694038 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:37:01  [ http-nio-80-exec-8:694038 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:37:01  [ http-nio-80-exec-8:694039 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:37:01  [ http-nio-80-exec-8:694040 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d4d6c1e]
2018-06-09 16:37:01  [ http-nio-80-exec-8:694040 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:37:01  [ http-nio-80-exec-8:694040 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16d8e0c3] was not registered for synchronization because synchronization is not active
2018-06-09 16:37:01  [ http-nio-80-exec-8:694042 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9230769230769231
2018-06-09 16:37:01  [ http-nio-80-exec-8:694043 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:37:01  [ http-nio-80-exec-8:694044 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM coin_record WHERE 1 = 1 AND blockaddr_to = ? 
2018-06-09 16:37:01  [ http-nio-80-exec-8:694044 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:37:01  [ http-nio-80-exec-8:694047 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:37:01  [ http-nio-80-exec-8:694048 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16d8e0c3]
2018-06-09 16:37:01  [ http-nio-80-exec-10:694596 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:37:01  [ http-nio-80-exec-10:694596 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:37:01  [ http-nio-80-exec-10:694596 ] - [ INFO ]  # url --->/join/joinProjectPage
2018-06-09 16:37:01  [ http-nio-80-exec-10:694597 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:37:02  [ http-nio-80-exec-1:694771 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:37:02  [ http-nio-80-exec-1:694772 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:37:02  [ http-nio-80-exec-1:694772 ] - [ INFO ]  # url --->/join/getListProject
2018-06-09 16:37:02  [ http-nio-80-exec-1:694772 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:37:02  [ http-nio-80-exec-1:694774 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:37:02  [ http-nio-80-exec-1:694774 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d022b21] was not registered for synchronization because synchronization is not active
2018-06-09 16:37:02  [ http-nio-80-exec-1:694774 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8888888888888888
2018-06-09 16:37:02  [ http-nio-80-exec-1:694775 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:37:02  [ http-nio-80-exec-1:694775 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM user WHERE idcard = ? 
2018-06-09 16:37:02  [ http-nio-80-exec-1:694776 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:37:02  [ http-nio-80-exec-1:694777 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:37:02  [ http-nio-80-exec-1:694778 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? LIMIT ? 
2018-06-09 16:37:02  [ http-nio-80-exec-1:694780 ] - [ DEBUG ]  ==> Parameters: 222222(String), 10(Integer)
2018-06-09 16:37:02  [ http-nio-80-exec-1:694781 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:37:02  [ http-nio-80-exec-1:694782 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d022b21]
2018-06-09 16:37:02  [ http-nio-80-exec-1:694782 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:37:02  [ http-nio-80-exec-1:694783 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ffd91ef] was not registered for synchronization because synchronization is not active
2018-06-09 16:37:02  [ http-nio-80-exec-1:694783 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:37:02  [ http-nio-80-exec-1:694783 ] - [ DEBUG ]  ==>  Preparing: select p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime, p.limitcount limitCount ,p.coin,p.limitorganizeflag limitOrganizeFlag, p.discript,p.status,j.iscome isCome from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? order by j.created 
2018-06-09 16:37:02  [ http-nio-80-exec-1:694784 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-09 16:37:02  [ http-nio-80-exec-1:694784 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:37:02  [ http-nio-80-exec-1:694785 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ffd91ef]
2018-06-09 16:37:02  [ http-nio-80-exec-2:695462 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:37:02  [ http-nio-80-exec-2:695462 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:37:02  [ http-nio-80-exec-2:695462 ] - [ INFO ]  # url --->/organize
2018-06-09 16:37:02  [ http-nio-80-exec-2:695463 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:37:02  [ http-nio-80-exec-2:695463 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:37:02  [ http-nio-80-exec-2:695463 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c6ff95] was not registered for synchronization because synchronization is not active
2018-06-09 16:37:02  [ http-nio-80-exec-2:695463 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:37:02  [ http-nio-80-exec-2:695464 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-09 16:37:02  [ http-nio-80-exec-2:695465 ] - [ DEBUG ]  ==> Parameters: null
2018-06-09 16:37:02  [ http-nio-80-exec-2:695466 ] - [ DEBUG ]  <==      Total: 0
2018-06-09 16:37:02  [ http-nio-80-exec-2:695466 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c6ff95]
2018-06-09 16:37:02  [ http-nio-80-exec-5:695502 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:37:02  [ http-nio-80-exec-5:695502 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:37:02  [ http-nio-80-exec-5:695502 ] - [ INFO ]  # url --->/error
2018-06-09 16:37:02  [ http-nio-80-exec-5:695502 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:37:03  [ http-nio-80-exec-3:696316 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:37:03  [ http-nio-80-exec-3:696316 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:37:03  [ http-nio-80-exec-3:696317 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-09 16:37:03  [ http-nio-80-exec-3:696317 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:37:03  [ http-nio-80-exec-7:696559 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-09 16:37:03  [ http-nio-80-exec-7:696559 ] - [ INFO ]  # user --->com.bankledger.entity.User@3ae98773
2018-06-09 16:37:03  [ http-nio-80-exec-7:696559 ] - [ INFO ]  # url --->/coin/getList
2018-06-09 16:37:03  [ http-nio-80-exec-7:696559 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-09 16:37:03  [ http-nio-80-exec-7:696561 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:37:03  [ http-nio-80-exec-7:696561 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23e2e48b] was not registered for synchronization because synchronization is not active
2018-06-09 16:37:03  [ http-nio-80-exec-7:696562 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
2018-06-09 16:37:03  [ http-nio-80-exec-7:696563 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount,sex,appid appId,skills,descript,country,nation,major,school,censusregister,politicallandscape,birthdate,isopen from user where idcard = ? 
2018-06-09 16:37:03  [ http-nio-80-exec-7:696564 ] - [ DEBUG ]  ==> Parameters: 222222(String)
2018-06-09 16:37:03  [ http-nio-80-exec-7:696565 ] - [ DEBUG ]  <==      Total: 1
2018-06-09 16:37:03  [ http-nio-80-exec-7:696565 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23e2e48b]
2018-06-09 16:37:03  [ http-nio-80-exec-7:696566 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-09 16:37:03  [ http-nio-80-exec-7:696566 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c9ee78] was not registered for synchronization because synchronization is not active
2018-06-09 16:37:03  [ http-nio-80-exec-7:696566 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8928571428571429
2018-06-09 16:37:03  [ http-nio-80-exec-7:696567 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@719519f4] will not be managed by Spring
