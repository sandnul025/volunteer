2018-06-08 19:06:52  [ restartedMain:18069429 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 19:06:52  [ restartedMain:18069433 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 19:06:52  [ restartedMain:18069433 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 19:06:52  [ restartedMain:18069433 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 19:06:52  [ restartedMain:18069434 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 19:06:52  [ restartedMain:18069434 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 19:06:52  [ restartedMain:18069733 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 19:06:53  [ restartedMain:18069982 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 19:06:53  [ restartedMain:18069982 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 19:06:53  [ restartedMain:18069983 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 19:06:53  [ restartedMain:18069983 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 19:06:53  [ restartedMain:18069983 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 19:06:53  [ restartedMain:18069983 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 19:06:53  [ restartedMain:18069984 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 19:06:53  [ restartedMain:18069984 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 19:06:53  [ restartedMain:18069985 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 19:06:53  [ restartedMain:18069985 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 19:06:53  [ restartedMain:18069985 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 19:06:53  [ restartedMain:18069989 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 19:06:53  [ restartedMain:18069989 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 19:06:53  [ restartedMain:18069989 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 19:06:53  [ restartedMain:18069989 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 19:06:53  [ restartedMain:18069989 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 19:06:53  [ restartedMain:18070253 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 19:06:53  [ restartedMain:18070296 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 19:06:53  [ restartedMain:18070729 ] - [ INFO ]  Started App in 1.829 seconds (JVM running for 18071.576)
2018-06-08 19:07:23  [ restartedMain:18100686 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 13300 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 19:07:23  [ restartedMain:18100686 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 19:07:23  [ restartedMain:18100687 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-06-08 19:07:24  [ restartedMain:18101249 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 19:07:24  [ restartedMain:18101253 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 19:07:24  [ restartedMain:18101344 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 19:07:24  [ restartedMain:18101347 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 19:07:24  [ restartedMain:18101349 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 19:07:24  [ restartedMain:18101352 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 19:07:24  [ restartedMain:18101369 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 19:07:24  [ restartedMain:18101369 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 19:07:24  [ restartedMain:18101370 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 19:07:24  [ restartedMain:18101372 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 19:07:24  [ restartedMain:18101372 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 19:07:24  [ restartedMain:18101372 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 19:07:24  [ restartedMain:18101376 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 19:07:24  [ restartedMain:18101379 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 19:07:24  [ restartedMain:18101509 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 19:07:24  [ restartedMain:18101510 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 19:07:24  [ restartedMain:18101511 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 19:07:24  [ restartedMain:18101512 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 19:07:24  [ restartedMain:18101512 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 19:07:24  [ restartedMain:18101512 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 19:07:24  [ restartedMain:18101513 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 19:07:24  [ restartedMain:18101513 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 19:07:24  [ restartedMain:18101513 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 19:07:24  [ restartedMain:18101513 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 19:07:24  [ restartedMain:18101513 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 19:07:24  [ restartedMain:18101534 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 19:07:24  [ restartedMain:18101535 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 19:07:24  [ restartedMain:18101535 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 19:07:24  [ restartedMain:18101536 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 19:07:24  [ restartedMain:18101536 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 19:07:25  [ restartedMain:18101907 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 19:07:25  [ restartedMain:18101908 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 19:07:25  [ restartedMain:18101908 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 19:07:25  [ restartedMain:18101910 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 19:07:25  [ restartedMain:18101910 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 19:07:25  [ restartedMain:18101910 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 19:07:25  [ restartedMain:18101913 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 19:07:25  [ restartedMain:18101913 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 19:07:25  [ restartedMain:18101914 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 19:07:25  [ restartedMain:18101914 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 19:07:25  [ restartedMain:18101915 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 19:07:25  [ restartedMain:18101920 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 19:07:25  [ restartedMain:18101920 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 19:07:25  [ restartedMain:18101921 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 19:07:25  [ restartedMain:18101921 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 19:07:25  [ restartedMain:18101921 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 19:07:25  [ restartedMain:18101949 ] - [ ERROR ]  

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to auto-configure a DataSource: 'spring.datasource.url' is not specified and no embedded datasource could be auto-configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

2018-06-08 20:05:35  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-08 20:05:35  [ background-preinit:3 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-08 20:05:35  [ background-preinit:13 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:05:35  [ background-preinit:18 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:05:35  [ background-preinit:20 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:05:35  [ background-preinit:20 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:05:35  [ background-preinit:21 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:05:35  [ restartedMain:200 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 12336 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:05:35  [ restartedMain:201 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:05:35  [ restartedMain:202 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:05:35  [ background-preinit:225 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:05:35  [ background-preinit:230 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:05:35  [ background-preinit:233 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:05:35  [ background-preinit:234 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:05:35  [ background-preinit:235 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:05:35  [ background-preinit:236 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:05:36  [ restartedMain:1677 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:05:36  [ restartedMain:1684 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:05:36  [ restartedMain:1694 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:05:36  [ restartedMain:1696 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:05:36  [ restartedMain:1698 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:05:36  [ restartedMain:1699 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:05:36  [ restartedMain:1705 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:05:36  [ restartedMain:1707 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:05:36  [ restartedMain:1707 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:05:36  [ restartedMain:1707 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:05:36  [ restartedMain:1708 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:05:36  [ restartedMain:1708 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:05:36  [ restartedMain:1708 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:05:36  [ restartedMain:1708 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:05:37  [ restartedMain:2185 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:05:37  [ restartedMain:2186 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:05:37  [ restartedMain:2186 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:05:37  [ restartedMain:2188 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:05:37  [ restartedMain:2190 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:05:37  [ restartedMain:2192 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:05:37  [ restartedMain:2194 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:05:37  [ restartedMain:2194 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:05:37  [ restartedMain:2195 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:05:37  [ restartedMain:2195 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:05:37  [ restartedMain:2197 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:05:37  [ restartedMain:2202 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:05:37  [ restartedMain:2202 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:05:37  [ restartedMain:2203 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:05:37  [ restartedMain:2203 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:05:37  [ restartedMain:2204 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:05:39  [ restartedMain:4096 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-08 20:05:39  [ restartedMain:4159 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:05:39  [ restartedMain:4639 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:05:39  [ restartedMain:4639 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:05:39  [ restartedMain:4651 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:05:39  [ restartedMain:4652 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:05:39  [ restartedMain:4653 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:05:39  [ restartedMain:4653 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:05:39  [ restartedMain:4654 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:05:39  [ restartedMain:4654 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:05:39  [ restartedMain:4654 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:05:39  [ restartedMain:4655 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:05:39  [ restartedMain:4655 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:05:39  [ restartedMain:4661 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:05:39  [ restartedMain:4661 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:05:39  [ restartedMain:4661 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:05:39  [ restartedMain:4662 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:05:39  [ restartedMain:4663 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:05:41  [ restartedMain:5989 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:05:41  [ restartedMain:6151 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:05:42  [ restartedMain:7054 ] - [ INFO ]  Started App in 7.266 seconds (JVM running for 7.903)
2018-06-08 20:05:54  [ http-nio-80-exec-1:19841 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:05:54  [ http-nio-80-exec-1:19841 ] - [ INFO ]  # user --->null
2018-06-08 20:05:54  [ http-nio-80-exec-1:19841 ] - [ INFO ]  # url --->/usercenter
2018-06-08 20:05:54  [ http-nio-80-exec-1:19842 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:05:54  [ http-nio-80-exec-1:19868 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:05:54  [ http-nio-80-exec-1:19869 ] - [ INFO ]  # user --->null
2018-06-08 20:05:54  [ http-nio-80-exec-1:19869 ] - [ INFO ]  # url --->/login
2018-06-08 20:05:54  [ http-nio-80-exec-1:19869 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:05:55  [ http-nio-80-exec-1:19965 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 20:05:55  [ http-nio-80-exec-1:20235 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@52ba1a8b
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7ba28da3
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@60ad73a2
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-08 20:05:55  [ http-nio-80-exec-1:20246 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-08 20:06:07  [ http-nio-80-exec-3:32471 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:06:07  [ http-nio-80-exec-3:32474 ] - [ INFO ]  # user --->null
2018-06-08 20:06:07  [ http-nio-80-exec-3:32474 ] - [ INFO ]  # url --->/register
2018-06-08 20:06:07  [ http-nio-80-exec-3:32474 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:06:39  [ http-nio-80-exec-6:64361 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:06:39  [ http-nio-80-exec-6:64362 ] - [ INFO ]  # user --->null
2018-06-08 20:06:39  [ http-nio-80-exec-6:64362 ] - [ INFO ]  # url --->/register
2018-06-08 20:06:39  [ http-nio-80-exec-6:64362 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:06:39  [ http-nio-80-exec-6:64417 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:06:39  [ http-nio-80-exec-6:64430 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84b4b39] was not registered for synchronization because synchronization is not active
2018-06-08 20:06:39  [ http-nio-80-exec-6:64555 ] - [ INFO ]  {dataSource-1} inited
2018-06-08 20:06:39  [ http-nio-80-exec-6:64826 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3aadb2f9] will not be managed by Spring
2018-06-08 20:06:39  [ http-nio-80-exec-6:64830 ] - [ DEBUG ]  ==>  Preparing: select count(0) from user where idcard = ? 
2018-06-08 20:06:39  [ http-nio-80-exec-6:64857 ] - [ DEBUG ]  ==> Parameters: 421125199411227334(String)
2018-06-08 20:06:39  [ http-nio-80-exec-6:64873 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:06:39  [ http-nio-80-exec-6:64875 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84b4b39]
2018-06-08 20:06:39  [ http-nio-80-exec-6:64875 ] - [ INFO ]   ########## 调用底层Elt接口 - registerapp - 开始 ##########
2018-06-08 20:06:39  [ http-nio-80-exec-6:64877 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-08 20:06:39  [ http-nio-80-exec-6:64877 ] - [ INFO ]   # method :registerapp
2018-06-08 20:06:39  [ http-nio-80-exec-6:64883 ] - [ INFO ]   # Params :["421125199411227334","421125199411227334",2,"421125199411227334"]
2018-06-08 20:06:39  [ http-nio-80-exec-6:64885 ] - [ INFO ]   # Body   :{"method":"registerapp","params":["421125199411227334","421125199411227334",2,"421125199411227334"]}
2018-06-08 20:06:39  [ http-nio-80-exec-6:64954 ] - [ INFO ]   # Response :{"result":{"adminSafeAddress":"Xcwyu6QDXFQC9Y5ghfkjUHrVBHVe8M1FKB","appId":"dcdb98e0285e2404fa95f0693065b1132aae308bfaa6d23adf183d740f387e79","txId":"2db7109a84292419e699f9ce2cff3652a59f8b3fd1281e24f2701d38afd831c2"},"error":null,"id":null}
2018-06-08 20:06:39  [ http-nio-80-exec-6:64955 ] - [ INFO ]   ########## 调用底层Elt接口 - registerapp - 结束 ##########
2018-06-08 20:06:40  [ http-nio-80-exec-6:64964 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:06:40  [ http-nio-80-exec-6:64964 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66097c73] was not registered for synchronization because synchronization is not active
2018-06-08 20:06:40  [ http-nio-80-exec-6:64964 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3aadb2f9] will not be managed by Spring
2018-06-08 20:06:40  [ http-nio-80-exec-6:64965 ] - [ DEBUG ]  ==>  Preparing: insert into user(blockaddr, idcard,nickname , password, type,coincount) values(?, ?,?, ?, ?,?) 
2018-06-08 20:06:40  [ http-nio-80-exec-6:64967 ] - [ DEBUG ]  ==> Parameters: Xcwyu6QDXFQC9Y5ghfkjUHrVBHVe8M1FKB(String), 421125199411227334(String), null, t123456(String), 1(String), 0(BigDecimal)
2018-06-08 20:06:40  [ http-nio-80-exec-6:65011 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66097c73]
2018-06-08 20:06:40  [ http-nio-80-exec-6:65117 ] - [ ERROR ]  ################# Exception ##################
2018-06-08 20:06:40  [ http-nio-80-exec-6:65118 ] - [ ERROR ]  ### RequestUrI: /register 
2018-06-08 20:06:40  [ http-nio-80-exec-6:65118 ] - [ ERROR ]  ### RequestParam: {password=t123456, idCard=421125199411227334} 
2018-06-08 20:06:40  [ http-nio-80-exec-6:65120 ] - [ ERROR ]  ### exception: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
### The error may involve com.bankledger.mapper.UserMapper.register-Inline
### The error occurred while setting parameters
### SQL: insert into user(blockaddr, idcard,nickname , password, type,coincount) values(?, ?,?, ?, ?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
; ]; Column 'nickname' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
### The error may involve com.bankledger.mapper.UserMapper.register-Inline
### The error occurred while setting parameters
### SQL: insert into user(blockaddr, idcard,nickname , password, type,coincount) values(?, ?,?, ?, ?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
; ]; Column 'nickname' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy92.register(Unknown Source)
	at com.bankledger.controller.back.UserController.register(UserController.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy106.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-08 20:08:20  [ http-nio-80-exec-10:165945 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:08:20  [ http-nio-80-exec-10:165946 ] - [ INFO ]  # user --->null
2018-06-08 20:08:20  [ http-nio-80-exec-10:165946 ] - [ INFO ]  # url --->/register
2018-06-08 20:08:20  [ http-nio-80-exec-10:165946 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:08:47  [ http-nio-80-exec-8:192794 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:08:47  [ http-nio-80-exec-8:192795 ] - [ INFO ]  # user --->null
2018-06-08 20:08:47  [ http-nio-80-exec-8:192795 ] - [ INFO ]  # url --->/register
2018-06-08 20:08:47  [ http-nio-80-exec-8:192796 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:08:47  [ http-nio-80-exec-8:192797 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:08:47  [ http-nio-80-exec-8:192797 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bee05dc] was not registered for synchronization because synchronization is not active
2018-06-08 20:08:47  [ http-nio-80-exec-8:192805 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3aadb2f9] will not be managed by Spring
2018-06-08 20:08:47  [ http-nio-80-exec-8:192806 ] - [ DEBUG ]  ==>  Preparing: select count(0) from user where idcard = ? 
2018-06-08 20:08:47  [ http-nio-80-exec-8:192807 ] - [ DEBUG ]  ==> Parameters: t111111(String)
2018-06-08 20:08:47  [ http-nio-80-exec-8:192809 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:08:47  [ http-nio-80-exec-8:192810 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bee05dc]
2018-06-08 20:08:47  [ http-nio-80-exec-8:192811 ] - [ INFO ]   ########## 调用底层Elt接口 - registerapp - 开始 ##########
2018-06-08 20:08:47  [ http-nio-80-exec-8:192812 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-08 20:08:47  [ http-nio-80-exec-8:192813 ] - [ INFO ]   # method :registerapp
2018-06-08 20:08:47  [ http-nio-80-exec-8:192813 ] - [ INFO ]   # Params :["t111111","t111111",2,"t111111"]
2018-06-08 20:08:47  [ http-nio-80-exec-8:192813 ] - [ INFO ]   # Body   :{"method":"registerapp","params":["t111111","t111111",2,"t111111"]}
2018-06-08 20:08:47  [ http-nio-80-exec-8:192878 ] - [ INFO ]   # Response :{"result":{"adminSafeAddress":"XnmxZJZSEciKduy18bYsAAMqM1JJXKVDQ1","appId":"5d9b5fec79c22a959c0485643c967f78be7735ef881e204d659223599e31442e","txId":"4dde59552af7bf9a8f6a0738e197a3e633c9535ee7a665b13f4c9660ce40774b"},"error":null,"id":null}
2018-06-08 20:08:47  [ http-nio-80-exec-8:192878 ] - [ INFO ]   ########## 调用底层Elt接口 - registerapp - 结束 ##########
2018-06-08 20:08:47  [ http-nio-80-exec-8:192879 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:08:47  [ http-nio-80-exec-8:192879 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d71d1ff] was not registered for synchronization because synchronization is not active
2018-06-08 20:08:47  [ http-nio-80-exec-8:192879 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3aadb2f9] will not be managed by Spring
2018-06-08 20:08:47  [ http-nio-80-exec-8:192879 ] - [ DEBUG ]  ==>  Preparing: insert into user(blockaddr, idcard,nickname , password, type,coincount) values(?, ?,?, ?, ?,?) 
2018-06-08 20:08:47  [ http-nio-80-exec-8:192880 ] - [ DEBUG ]  ==> Parameters: XnmxZJZSEciKduy18bYsAAMqM1JJXKVDQ1(String), t111111(String), null, t123456(String), 1(String), 0(BigDecimal)
2018-06-08 20:08:47  [ http-nio-80-exec-8:192884 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d71d1ff]
2018-06-08 20:08:47  [ http-nio-80-exec-8:192886 ] - [ ERROR ]  ################# Exception ##################
2018-06-08 20:08:47  [ http-nio-80-exec-8:192887 ] - [ ERROR ]  ### RequestUrI: /register 
2018-06-08 20:08:47  [ http-nio-80-exec-8:192887 ] - [ ERROR ]  ### RequestParam: {password=t123456, idCard=t111111} 
2018-06-08 20:08:47  [ http-nio-80-exec-8:192887 ] - [ ERROR ]  ### exception: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
### The error may involve com.bankledger.mapper.UserMapper.register-Inline
### The error occurred while setting parameters
### SQL: insert into user(blockaddr, idcard,nickname , password, type,coincount) values(?, ?,?, ?, ?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
; ]; Column 'nickname' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
### The error may involve com.bankledger.mapper.UserMapper.register-Inline
### The error occurred while setting parameters
### SQL: insert into user(blockaddr, idcard,nickname , password, type,coincount) values(?, ?,?, ?, ?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
; ]; Column 'nickname' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy92.register(Unknown Source)
	at com.bankledger.controller.back.UserController.register(UserController.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'nickname' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy106.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-08 20:09:44  [ Thread-6:249553 ] - [ INFO ]  {dataSource-1} closed
2018-06-08 20:09:44  [ restartedMain:249961 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 12336 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:09:45  [ restartedMain:249963 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:09:45  [ restartedMain:249964 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:09:45  [ restartedMain:250584 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:09:45  [ restartedMain:250587 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:09:45  [ restartedMain:250593 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:09:45  [ restartedMain:250593 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:09:45  [ restartedMain:250594 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:09:45  [ restartedMain:250594 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:09:45  [ restartedMain:250596 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:09:45  [ restartedMain:250596 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:09:45  [ restartedMain:250597 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:09:45  [ restartedMain:250597 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:09:45  [ restartedMain:250597 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:09:45  [ restartedMain:250597 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:09:45  [ restartedMain:250597 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:09:45  [ restartedMain:250597 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:09:45  [ restartedMain:250740 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:09:45  [ restartedMain:250743 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:09:45  [ restartedMain:250743 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:09:45  [ restartedMain:250743 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:09:45  [ restartedMain:250744 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:09:45  [ restartedMain:250744 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:09:45  [ restartedMain:250745 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:09:45  [ restartedMain:250745 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:09:45  [ restartedMain:250746 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:09:45  [ restartedMain:250747 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:09:45  [ restartedMain:250749 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:09:45  [ restartedMain:250756 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:09:45  [ restartedMain:250757 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:09:45  [ restartedMain:250758 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:09:45  [ restartedMain:250761 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:09:45  [ restartedMain:250762 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:09:46  [ restartedMain:251203 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:09:46  [ restartedMain:251421 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:09:46  [ restartedMain:251422 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:09:46  [ restartedMain:251423 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:09:46  [ restartedMain:251423 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:09:46  [ restartedMain:251423 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:09:46  [ restartedMain:251424 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:09:46  [ restartedMain:251425 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:09:46  [ restartedMain:251425 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:09:46  [ restartedMain:251425 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:09:46  [ restartedMain:251426 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:09:46  [ restartedMain:251427 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:09:46  [ restartedMain:251433 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:09:46  [ restartedMain:251434 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:09:46  [ restartedMain:251434 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:09:46  [ restartedMain:251434 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:09:46  [ restartedMain:251435 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:09:46  [ restartedMain:251837 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:09:46  [ restartedMain:251893 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:09:47  [ restartedMain:252796 ] - [ INFO ]  Started App in 2.92 seconds (JVM running for 253.645)
2018-06-08 20:09:59  [ restartedMain:264649 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 12336 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:09:59  [ restartedMain:264650 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:09:59  [ restartedMain:264650 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:10:00  [ restartedMain:265234 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:10:00  [ restartedMain:265236 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:10:00  [ restartedMain:265254 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:10:00  [ restartedMain:265255 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:10:00  [ restartedMain:265255 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:10:00  [ restartedMain:265256 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:10:00  [ restartedMain:265257 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:10:00  [ restartedMain:265258 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:10:00  [ restartedMain:265258 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:10:00  [ restartedMain:265258 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:10:00  [ restartedMain:265258 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:10:00  [ restartedMain:265258 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:10:00  [ restartedMain:265259 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:10:00  [ restartedMain:265259 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:10:00  [ restartedMain:265372 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:00  [ restartedMain:265373 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:10:00  [ restartedMain:265373 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:00  [ restartedMain:265373 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:10:00  [ restartedMain:265374 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:10:00  [ restartedMain:265374 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:10:00  [ restartedMain:265374 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:10:00  [ restartedMain:265374 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:10:00  [ restartedMain:265375 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:10:00  [ restartedMain:265375 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:10:00  [ restartedMain:265375 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:10:00  [ restartedMain:265382 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:10:00  [ restartedMain:265383 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:10:00  [ restartedMain:265384 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:10:00  [ restartedMain:265384 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:10:00  [ restartedMain:265384 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:10:00  [ restartedMain:265760 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:10:00  [ restartedMain:265921 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:00  [ restartedMain:265922 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:10:00  [ restartedMain:265923 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:00  [ restartedMain:265923 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:10:00  [ restartedMain:265924 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:10:00  [ restartedMain:265924 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:10:00  [ restartedMain:265924 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:10:00  [ restartedMain:265924 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:10:00  [ restartedMain:265925 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:10:00  [ restartedMain:265925 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:10:00  [ restartedMain:265925 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:10:00  [ restartedMain:265931 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:10:00  [ restartedMain:265931 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:10:00  [ restartedMain:265931 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:10:00  [ restartedMain:265932 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:10:00  [ restartedMain:265932 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:10:01  [ restartedMain:266242 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:10:01  [ restartedMain:266286 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:10:01  [ restartedMain:266785 ] - [ INFO ]  Started App in 2.18 seconds (JVM running for 267.633)
2018-06-08 20:10:08  [ restartedMain:273097 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 12336 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:10:08  [ restartedMain:273098 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:10:08  [ restartedMain:273098 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:10:08  [ restartedMain:273640 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:10:08  [ restartedMain:273641 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:10:08  [ restartedMain:273650 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:10:08  [ restartedMain:273650 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:10:08  [ restartedMain:273651 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:10:08  [ restartedMain:273651 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:10:08  [ restartedMain:273653 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:10:08  [ restartedMain:273653 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:10:08  [ restartedMain:273653 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:10:08  [ restartedMain:273653 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:10:08  [ restartedMain:273653 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:10:08  [ restartedMain:273654 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:10:08  [ restartedMain:273654 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:10:08  [ restartedMain:273654 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:10:08  [ restartedMain:273757 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:08  [ restartedMain:273757 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:10:08  [ restartedMain:273760 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:08  [ restartedMain:273760 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:10:08  [ restartedMain:273761 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:10:08  [ restartedMain:273761 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:10:08  [ restartedMain:273761 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:10:08  [ restartedMain:273761 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:10:08  [ restartedMain:273762 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:10:08  [ restartedMain:273762 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:10:08  [ restartedMain:273763 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:10:08  [ restartedMain:273769 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:10:08  [ restartedMain:273770 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:10:08  [ restartedMain:273770 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:10:08  [ restartedMain:273770 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:10:08  [ restartedMain:273770 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:10:09  [ restartedMain:274182 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:10:09  [ restartedMain:274406 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:09  [ restartedMain:274407 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:10:09  [ restartedMain:274408 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:09  [ restartedMain:274408 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:10:09  [ restartedMain:274408 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:10:09  [ restartedMain:274408 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:10:09  [ restartedMain:274409 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:10:09  [ restartedMain:274409 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:10:09  [ restartedMain:274410 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:10:09  [ restartedMain:274410 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:10:09  [ restartedMain:274410 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:10:09  [ restartedMain:274430 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:10:09  [ restartedMain:274430 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:10:09  [ restartedMain:274430 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:10:09  [ restartedMain:274430 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:10:09  [ restartedMain:274430 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:10:09  [ restartedMain:274796 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:10:09  [ restartedMain:274843 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:10:10  [ restartedMain:275284 ] - [ INFO ]  Started App in 2.231 seconds (JVM running for 276.132)
2018-06-08 20:10:39  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-08 20:10:39  [ background-preinit:5 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-08 20:10:39  [ background-preinit:15 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:39  [ background-preinit:22 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:10:39  [ background-preinit:24 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:10:39  [ background-preinit:24 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:10:39  [ background-preinit:25 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:10:40  [ restartedMain:263 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 14944 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:10:40  [ restartedMain:264 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:10:40  [ restartedMain:264 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:10:40  [ background-preinit:277 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:10:40  [ background-preinit:280 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:10:40  [ background-preinit:282 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:10:40  [ background-preinit:283 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:10:40  [ background-preinit:284 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:10:40  [ background-preinit:285 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:10:41  [ restartedMain:1753 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:10:41  [ restartedMain:1759 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:10:41  [ restartedMain:1772 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:10:41  [ restartedMain:1774 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:10:41  [ restartedMain:1775 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:10:41  [ restartedMain:1778 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:10:41  [ restartedMain:1786 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:10:41  [ restartedMain:1787 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:10:41  [ restartedMain:1787 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:10:41  [ restartedMain:1788 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:10:41  [ restartedMain:1789 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:10:41  [ restartedMain:1791 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:10:41  [ restartedMain:1791 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:10:41  [ restartedMain:1792 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:10:42  [ restartedMain:2274 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:42  [ restartedMain:2276 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:10:42  [ restartedMain:2277 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:42  [ restartedMain:2279 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:10:42  [ restartedMain:2280 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:10:42  [ restartedMain:2281 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:10:42  [ restartedMain:2282 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:10:42  [ restartedMain:2282 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:10:42  [ restartedMain:2283 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:10:42  [ restartedMain:2283 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:10:42  [ restartedMain:2284 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:10:42  [ restartedMain:2289 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:10:42  [ restartedMain:2289 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:10:42  [ restartedMain:2290 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:10:42  [ restartedMain:2291 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:10:42  [ restartedMain:2291 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:10:44  [ restartedMain:4433 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-08 20:10:44  [ restartedMain:4520 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:10:44  [ restartedMain:5130 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:44  [ restartedMain:5131 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:10:44  [ restartedMain:5143 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:44  [ restartedMain:5143 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:10:44  [ restartedMain:5143 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:10:44  [ restartedMain:5144 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:10:44  [ restartedMain:5144 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:10:44  [ restartedMain:5144 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:10:44  [ restartedMain:5145 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:10:44  [ restartedMain:5145 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:10:44  [ restartedMain:5146 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:10:44  [ restartedMain:5152 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:10:44  [ restartedMain:5153 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:10:44  [ restartedMain:5153 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:10:44  [ restartedMain:5154 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:10:44  [ restartedMain:5154 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:10:45  [ restartedMain:6193 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:10:46  [ restartedMain:6393 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:10:47  [ restartedMain:7555 ] - [ INFO ]  Started App in 7.737 seconds (JVM running for 8.33)
2018-06-08 20:10:49  [ restartedMain:9297 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 14944 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:10:49  [ restartedMain:9298 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:10:49  [ restartedMain:9298 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:10:49  [ restartedMain:9949 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:10:49  [ restartedMain:9952 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:10:49  [ restartedMain:9960 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:10:49  [ restartedMain:9960 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:10:49  [ restartedMain:9961 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:10:49  [ restartedMain:9961 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:10:49  [ restartedMain:9964 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:10:49  [ restartedMain:9964 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:10:49  [ restartedMain:9967 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:10:49  [ restartedMain:9967 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:10:49  [ restartedMain:9968 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:10:49  [ restartedMain:9969 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:10:49  [ restartedMain:9969 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:10:49  [ restartedMain:9969 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:10:49  [ restartedMain:10099 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:49  [ restartedMain:10101 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:10:49  [ restartedMain:10105 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:49  [ restartedMain:10106 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:10:49  [ restartedMain:10106 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:10:49  [ restartedMain:10107 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:10:49  [ restartedMain:10109 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:10:49  [ restartedMain:10109 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:10:49  [ restartedMain:10110 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:10:49  [ restartedMain:10110 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:10:49  [ restartedMain:10111 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:10:49  [ restartedMain:10116 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:10:49  [ restartedMain:10116 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:10:49  [ restartedMain:10119 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:10:49  [ restartedMain:10121 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:10:49  [ restartedMain:10122 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:10:50  [ restartedMain:10681 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:10:50  [ restartedMain:10897 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:50  [ restartedMain:10897 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:10:50  [ restartedMain:10898 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:10:50  [ restartedMain:10899 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:10:50  [ restartedMain:10899 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:10:50  [ restartedMain:10899 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:10:50  [ restartedMain:10901 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:10:50  [ restartedMain:10903 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:10:50  [ restartedMain:10903 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:10:50  [ restartedMain:10904 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:10:50  [ restartedMain:10905 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:10:50  [ restartedMain:10912 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:10:50  [ restartedMain:10913 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:10:50  [ restartedMain:10914 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:10:50  [ restartedMain:10914 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:10:50  [ restartedMain:10914 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:10:51  [ restartedMain:11383 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:10:51  [ restartedMain:11450 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:10:51  [ restartedMain:12092 ] - [ INFO ]  Started App in 2.892 seconds (JVM running for 12.867)
2018-06-08 20:10:57  [ http-nio-80-exec-10:17794 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:10:57  [ http-nio-80-exec-10:17794 ] - [ INFO ]  # user --->null
2018-06-08 20:10:57  [ http-nio-80-exec-10:17794 ] - [ INFO ]  # url --->/register
2018-06-08 20:10:57  [ http-nio-80-exec-10:17794 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:10:57  [ http-nio-80-exec-10:17864 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 20:10:57  [ http-nio-80-exec-10:18076 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@232bfd06
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7028c1f5
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1e27f9a7
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-08 20:10:57  [ http-nio-80-exec-10:18090 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-08 20:11:10  [ http-nio-80-exec-9:30796 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:11:10  [ http-nio-80-exec-9:30797 ] - [ INFO ]  # user --->null
2018-06-08 20:11:10  [ http-nio-80-exec-9:30797 ] - [ INFO ]  # url --->/register
2018-06-08 20:11:10  [ http-nio-80-exec-9:30797 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:11:10  [ http-nio-80-exec-9:30841 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:11:10  [ http-nio-80-exec-9:30859 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4db83902] was not registered for synchronization because synchronization is not active
2018-06-08 20:11:10  [ http-nio-80-exec-9:30927 ] - [ INFO ]  {dataSource-1} inited
2018-06-08 20:11:10  [ http-nio-80-exec-9:31183 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@653352f8] will not be managed by Spring
2018-06-08 20:11:10  [ http-nio-80-exec-9:31188 ] - [ DEBUG ]  ==>  Preparing: select count(0) from user where idcard = ? 
2018-06-08 20:11:10  [ http-nio-80-exec-9:31208 ] - [ DEBUG ]  ==> Parameters: t222222(String)
2018-06-08 20:11:11  [ http-nio-80-exec-9:31221 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:11:11  [ http-nio-80-exec-9:31222 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4db83902]
2018-06-08 20:11:11  [ http-nio-80-exec-9:31223 ] - [ INFO ]   ########## 调用底层Elt接口 - registerapp - 开始 ##########
2018-06-08 20:11:11  [ http-nio-80-exec-9:31224 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-08 20:11:11  [ http-nio-80-exec-9:31224 ] - [ INFO ]   # method :registerapp
2018-06-08 20:11:11  [ http-nio-80-exec-9:31229 ] - [ INFO ]   # Params :["t222222","t222222",2,"t222222"]
2018-06-08 20:11:11  [ http-nio-80-exec-9:31230 ] - [ INFO ]   # Body   :{"method":"registerapp","params":["t222222","t222222",2,"t222222"]}
2018-06-08 20:11:11  [ http-nio-80-exec-9:31308 ] - [ INFO ]   # Response :{"result":{"adminSafeAddress":"Xmbi4RGqKnk69WdGF94SySWLtezPi8gA1m","appId":"63142ad8404f1f323f45872be5e0cbd686a8846b8b05a87f55bb661c78f9db8b","txId":"fca2049eb7d59e404ae4ca344836f45f0853426b031f1dfff1bfbbdf867c1656"},"error":null,"id":null}
2018-06-08 20:11:11  [ http-nio-80-exec-9:31309 ] - [ INFO ]   ########## 调用底层Elt接口 - registerapp - 结束 ##########
2018-06-08 20:11:11  [ http-nio-80-exec-9:31317 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:11:11  [ http-nio-80-exec-9:31318 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55ae5d87] was not registered for synchronization because synchronization is not active
2018-06-08 20:11:11  [ http-nio-80-exec-9:31318 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@653352f8] will not be managed by Spring
2018-06-08 20:11:11  [ http-nio-80-exec-9:31318 ] - [ DEBUG ]  ==>  Preparing: insert into user(blockaddr, idcard,nickname , password, type,coincount,appid,txid) values(?, ?,?, ?, ?,?,?,?) 
2018-06-08 20:11:11  [ http-nio-80-exec-9:31321 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55ae5d87]
2018-06-08 20:11:11  [ http-nio-80-exec-9:31324 ] - [ ERROR ]  ################# Exception ##################
2018-06-08 20:11:11  [ http-nio-80-exec-9:31324 ] - [ ERROR ]  ### RequestUrI: /register 
2018-06-08 20:11:11  [ http-nio-80-exec-9:31325 ] - [ ERROR ]  ### RequestParam: {password=t123456, idCard=t222222, nickName=tuyi} 
2018-06-08 20:11:11  [ http-nio-80-exec-9:31326 ] - [ ERROR ]  ### exception: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'appId' in 'class com.bankledger.entity.User'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'appId' in 'class com.bankledger.entity.User'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.register(Unknown Source)
	at com.bankledger.controller.back.UserController.register(UserController.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'appId' in 'class com.bankledger.entity.User'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:419)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy111.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-08 20:11:36  [ background-preinit:1 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-08 20:11:36  [ background-preinit:4 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-08 20:11:36  [ background-preinit:14 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:11:36  [ background-preinit:19 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:11:36  [ background-preinit:20 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:11:36  [ background-preinit:21 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:11:36  [ background-preinit:21 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:11:36  [ restartedMain:266 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 108 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:11:36  [ restartedMain:267 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:11:36  [ restartedMain:267 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:11:36  [ background-preinit:271 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:11:36  [ background-preinit:283 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:11:36  [ background-preinit:286 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:11:36  [ background-preinit:287 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:11:36  [ background-preinit:287 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:11:36  [ background-preinit:287 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:11:38  [ restartedMain:1966 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:11:38  [ restartedMain:1970 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:11:38  [ restartedMain:1980 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:11:38  [ restartedMain:1982 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:11:38  [ restartedMain:1983 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:11:38  [ restartedMain:1984 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:11:38  [ restartedMain:1991 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:11:38  [ restartedMain:1992 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:11:38  [ restartedMain:1992 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:11:38  [ restartedMain:1992 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:11:38  [ restartedMain:1992 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:11:38  [ restartedMain:1992 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:11:38  [ restartedMain:1993 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:11:38  [ restartedMain:1993 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:11:38  [ restartedMain:2453 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:11:38  [ restartedMain:2454 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:11:38  [ restartedMain:2455 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:11:38  [ restartedMain:2458 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:11:38  [ restartedMain:2460 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:11:38  [ restartedMain:2461 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:11:38  [ restartedMain:2463 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:11:38  [ restartedMain:2463 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:11:38  [ restartedMain:2464 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:11:38  [ restartedMain:2465 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:11:38  [ restartedMain:2465 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:11:38  [ restartedMain:2474 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:11:38  [ restartedMain:2475 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:11:38  [ restartedMain:2476 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:11:38  [ restartedMain:2476 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:11:38  [ restartedMain:2476 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:11:40  [ restartedMain:4394 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-08 20:11:40  [ restartedMain:4458 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:11:41  [ restartedMain:4965 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:11:41  [ restartedMain:4965 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:11:41  [ restartedMain:4979 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:11:41  [ restartedMain:4979 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:11:41  [ restartedMain:4980 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:11:41  [ restartedMain:4980 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:11:41  [ restartedMain:4980 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:11:41  [ restartedMain:4981 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:11:41  [ restartedMain:4981 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:11:41  [ restartedMain:4982 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:11:41  [ restartedMain:4982 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:11:41  [ restartedMain:4988 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:11:41  [ restartedMain:4988 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:11:41  [ restartedMain:4988 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:11:41  [ restartedMain:4989 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:11:41  [ restartedMain:4989 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:11:42  [ restartedMain:6086 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:11:42  [ restartedMain:6285 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:11:43  [ restartedMain:7210 ] - [ INFO ]  Started App in 7.385 seconds (JVM running for 8.03)
2018-06-08 20:11:47  [ restartedMain:11207 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 108 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:11:47  [ restartedMain:11208 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:11:47  [ restartedMain:11208 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:11:47  [ restartedMain:11804 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:11:47  [ restartedMain:11805 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:11:47  [ restartedMain:11813 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:11:47  [ restartedMain:11813 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:11:47  [ restartedMain:11813 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:11:47  [ restartedMain:11814 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:11:47  [ restartedMain:11818 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:11:47  [ restartedMain:11819 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:11:47  [ restartedMain:11820 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:11:47  [ restartedMain:11821 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:11:47  [ restartedMain:11822 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:11:47  [ restartedMain:11824 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:11:47  [ restartedMain:11825 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:11:47  [ restartedMain:11826 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:11:47  [ restartedMain:11926 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:11:47  [ restartedMain:11928 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:11:47  [ restartedMain:11930 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:11:47  [ restartedMain:11931 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:11:47  [ restartedMain:11931 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:11:47  [ restartedMain:11933 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:11:47  [ restartedMain:11934 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:11:47  [ restartedMain:11935 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:11:47  [ restartedMain:11936 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:11:47  [ restartedMain:11937 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:11:47  [ restartedMain:11937 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:11:47  [ restartedMain:11943 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:11:47  [ restartedMain:11943 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:11:47  [ restartedMain:11944 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:11:47  [ restartedMain:11946 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:11:47  [ restartedMain:11947 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:11:48  [ restartedMain:12437 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:11:48  [ restartedMain:12633 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:11:48  [ restartedMain:12634 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:11:48  [ restartedMain:12635 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:11:48  [ restartedMain:12635 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:11:48  [ restartedMain:12635 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:11:48  [ restartedMain:12635 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:11:48  [ restartedMain:12637 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:11:48  [ restartedMain:12638 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:11:48  [ restartedMain:12639 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:11:48  [ restartedMain:12639 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:11:48  [ restartedMain:12640 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:11:48  [ restartedMain:12647 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:11:48  [ restartedMain:12648 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:11:48  [ restartedMain:12648 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:11:48  [ restartedMain:12648 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:11:48  [ restartedMain:12649 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:11:49  [ restartedMain:13187 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:11:49  [ restartedMain:13242 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:11:49  [ restartedMain:13823 ] - [ INFO ]  Started App in 2.673 seconds (JVM running for 14.643)
2018-06-08 20:11:59  [ http-nio-80-exec-10:23176 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:11:59  [ http-nio-80-exec-10:23177 ] - [ INFO ]  # user --->null
2018-06-08 20:11:59  [ http-nio-80-exec-10:23180 ] - [ INFO ]  # url --->/register
2018-06-08 20:11:59  [ http-nio-80-exec-10:23182 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:11:59  [ http-nio-80-exec-10:23264 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:11:59  [ http-nio-80-exec-10:23281 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79d9c34e] was not registered for synchronization because synchronization is not active
2018-06-08 20:11:59  [ http-nio-80-exec-10:23347 ] - [ INFO ]  {dataSource-1} inited
2018-06-08 20:11:59  [ http-nio-80-exec-10:23551 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@41e0476c] will not be managed by Spring
2018-06-08 20:11:59  [ http-nio-80-exec-10:23556 ] - [ DEBUG ]  ==>  Preparing: select count(0) from user where idcard = ? 
2018-06-08 20:11:59  [ http-nio-80-exec-10:23579 ] - [ DEBUG ]  ==> Parameters: t333333(String)
2018-06-08 20:11:59  [ http-nio-80-exec-10:23591 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:11:59  [ http-nio-80-exec-10:23592 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79d9c34e]
2018-06-08 20:11:59  [ http-nio-80-exec-10:23593 ] - [ INFO ]   ########## 调用底层Elt接口 - registerapp - 开始 ##########
2018-06-08 20:11:59  [ http-nio-80-exec-10:23595 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-08 20:11:59  [ http-nio-80-exec-10:23595 ] - [ INFO ]   # method :registerapp
2018-06-08 20:11:59  [ http-nio-80-exec-10:23601 ] - [ INFO ]   # Params :["t333333","t333333",2,"t333333"]
2018-06-08 20:11:59  [ http-nio-80-exec-10:23602 ] - [ INFO ]   # Body   :{"method":"registerapp","params":["t333333","t333333",2,"t333333"]}
2018-06-08 20:11:59  [ http-nio-80-exec-10:23701 ] - [ INFO ]   # Response :{"result":{"adminSafeAddress":"XufJFCf4k83dBJb8hKLC6XAEadrDCSC384","appId":"4e9a0f08633fb2660856a984fcbe94337e9385a99bceacaf9e2b1bb826642825","txId":"06efb75a5a7e326281b6c2b991c653c59cb8a91bf5db2a002300973110a98938"},"error":null,"id":null}
2018-06-08 20:11:59  [ http-nio-80-exec-10:23701 ] - [ INFO ]   ########## 调用底层Elt接口 - registerapp - 结束 ##########
2018-06-08 20:11:59  [ http-nio-80-exec-10:23709 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:11:59  [ http-nio-80-exec-10:23710 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@afd884d] was not registered for synchronization because synchronization is not active
2018-06-08 20:11:59  [ http-nio-80-exec-10:23710 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@41e0476c] will not be managed by Spring
2018-06-08 20:11:59  [ http-nio-80-exec-10:23710 ] - [ DEBUG ]  ==>  Preparing: insert into user(blockaddr, idcard,nickname , password, type,coincount,appid,txid) values(?, ?,?, ?, ?,?,?,?) 
2018-06-08 20:11:59  [ http-nio-80-exec-10:23711 ] - [ DEBUG ]  ==> Parameters: XufJFCf4k83dBJb8hKLC6XAEadrDCSC384(String), t333333(String), tuyi(String), t123456(String), 1(String), 0(BigDecimal), 4e9a0f08633fb2660856a984fcbe94337e9385a99bceacaf9e2b1bb826642825(String), 06efb75a5a7e326281b6c2b991c653c59cb8a91bf5db2a002300973110a98938(String)
2018-06-08 20:11:59  [ http-nio-80-exec-10:23724 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@afd884d]
2018-06-08 20:11:59  [ http-nio-80-exec-10:23789 ] - [ ERROR ]  ################# Exception ##################
2018-06-08 20:11:59  [ http-nio-80-exec-10:23790 ] - [ ERROR ]  ### RequestUrI: /register 
2018-06-08 20:11:59  [ http-nio-80-exec-10:23790 ] - [ ERROR ]  ### RequestParam: {password=t123456, idCard=t333333, nickName=tuyi} 
2018-06-08 20:11:59  [ http-nio-80-exec-10:23792 ] - [ ERROR ]  ### exception: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'txid' in 'field list'
### The error may involve com.bankledger.mapper.UserMapper.register-Inline
### The error occurred while setting parameters
### SQL: insert into user(blockaddr, idcard,nickname , password, type,coincount,appid,txid) values(?, ?,?, ?, ?,?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'txid' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'txid' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'txid' in 'field list'
### The error may involve com.bankledger.mapper.UserMapper.register-Inline
### The error occurred while setting parameters
### SQL: insert into user(blockaddr, idcard,nickname , password, type,coincount,appid,txid) values(?, ?,?, ?, ?,?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'txid' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'txid' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.register(Unknown Source)
	at com.bankledger.controller.back.UserController.register(UserController.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'txid' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy113.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy111.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-08 20:12:39  [ http-nio-80-exec-9:63724 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:12:39  [ http-nio-80-exec-9:63724 ] - [ INFO ]  # user --->null
2018-06-08 20:12:39  [ http-nio-80-exec-9:63724 ] - [ INFO ]  # url --->/register
2018-06-08 20:12:39  [ http-nio-80-exec-9:63725 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:12:39  [ http-nio-80-exec-9:63726 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:12:39  [ http-nio-80-exec-9:63726 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ce73b1a] was not registered for synchronization because synchronization is not active
2018-06-08 20:12:39  [ http-nio-80-exec-9:63727 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@41e0476c] will not be managed by Spring
2018-06-08 20:12:39  [ http-nio-80-exec-9:63727 ] - [ DEBUG ]  ==>  Preparing: select count(0) from user where idcard = ? 
2018-06-08 20:12:39  [ http-nio-80-exec-9:63728 ] - [ DEBUG ]  ==> Parameters: t444444(String)
2018-06-08 20:12:39  [ http-nio-80-exec-9:63730 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:12:39  [ http-nio-80-exec-9:63731 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ce73b1a]
2018-06-08 20:12:39  [ http-nio-80-exec-9:63731 ] - [ INFO ]   ########## 调用底层Elt接口 - registerapp - 开始 ##########
2018-06-08 20:12:39  [ http-nio-80-exec-9:63732 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-08 20:12:39  [ http-nio-80-exec-9:63732 ] - [ INFO ]   # method :registerapp
2018-06-08 20:12:39  [ http-nio-80-exec-9:63732 ] - [ INFO ]   # Params :["t444444","t444444",2,"t444444"]
2018-06-08 20:12:39  [ http-nio-80-exec-9:63732 ] - [ INFO ]   # Body   :{"method":"registerapp","params":["t444444","t444444",2,"t444444"]}
2018-06-08 20:12:39  [ http-nio-80-exec-9:63793 ] - [ INFO ]   # Response :{"result":{"adminSafeAddress":"XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW","appId":"196551eb94bea27682bdc6e66c88bf6cff1b690881924e37416088b594f6f5b1","txId":"eb1da142a9c93cf711817f4ab1178e9503baa9756a7a051dd9dfa39fc91f4f02"},"error":null,"id":null}
2018-06-08 20:12:39  [ http-nio-80-exec-9:63793 ] - [ INFO ]   ########## 调用底层Elt接口 - registerapp - 结束 ##########
2018-06-08 20:12:39  [ http-nio-80-exec-9:63794 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:12:39  [ http-nio-80-exec-9:63794 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@182e9e9c] was not registered for synchronization because synchronization is not active
2018-06-08 20:12:39  [ http-nio-80-exec-9:63795 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@41e0476c] will not be managed by Spring
2018-06-08 20:12:39  [ http-nio-80-exec-9:63795 ] - [ DEBUG ]  ==>  Preparing: insert into user(blockaddr, idcard,nickname , password, type,coincount,appid,txid) values(?, ?,?, ?, ?,?,?,?) 
2018-06-08 20:12:39  [ http-nio-80-exec-9:63798 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), t444444(String), tuyi(String), t123456(String), 1(String), 0(BigDecimal), 196551eb94bea27682bdc6e66c88bf6cff1b690881924e37416088b594f6f5b1(String), eb1da142a9c93cf711817f4ab1178e9503baa9756a7a051dd9dfa39fc91f4f02(String)
2018-06-08 20:12:39  [ http-nio-80-exec-9:63819 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:12:39  [ http-nio-80-exec-9:63820 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@182e9e9c]
2018-06-08 20:12:40  [ http-nio-80-exec-8:64627 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:12:40  [ http-nio-80-exec-8:64630 ] - [ INFO ]  # user --->null
2018-06-08 20:12:40  [ http-nio-80-exec-8:64631 ] - [ INFO ]  # url --->/login
2018-06-08 20:12:40  [ http-nio-80-exec-8:64631 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:12:40  [ http-nio-80-exec-8:64677 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 20:12:40  [ http-nio-80-exec-8:64868 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@22f2aed5
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6b28f5ab
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6e9b037f
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-08 20:12:40  [ http-nio-80-exec-8:64874 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-08 20:15:06  [ Thread-10:210366 ] - [ INFO ]  {dataSource-1} closed
2018-06-08 20:15:06  [ restartedMain:210671 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 108 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:15:06  [ restartedMain:210671 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:15:06  [ restartedMain:210672 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:15:07  [ restartedMain:211270 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:15:07  [ restartedMain:211272 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:15:07  [ restartedMain:211281 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:15:07  [ restartedMain:211283 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:15:07  [ restartedMain:211285 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:15:07  [ restartedMain:211286 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:15:07  [ restartedMain:211288 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:15:07  [ restartedMain:211289 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:15:07  [ restartedMain:211289 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:15:07  [ restartedMain:211289 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:15:07  [ restartedMain:211289 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:15:07  [ restartedMain:211289 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:15:07  [ restartedMain:211289 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:15:07  [ restartedMain:211290 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:15:07  [ restartedMain:211402 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:15:07  [ restartedMain:211403 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:15:07  [ restartedMain:211403 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:15:07  [ restartedMain:211405 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:15:07  [ restartedMain:211406 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:15:07  [ restartedMain:211406 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:15:07  [ restartedMain:211407 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:15:07  [ restartedMain:211408 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:15:07  [ restartedMain:211408 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:15:07  [ restartedMain:211410 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:15:07  [ restartedMain:211413 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:15:07  [ restartedMain:211418 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:15:07  [ restartedMain:211418 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:15:07  [ restartedMain:211418 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:15:07  [ restartedMain:211419 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:15:07  [ restartedMain:211420 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:15:07  [ restartedMain:211888 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:15:08  [ restartedMain:212085 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:15:08  [ restartedMain:212086 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:15:08  [ restartedMain:212087 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:15:08  [ restartedMain:212087 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:15:08  [ restartedMain:212087 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:15:08  [ restartedMain:212087 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:15:08  [ restartedMain:212088 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:15:08  [ restartedMain:212088 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:15:08  [ restartedMain:212089 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:15:08  [ restartedMain:212089 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:15:08  [ restartedMain:212090 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:15:08  [ restartedMain:212096 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:15:08  [ restartedMain:212101 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:15:08  [ restartedMain:212102 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:15:08  [ restartedMain:212102 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:15:08  [ restartedMain:212103 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:15:08  [ restartedMain:212448 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:15:08  [ restartedMain:212497 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:15:09  [ restartedMain:213071 ] - [ INFO ]  Started App in 2.442 seconds (JVM running for 213.89)
2018-06-08 20:15:35  [ restartedMain:239523 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 108 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:15:35  [ restartedMain:239524 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:15:35  [ restartedMain:239524 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:15:36  [ restartedMain:240013 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:15:36  [ restartedMain:240014 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:15:36  [ restartedMain:240022 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:15:36  [ restartedMain:240024 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:15:36  [ restartedMain:240025 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:15:36  [ restartedMain:240026 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:15:36  [ restartedMain:240032 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:15:36  [ restartedMain:240033 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:15:36  [ restartedMain:240034 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:15:36  [ restartedMain:240036 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:15:36  [ restartedMain:240038 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:15:36  [ restartedMain:240039 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:15:36  [ restartedMain:240039 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:15:36  [ restartedMain:240040 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:15:36  [ restartedMain:240151 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:15:36  [ restartedMain:240152 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:15:36  [ restartedMain:240153 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:15:36  [ restartedMain:240154 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:15:36  [ restartedMain:240155 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:15:36  [ restartedMain:240155 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:15:36  [ restartedMain:240156 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:15:36  [ restartedMain:240156 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:15:36  [ restartedMain:240156 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:15:36  [ restartedMain:240157 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:15:36  [ restartedMain:240157 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:15:36  [ restartedMain:240164 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:15:36  [ restartedMain:240166 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:15:36  [ restartedMain:240167 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:15:36  [ restartedMain:240167 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:15:36  [ restartedMain:240167 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:15:36  [ restartedMain:240557 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:15:36  [ restartedMain:240734 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:15:36  [ restartedMain:240734 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:15:36  [ restartedMain:240735 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:15:36  [ restartedMain:240737 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:15:36  [ restartedMain:240738 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:15:36  [ restartedMain:240738 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:15:36  [ restartedMain:240738 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:15:36  [ restartedMain:240738 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:15:36  [ restartedMain:240739 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:15:36  [ restartedMain:240739 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:15:36  [ restartedMain:240739 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:15:36  [ restartedMain:240743 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:15:36  [ restartedMain:240743 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:15:36  [ restartedMain:240744 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:15:36  [ restartedMain:240744 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:15:36  [ restartedMain:240744 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:15:37  [ restartedMain:241037 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:15:37  [ restartedMain:241082 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:15:37  [ restartedMain:241834 ] - [ INFO ]  Started App in 2.348 seconds (JVM running for 242.654)
2018-06-08 20:15:53  [ http-nio-80-exec-10:257733 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:15:53  [ http-nio-80-exec-10:257733 ] - [ INFO ]  # user --->null
2018-06-08 20:15:53  [ http-nio-80-exec-10:257734 ] - [ INFO ]  # url --->/login
2018-06-08 20:15:53  [ http-nio-80-exec-10:257734 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:15:53  [ http-nio-80-exec-10:257748 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 20:15:53  [ http-nio-80-exec-10:257772 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@22f2aed5
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6b28f5ab
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@6e9b037f
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-08 20:15:53  [ http-nio-80-exec-10:257783 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-08 20:16:01  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-08 20:16:01  [ background-preinit:3 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-08 20:16:01  [ background-preinit:12 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:16:01  [ background-preinit:16 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:16:01  [ background-preinit:18 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:16:01  [ background-preinit:18 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:16:01  [ background-preinit:19 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:16:01  [ restartedMain:202 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 3344 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:16:01  [ restartedMain:202 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:16:01  [ restartedMain:203 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:16:01  [ background-preinit:221 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:16:01  [ background-preinit:226 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:16:02  [ background-preinit:239 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:16:02  [ background-preinit:240 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:16:02  [ background-preinit:273 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:16:02  [ background-preinit:274 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:16:03  [ restartedMain:1931 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:16:03  [ restartedMain:1936 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:16:03  [ restartedMain:1946 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:16:03  [ restartedMain:1947 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:16:03  [ restartedMain:1948 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:16:03  [ restartedMain:1948 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:16:03  [ restartedMain:1952 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:16:03  [ restartedMain:1952 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:16:03  [ restartedMain:1952 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:16:03  [ restartedMain:1952 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:16:03  [ restartedMain:1953 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:16:03  [ restartedMain:1953 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:16:03  [ restartedMain:1953 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:16:03  [ restartedMain:1953 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:16:04  [ restartedMain:2503 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:16:04  [ restartedMain:2503 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:16:04  [ restartedMain:2503 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:16:04  [ restartedMain:2505 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:16:04  [ restartedMain:2506 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:16:04  [ restartedMain:2507 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:16:04  [ restartedMain:2509 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:16:04  [ restartedMain:2509 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:16:04  [ restartedMain:2510 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:16:04  [ restartedMain:2510 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:16:04  [ restartedMain:2511 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:16:04  [ restartedMain:2517 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:16:04  [ restartedMain:2518 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:16:04  [ restartedMain:2519 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:16:04  [ restartedMain:2520 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:16:04  [ restartedMain:2520 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:16:06  [ restartedMain:4608 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-08 20:16:06  [ restartedMain:4670 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:16:06  [ restartedMain:5204 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:16:06  [ restartedMain:5204 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:16:06  [ restartedMain:5216 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:16:06  [ restartedMain:5218 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:16:06  [ restartedMain:5218 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:16:06  [ restartedMain:5218 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:16:06  [ restartedMain:5219 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:16:06  [ restartedMain:5219 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:16:06  [ restartedMain:5221 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:16:06  [ restartedMain:5222 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:16:06  [ restartedMain:5222 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:16:06  [ restartedMain:5228 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:16:06  [ restartedMain:5229 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:16:07  [ restartedMain:5230 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:16:07  [ restartedMain:5230 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:16:07  [ restartedMain:5231 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:16:08  [ restartedMain:6263 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:16:08  [ restartedMain:6414 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:16:09  [ restartedMain:7467 ] - [ INFO ]  Started App in 7.617 seconds (JVM running for 8.248)
2018-06-08 20:17:26  [ restartedMain:84921 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 3344 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:17:26  [ restartedMain:84922 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:17:26  [ restartedMain:84922 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:17:27  [ restartedMain:85526 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:17:27  [ restartedMain:85528 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:17:27  [ restartedMain:85537 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:17:27  [ restartedMain:85537 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:17:27  [ restartedMain:85538 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:17:27  [ restartedMain:85538 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:17:27  [ restartedMain:85540 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:17:27  [ restartedMain:85542 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:17:27  [ restartedMain:85543 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:17:27  [ restartedMain:85543 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:17:27  [ restartedMain:85543 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:17:27  [ restartedMain:85543 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:17:27  [ restartedMain:85544 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:17:27  [ restartedMain:85544 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:17:27  [ restartedMain:85686 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:17:27  [ restartedMain:85702 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:17:27  [ restartedMain:85704 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:17:27  [ restartedMain:85705 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:17:27  [ restartedMain:85707 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:17:27  [ restartedMain:85708 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:17:27  [ restartedMain:85709 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:17:27  [ restartedMain:85710 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:17:27  [ restartedMain:85711 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:17:27  [ restartedMain:85712 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:17:27  [ restartedMain:85712 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:17:27  [ restartedMain:85721 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:17:27  [ restartedMain:85721 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:17:27  [ restartedMain:85723 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:17:27  [ restartedMain:85724 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:17:27  [ restartedMain:85725 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:17:28  [ restartedMain:86248 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:17:28  [ restartedMain:86468 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:17:28  [ restartedMain:86468 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:17:28  [ restartedMain:86469 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:17:28  [ restartedMain:86469 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:17:28  [ restartedMain:86470 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:17:28  [ restartedMain:86470 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:17:28  [ restartedMain:86471 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:17:28  [ restartedMain:86471 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:17:28  [ restartedMain:86472 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:17:28  [ restartedMain:86472 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:17:28  [ restartedMain:86474 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:17:28  [ restartedMain:86479 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:17:28  [ restartedMain:86480 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:17:28  [ restartedMain:86480 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:17:28  [ restartedMain:86480 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:17:28  [ restartedMain:86481 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:45:23  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-08 20:45:23  [ background-preinit:3 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-08 20:45:23  [ background-preinit:14 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:45:23  [ background-preinit:19 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:45:23  [ background-preinit:20 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:45:23  [ background-preinit:21 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:45:23  [ background-preinit:22 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:45:23  [ restartedMain:203 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 232 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:45:23  [ restartedMain:204 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:45:23  [ restartedMain:204 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:45:23  [ background-preinit:216 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:45:23  [ background-preinit:219 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:45:23  [ background-preinit:221 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:45:23  [ background-preinit:222 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:45:23  [ background-preinit:223 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:45:23  [ background-preinit:224 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:45:24  [ restartedMain:1684 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:45:24  [ restartedMain:1693 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:45:24  [ restartedMain:1705 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:45:24  [ restartedMain:1706 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:45:24  [ restartedMain:1708 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:45:24  [ restartedMain:1709 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:45:24  [ restartedMain:1714 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:45:24  [ restartedMain:1716 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:45:24  [ restartedMain:1717 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:45:24  [ restartedMain:1718 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:45:24  [ restartedMain:1719 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:45:24  [ restartedMain:1720 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:45:24  [ restartedMain:1721 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:45:24  [ restartedMain:1721 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:45:25  [ restartedMain:2263 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:45:25  [ restartedMain:2264 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:45:25  [ restartedMain:2264 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:45:25  [ restartedMain:2266 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:45:25  [ restartedMain:2268 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:45:25  [ restartedMain:2269 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:45:25  [ restartedMain:2271 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:45:25  [ restartedMain:2272 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:45:25  [ restartedMain:2272 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:45:25  [ restartedMain:2273 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:45:25  [ restartedMain:2273 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:45:25  [ restartedMain:2278 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:45:25  [ restartedMain:2278 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:45:25  [ restartedMain:2279 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:45:25  [ restartedMain:2279 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:45:25  [ restartedMain:2280 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:45:27  [ restartedMain:4147 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-08 20:45:27  [ restartedMain:4259 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:45:27  [ restartedMain:4769 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:45:27  [ restartedMain:4769 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:45:27  [ restartedMain:4779 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:45:27  [ restartedMain:4780 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:45:27  [ restartedMain:4780 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:45:27  [ restartedMain:4780 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:45:27  [ restartedMain:4782 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:45:27  [ restartedMain:4782 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:45:27  [ restartedMain:4783 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:45:27  [ restartedMain:4783 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:45:27  [ restartedMain:4783 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:45:27  [ restartedMain:4790 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:45:27  [ restartedMain:4790 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:45:27  [ restartedMain:4792 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:45:27  [ restartedMain:4793 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:45:27  [ restartedMain:4793 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:45:28  [ restartedMain:5769 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:45:28  [ restartedMain:5933 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:45:29  [ restartedMain:6888 ] - [ INFO ]  Started App in 7.046 seconds (JVM running for 7.668)
2018-06-08 20:45:36  [ http-nio-80-exec-1:13168 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:45:36  [ http-nio-80-exec-1:13168 ] - [ INFO ]  # user --->null
2018-06-08 20:45:36  [ http-nio-80-exec-1:13175 ] - [ INFO ]  # url --->/login
2018-06-08 20:45:36  [ http-nio-80-exec-1:13176 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:45:36  [ http-nio-80-exec-1:13229 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 20:45:36  [ http-nio-80-exec-1:13450 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@9dffb2
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@685e0e1a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@69fbe1b2
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-08 20:45:36  [ http-nio-80-exec-1:13461 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-08 20:45:44  [ http-nio-80-exec-10:21638 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:45:44  [ http-nio-80-exec-10:21638 ] - [ INFO ]  # user --->null
2018-06-08 20:45:44  [ http-nio-80-exec-10:21638 ] - [ INFO ]  # url --->/login
2018-06-08 20:45:44  [ http-nio-80-exec-10:21639 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:45:44  [ http-nio-80-exec-10:21684 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:45:44  [ http-nio-80-exec-10:21701 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fd7b15c] was not registered for synchronization because synchronization is not active
2018-06-08 20:45:44  [ http-nio-80-exec-10:21776 ] - [ INFO ]  {dataSource-1} inited
2018-06-08 20:45:45  [ http-nio-80-exec-10:22004 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:45:45  [ http-nio-80-exec-10:22009 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:45:45  [ http-nio-80-exec-10:22033 ] - [ DEBUG ]  ==> Parameters: 1(String), 111111(String), t123456(String)
2018-06-08 20:45:45  [ http-nio-80-exec-10:22046 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:45:45  [ http-nio-80-exec-10:22048 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fd7b15c]
2018-06-08 20:45:45  [ http-nio-80-exec-8:22138 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:45:45  [ http-nio-80-exec-8:22139 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:45:45  [ http-nio-80-exec-8:22139 ] - [ INFO ]  # url --->/main
2018-06-08 20:45:45  [ http-nio-80-exec-8:22139 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:45:45  [ http-nio-80-exec-8:22140 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:45:45  [ http-nio-80-exec-8:22141 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@183b12d1] was not registered for synchronization because synchronization is not active
2018-06-08 20:45:45  [ http-nio-80-exec-8:22141 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:45:45  [ http-nio-80-exec-8:22142 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 20:45:45  [ http-nio-80-exec-8:22142 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:45:45  [ http-nio-80-exec-8:22146 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:45:45  [ http-nio-80-exec-8:22147 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@183b12d1]
2018-06-08 20:45:45  [ http-nio-80-exec-3:22606 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:45:45  [ http-nio-80-exec-3:22606 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:45:45  [ http-nio-80-exec-3:22607 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:45:45  [ http-nio-80-exec-3:22608 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:45:45  [ http-nio-80-exec-3:22625 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:45:45  [ http-nio-80-exec-3:22626 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26c292fb] was not registered for synchronization because synchronization is not active
2018-06-08 20:45:45  [ http-nio-80-exec-3:22762 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-08 20:45:45  [ http-nio-80-exec-3:22828 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:45:45  [ http-nio-80-exec-3:22828 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-08 20:45:45  [ http-nio-80-exec-3:22830 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:45:45  [ http-nio-80-exec-3:22834 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:45:45  [ http-nio-80-exec-3:22835 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26c292fb]
2018-06-08 20:45:55  [ http-nio-80-exec-7:32452 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:45:55  [ http-nio-80-exec-7:32453 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:45:55  [ http-nio-80-exec-7:32453 ] - [ INFO ]  # url --->/project/publish
2018-06-08 20:45:55  [ http-nio-80-exec-7:32453 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:46:32  [ http-nio-80-exec-2:69531 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:46:32  [ http-nio-80-exec-2:69533 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:46:32  [ http-nio-80-exec-2:69533 ] - [ INFO ]  # url --->/project/publish
2018-06-08 20:46:32  [ http-nio-80-exec-2:69534 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:48:57  [ http-nio-80-exec-1:214399 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:48:57  [ http-nio-80-exec-1:214400 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:48:57  [ http-nio-80-exec-1:214400 ] - [ INFO ]  # url --->/project/publish
2018-06-08 20:48:57  [ http-nio-80-exec-1:214401 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:50:42  [ http-nio-80-exec-6:319694 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:50:42  [ http-nio-80-exec-6:319696 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:50:42  [ http-nio-80-exec-6:319696 ] - [ INFO ]  # url --->/project/add
2018-06-08 20:50:42  [ http-nio-80-exec-6:319696 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:50:42  [ http-nio-80-exec-6:319723 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:50:42  [ http-nio-80-exec-6:319724 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555ade6e] was not registered for synchronization because synchronization is not active
2018-06-08 20:50:42  [ http-nio-80-exec-6:319733 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:50:42  [ http-nio-80-exec-6:319733 ] - [ DEBUG ]  ==>  Preparing: insert into project(projectid ,projecttype ,projectname ,address,organize,starttime ,endtime ,limitcount ,coin,limitorganizeflag ,discript,status,blockaddr,created)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
2018-06-08 20:50:42  [ http-nio-80-exec-6:319735 ] - [ DEBUG ]  ==> Parameters: 718751285836(String), 基础服务(String), 活动1(String), G20(String), 深圳 南山区 南山区义工联(String), 2018-06-08 00:00:00(String), 2018-06-08 05:00:00(String), 10(String), 10(String), 0(String), 说明这是说明(String), 0(String), 111111(String), 2018-06-08 20:50:42(String)
2018-06-08 20:50:42  [ http-nio-80-exec-6:319754 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:50:42  [ http-nio-80-exec-6:319754 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555ade6e]
2018-06-08 20:50:43  [ http-nio-80-exec-3:320691 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:50:43  [ http-nio-80-exec-3:320691 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:50:43  [ http-nio-80-exec-3:320692 ] - [ INFO ]  # url --->/project/projectPage
2018-06-08 20:50:43  [ http-nio-80-exec-3:320692 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:50:44  [ http-nio-80-exec-8:321052 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:50:44  [ http-nio-80-exec-8:321052 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:50:44  [ http-nio-80-exec-8:321052 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:50:44  [ http-nio-80-exec-8:321052 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:50:44  [ http-nio-80-exec-8:321054 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:50:44  [ http-nio-80-exec-8:321055 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13bd4d05] was not registered for synchronization because synchronization is not active
2018-06-08 20:50:44  [ http-nio-80-exec-8:321055 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.5
2018-06-08 20:50:44  [ http-nio-80-exec-8:321072 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:50:44  [ http-nio-80-exec-8:321073 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-08 20:50:44  [ http-nio-80-exec-8:321074 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:50:44  [ http-nio-80-exec-8:321077 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:50:44  [ http-nio-80-exec-8:321079 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-08 20:50:44  [ http-nio-80-exec-8:321079 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-08 20:50:44  [ http-nio-80-exec-8:321087 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:50:44  [ http-nio-80-exec-8:321087 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13bd4d05]
2018-06-08 20:51:13  [ http-nio-80-exec-7:350924 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:51:13  [ http-nio-80-exec-7:350924 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:51:13  [ http-nio-80-exec-7:350924 ] - [ INFO ]  # url --->/project/submitAuth
2018-06-08 20:51:13  [ http-nio-80-exec-7:350924 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:51:13  [ http-nio-80-exec-7:350929 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:51:13  [ http-nio-80-exec-7:350929 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dcd80b8] was not registered for synchronization because synchronization is not active
2018-06-08 20:51:13  [ http-nio-80-exec-7:350930 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:51:13  [ http-nio-80-exec-7:350931 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? and blockaddr = ? 
2018-06-08 20:51:13  [ http-nio-80-exec-7:350932 ] - [ DEBUG ]  ==> Parameters: 718751285836(String), 111111(String)
2018-06-08 20:51:13  [ http-nio-80-exec-7:350968 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:51:13  [ http-nio-80-exec-7:350968 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dcd80b8]
2018-06-08 20:51:13  [ http-nio-80-exec-7:350969 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:51:13  [ http-nio-80-exec-7:350969 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b517352] was not registered for synchronization because synchronization is not active
2018-06-08 20:51:13  [ http-nio-80-exec-7:350969 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:51:13  [ http-nio-80-exec-7:350970 ] - [ DEBUG ]  ==>  Preparing: update project set status = ? where projectid = ? and blockaddr = ? 
2018-06-08 20:51:13  [ http-nio-80-exec-7:350970 ] - [ DEBUG ]  ==> Parameters: 1(String), 718751285836(String), 111111(String)
2018-06-08 20:51:14  [ http-nio-80-exec-7:350994 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:51:14  [ http-nio-80-exec-7:350995 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b517352]
2018-06-08 20:51:14  [ http-nio-80-exec-5:351569 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:51:14  [ http-nio-80-exec-5:351569 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:51:14  [ http-nio-80-exec-5:351570 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:51:14  [ http-nio-80-exec-5:351570 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:51:14  [ http-nio-80-exec-5:351571 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:51:14  [ http-nio-80-exec-5:351572 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e135625] was not registered for synchronization because synchronization is not active
2018-06-08 20:51:14  [ http-nio-80-exec-5:351572 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2018-06-08 20:51:14  [ http-nio-80-exec-5:351592 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:51:14  [ http-nio-80-exec-5:351593 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-08 20:51:14  [ http-nio-80-exec-5:351593 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:51:14  [ http-nio-80-exec-5:351594 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:51:14  [ http-nio-80-exec-5:351595 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-08 20:51:14  [ http-nio-80-exec-5:351596 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-08 20:51:14  [ http-nio-80-exec-5:351598 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:51:14  [ http-nio-80-exec-5:351599 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e135625]
2018-06-08 20:51:16  [ http-nio-80-exec-6:353202 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:51:16  [ http-nio-80-exec-6:353202 ] - [ INFO ]  # user --->com.bankledger.entity.User@34700689
2018-06-08 20:51:16  [ http-nio-80-exec-6:353202 ] - [ INFO ]  # url --->/loginOut
2018-06-08 20:51:16  [ http-nio-80-exec-6:353202 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:51:16  [ http-nio-80-exec-4:353228 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:51:16  [ http-nio-80-exec-4:353228 ] - [ INFO ]  # user --->null
2018-06-08 20:51:16  [ http-nio-80-exec-4:353229 ] - [ INFO ]  # url --->/login
2018-06-08 20:51:16  [ http-nio-80-exec-4:353229 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:51:31  [ http-nio-80-exec-3:368035 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:51:31  [ http-nio-80-exec-3:368036 ] - [ INFO ]  # user --->null
2018-06-08 20:51:31  [ http-nio-80-exec-3:368036 ] - [ INFO ]  # url --->/login
2018-06-08 20:51:31  [ http-nio-80-exec-3:368036 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:51:31  [ http-nio-80-exec-3:368040 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:51:31  [ http-nio-80-exec-3:368042 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4106eef9] was not registered for synchronization because synchronization is not active
2018-06-08 20:51:31  [ http-nio-80-exec-3:368042 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:51:31  [ http-nio-80-exec-3:368042 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:51:31  [ http-nio-80-exec-3:368043 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 20:51:31  [ http-nio-80-exec-3:368044 ] - [ DEBUG ]  <==      Total: 0
2018-06-08 20:51:31  [ http-nio-80-exec-3:368045 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4106eef9]
2018-06-08 20:51:43  [ http-nio-80-exec-1:380721 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:51:43  [ http-nio-80-exec-1:380722 ] - [ INFO ]  # user --->null
2018-06-08 20:51:43  [ http-nio-80-exec-1:380722 ] - [ INFO ]  # url --->/login
2018-06-08 20:51:43  [ http-nio-80-exec-1:380722 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:51:43  [ http-nio-80-exec-1:380722 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:51:43  [ http-nio-80-exec-1:380723 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7344ff0c] was not registered for synchronization because synchronization is not active
2018-06-08 20:51:43  [ http-nio-80-exec-1:380723 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:51:43  [ http-nio-80-exec-1:380723 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:51:43  [ http-nio-80-exec-1:380723 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 20:51:43  [ http-nio-80-exec-1:380724 ] - [ DEBUG ]  <==      Total: 0
2018-06-08 20:51:43  [ http-nio-80-exec-1:380725 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7344ff0c]
2018-06-08 20:51:54  [ http-nio-80-exec-10:391809 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:51:54  [ http-nio-80-exec-10:391809 ] - [ INFO ]  # user --->null
2018-06-08 20:51:54  [ http-nio-80-exec-10:391809 ] - [ INFO ]  # url --->/login
2018-06-08 20:51:54  [ http-nio-80-exec-10:391809 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:51:54  [ http-nio-80-exec-10:391810 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:51:54  [ http-nio-80-exec-10:391810 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41c74da6] was not registered for synchronization because synchronization is not active
2018-06-08 20:51:54  [ http-nio-80-exec-10:391810 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:51:54  [ http-nio-80-exec-10:391811 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:51:54  [ http-nio-80-exec-10:391811 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 20:51:54  [ http-nio-80-exec-10:391812 ] - [ DEBUG ]  <==      Total: 0
2018-06-08 20:51:54  [ http-nio-80-exec-10:391813 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41c74da6]
2018-06-08 20:52:02  [ http-nio-80-exec-5:399585 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:02  [ http-nio-80-exec-5:399586 ] - [ INFO ]  # user --->null
2018-06-08 20:52:02  [ http-nio-80-exec-5:399586 ] - [ INFO ]  # url --->/login
2018-06-08 20:52:02  [ http-nio-80-exec-5:399586 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:02  [ http-nio-80-exec-5:399588 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:02  [ http-nio-80-exec-5:399589 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7522b975] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:02  [ http-nio-80-exec-5:399589 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:02  [ http-nio-80-exec-5:399590 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:52:02  [ http-nio-80-exec-5:399590 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 20:52:02  [ http-nio-80-exec-5:399591 ] - [ DEBUG ]  <==      Total: 0
2018-06-08 20:52:02  [ http-nio-80-exec-5:399592 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7522b975]
2018-06-08 20:52:23  [ http-nio-80-exec-9:420546 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:23  [ http-nio-80-exec-9:420547 ] - [ INFO ]  # user --->null
2018-06-08 20:52:23  [ http-nio-80-exec-9:420547 ] - [ INFO ]  # url --->/login
2018-06-08 20:52:23  [ http-nio-80-exec-9:420547 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:23  [ http-nio-80-exec-9:420548 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:23  [ http-nio-80-exec-9:420548 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c84f46] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:23  [ http-nio-80-exec-9:420549 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:23  [ http-nio-80-exec-9:420549 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:52:23  [ http-nio-80-exec-9:420550 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 20:52:23  [ http-nio-80-exec-9:420553 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:23  [ http-nio-80-exec-9:420554 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c84f46]
2018-06-08 20:52:23  [ http-nio-80-exec-7:420568 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:23  [ http-nio-80-exec-7:420578 ] - [ INFO ]  # user --->com.bankledger.entity.User@ff98c18
2018-06-08 20:52:23  [ http-nio-80-exec-7:420579 ] - [ INFO ]  # url --->/main
2018-06-08 20:52:23  [ http-nio-80-exec-7:420579 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:23  [ http-nio-80-exec-7:420582 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:23  [ http-nio-80-exec-7:420582 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1226e878] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:23  [ http-nio-80-exec-7:420582 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:23  [ http-nio-80-exec-7:420583 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 20:52:23  [ http-nio-80-exec-7:420588 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:52:23  [ http-nio-80-exec-7:420591 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:23  [ http-nio-80-exec-7:420592 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1226e878]
2018-06-08 20:52:23  [ http-nio-80-exec-2:420933 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:23  [ http-nio-80-exec-2:420933 ] - [ INFO ]  # user --->com.bankledger.entity.User@ff98c18
2018-06-08 20:52:23  [ http-nio-80-exec-2:420934 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:52:23  [ http-nio-80-exec-2:420934 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:23  [ http-nio-80-exec-2:420935 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:23  [ http-nio-80-exec-2:420935 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff801ad] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:23  [ http-nio-80-exec-2:420936 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.75
2018-06-08 20:52:23  [ http-nio-80-exec-2:420947 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:23  [ http-nio-80-exec-2:420948 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 20:52:23  [ http-nio-80-exec-2:420948 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 20:52:23  [ http-nio-80-exec-2:420950 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:23  [ http-nio-80-exec-2:420951 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff801ad]
2018-06-08 20:52:26  [ http-nio-80-exec-3:423923 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:26  [ http-nio-80-exec-3:423923 ] - [ INFO ]  # user --->com.bankledger.entity.User@ff98c18
2018-06-08 20:52:26  [ http-nio-80-exec-3:423923 ] - [ INFO ]  # url --->/list
2018-06-08 20:52:26  [ http-nio-80-exec-3:423923 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:26  [ http-nio-80-exec-3:423924 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:26  [ http-nio-80-exec-3:423925 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@caf8ef7] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:26  [ http-nio-80-exec-3:423926 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:26  [ http-nio-80-exec-3:423926 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-08 20:52:26  [ http-nio-80-exec-3:423927 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 20:52:26  [ http-nio-80-exec-3:423931 ] - [ DEBUG ]  <==      Total: 0
2018-06-08 20:52:26  [ http-nio-80-exec-3:423933 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@caf8ef7]
2018-06-08 20:52:27  [ http-nio-80-exec-10:424099 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:27  [ http-nio-80-exec-10:424099 ] - [ INFO ]  # user --->com.bankledger.entity.User@ff98c18
2018-06-08 20:52:27  [ http-nio-80-exec-10:424099 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:52:27  [ http-nio-80-exec-10:424099 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:27  [ http-nio-80-exec-10:424100 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:27  [ http-nio-80-exec-10:424102 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4819fbfa] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:27  [ http-nio-80-exec-10:424102 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8
2018-06-08 20:52:27  [ http-nio-80-exec-10:424112 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:27  [ http-nio-80-exec-10:424113 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 20:52:27  [ http-nio-80-exec-10:424113 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 20:52:27  [ http-nio-80-exec-10:424115 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:27  [ http-nio-80-exec-10:424116 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4819fbfa]
2018-06-08 20:52:32  [ http-nio-80-exec-9:429536 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:32  [ http-nio-80-exec-9:429536 ] - [ INFO ]  # user --->com.bankledger.entity.User@ff98c18
2018-06-08 20:52:32  [ http-nio-80-exec-9:429536 ] - [ INFO ]  # url --->/loginOut
2018-06-08 20:52:32  [ http-nio-80-exec-9:429537 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:32  [ http-nio-80-exec-7:429543 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:32  [ http-nio-80-exec-7:429543 ] - [ INFO ]  # user --->null
2018-06-08 20:52:32  [ http-nio-80-exec-7:429543 ] - [ INFO ]  # url --->/login
2018-06-08 20:52:32  [ http-nio-80-exec-7:429543 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:33  [ http-nio-80-exec-4:430261 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:33  [ http-nio-80-exec-4:430262 ] - [ INFO ]  # user --->null
2018-06-08 20:52:33  [ http-nio-80-exec-4:430262 ] - [ INFO ]  # url --->/login
2018-06-08 20:52:33  [ http-nio-80-exec-4:430262 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:33  [ http-nio-80-exec-4:430263 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:33  [ http-nio-80-exec-4:430264 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a8c4867] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:33  [ http-nio-80-exec-4:430265 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:33  [ http-nio-80-exec-4:430266 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:52:33  [ http-nio-80-exec-4:430267 ] - [ DEBUG ]  ==> Parameters: 0(String), 000000(String), t123456(String)
2018-06-08 20:52:33  [ http-nio-80-exec-4:430269 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:33  [ http-nio-80-exec-4:430270 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a8c4867]
2018-06-08 20:52:33  [ http-nio-80-exec-8:430280 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:33  [ http-nio-80-exec-8:430280 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:33  [ http-nio-80-exec-8:430280 ] - [ INFO ]  # url --->/main
2018-06-08 20:52:33  [ http-nio-80-exec-8:430281 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:33  [ http-nio-80-exec-8:430282 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:33  [ http-nio-80-exec-8:430282 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9197cb] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:33  [ http-nio-80-exec-8:430283 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:33  [ http-nio-80-exec-8:430283 ] - [ DEBUG ]  ==>  Preparing: select count(0) from project where status= '1' 
2018-06-08 20:52:33  [ http-nio-80-exec-8:430284 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:52:33  [ http-nio-80-exec-8:430286 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:33  [ http-nio-80-exec-8:430287 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9197cb]
2018-06-08 20:52:33  [ http-nio-80-exec-1:430497 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:33  [ http-nio-80-exec-1:430499 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:33  [ http-nio-80-exec-1:430500 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:52:33  [ http-nio-80-exec-1:430501 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:33  [ http-nio-80-exec-1:430502 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:33  [ http-nio-80-exec-1:430502 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52d79919] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:33  [ http-nio-80-exec-1:430502 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8333333333333334
2018-06-08 20:52:33  [ http-nio-80-exec-1:430517 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:33  [ http-nio-80-exec-1:430517 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:52:33  [ http-nio-80-exec-1:430517 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:52:33  [ http-nio-80-exec-1:430518 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:33  [ http-nio-80-exec-1:430519 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:52:33  [ http-nio-80-exec-1:430520 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:52:33  [ http-nio-80-exec-1:430521 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:33  [ http-nio-80-exec-1:430521 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52d79919]
2018-06-08 20:52:34  [ http-nio-80-exec-2:431834 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:34  [ http-nio-80-exec-2:431834 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:34  [ http-nio-80-exec-2:431834 ] - [ INFO ]  # url --->/project/auth
2018-06-08 20:52:34  [ http-nio-80-exec-2:431834 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:35  [ http-nio-80-exec-10:432079 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:35  [ http-nio-80-exec-10:432079 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:35  [ http-nio-80-exec-10:432079 ] - [ INFO ]  # url --->/project/getListAuth
2018-06-08 20:52:35  [ http-nio-80-exec-10:432079 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:35  [ http-nio-80-exec-10:432083 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:35  [ http-nio-80-exec-10:432083 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fbb8f0c] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:35  [ http-nio-80-exec-10:432084 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8571428571428571
2018-06-08 20:52:35  [ http-nio-80-exec-10:432101 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:35  [ http-nio-80-exec-10:432101 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:52:35  [ http-nio-80-exec-10:432102 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:52:35  [ http-nio-80-exec-10:432102 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:35  [ http-nio-80-exec-10:432104 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:52:35  [ http-nio-80-exec-10:432104 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:52:35  [ http-nio-80-exec-10:432105 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:35  [ http-nio-80-exec-10:432106 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fbb8f0c]
2018-06-08 20:52:35  [ http-nio-80-exec-9:432907 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:35  [ http-nio-80-exec-9:432907 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:35  [ http-nio-80-exec-9:432908 ] - [ INFO ]  # url --->/main
2018-06-08 20:52:35  [ http-nio-80-exec-9:432908 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:35  [ http-nio-80-exec-9:432908 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:35  [ http-nio-80-exec-9:432908 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9df4f8] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:35  [ http-nio-80-exec-9:432909 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:35  [ http-nio-80-exec-9:432909 ] - [ DEBUG ]  ==>  Preparing: select count(0) from project where status= '1' 
2018-06-08 20:52:35  [ http-nio-80-exec-9:432910 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:52:35  [ http-nio-80-exec-9:432913 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:35  [ http-nio-80-exec-9:432913 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9df4f8]
2018-06-08 20:52:36  [ http-nio-80-exec-7:433078 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:36  [ http-nio-80-exec-7:433078 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:36  [ http-nio-80-exec-7:433078 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:52:36  [ http-nio-80-exec-7:433079 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:36  [ http-nio-80-exec-7:433079 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:36  [ http-nio-80-exec-7:433080 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c7efeb2] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:36  [ http-nio-80-exec-7:433080 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.875
2018-06-08 20:52:36  [ http-nio-80-exec-7:433089 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:36  [ http-nio-80-exec-7:433089 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:52:36  [ http-nio-80-exec-7:433089 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:52:36  [ http-nio-80-exec-7:433091 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:36  [ http-nio-80-exec-7:433092 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:52:36  [ http-nio-80-exec-7:433092 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:52:36  [ http-nio-80-exec-7:433094 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:36  [ http-nio-80-exec-7:433094 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c7efeb2]
2018-06-08 20:52:36  [ http-nio-80-exec-6:433498 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:36  [ http-nio-80-exec-6:433498 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:36  [ http-nio-80-exec-6:433498 ] - [ INFO ]  # url --->/project/auth
2018-06-08 20:52:36  [ http-nio-80-exec-6:433499 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:36  [ http-nio-80-exec-5:433682 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:36  [ http-nio-80-exec-5:433682 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:36  [ http-nio-80-exec-5:433682 ] - [ INFO ]  # url --->/project/getListAuth
2018-06-08 20:52:36  [ http-nio-80-exec-5:433682 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:36  [ http-nio-80-exec-5:433683 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:36  [ http-nio-80-exec-5:433684 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12b7e720] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:36  [ http-nio-80-exec-5:433684 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8888888888888888
2018-06-08 20:52:36  [ http-nio-80-exec-5:433694 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:36  [ http-nio-80-exec-5:433694 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:52:36  [ http-nio-80-exec-5:433695 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:52:36  [ http-nio-80-exec-5:433696 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:36  [ http-nio-80-exec-5:433698 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:52:36  [ http-nio-80-exec-5:433698 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:52:36  [ http-nio-80-exec-5:433702 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:36  [ http-nio-80-exec-5:433702 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12b7e720]
2018-06-08 20:52:38  [ http-nio-80-exec-8:435402 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:38  [ http-nio-80-exec-8:435402 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:38  [ http-nio-80-exec-8:435402 ] - [ INFO ]  # url --->/project/passAuth
2018-06-08 20:52:38  [ http-nio-80-exec-8:435402 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:38  [ http-nio-80-exec-8:435403 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:38  [ http-nio-80-exec-8:435404 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f33b349] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:38  [ http-nio-80-exec-8:435404 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:38  [ http-nio-80-exec-8:435404 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-08 20:52:38  [ http-nio-80-exec-8:435405 ] - [ DEBUG ]  ==> Parameters: 718751285836(String)
2018-06-08 20:52:38  [ http-nio-80-exec-8:435406 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:38  [ http-nio-80-exec-8:435407 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f33b349]
2018-06-08 20:52:38  [ http-nio-80-exec-8:435407 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:38  [ http-nio-80-exec-8:435408 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c5a9c2d] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:38  [ http-nio-80-exec-8:435410 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:38  [ http-nio-80-exec-8:435411 ] - [ DEBUG ]  ==>  Preparing: update project set status = ? where projectid = ? 
2018-06-08 20:52:38  [ http-nio-80-exec-8:435412 ] - [ DEBUG ]  ==> Parameters: 2(String), 718751285836(String)
2018-06-08 20:52:38  [ http-nio-80-exec-8:435442 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:52:38  [ http-nio-80-exec-8:435442 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c5a9c2d]
2018-06-08 20:52:39  [ http-nio-80-exec-1:436062 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:39  [ http-nio-80-exec-1:436063 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:39  [ http-nio-80-exec-1:436063 ] - [ INFO ]  # url --->/project/getListAuth
2018-06-08 20:52:39  [ http-nio-80-exec-1:436063 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:39  [ http-nio-80-exec-1:436064 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:39  [ http-nio-80-exec-1:436065 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@111c3726] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:39  [ http-nio-80-exec-1:436065 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9
2018-06-08 20:52:39  [ http-nio-80-exec-1:436083 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:39  [ http-nio-80-exec-1:436084 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:52:39  [ http-nio-80-exec-1:436085 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:52:39  [ http-nio-80-exec-1:436087 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:39  [ http-nio-80-exec-1:436088 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:52:39  [ http-nio-80-exec-1:436088 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:52:39  [ http-nio-80-exec-1:436089 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:39  [ http-nio-80-exec-1:436090 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@111c3726]
2018-06-08 20:52:40  [ http-nio-80-exec-2:437241 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:40  [ http-nio-80-exec-2:437241 ] - [ INFO ]  # user --->com.bankledger.entity.User@73b00672
2018-06-08 20:52:40  [ http-nio-80-exec-2:437242 ] - [ INFO ]  # url --->/loginOut
2018-06-08 20:52:40  [ http-nio-80-exec-2:437242 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:40  [ http-nio-80-exec-3:437248 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:40  [ http-nio-80-exec-3:437248 ] - [ INFO ]  # user --->null
2018-06-08 20:52:40  [ http-nio-80-exec-3:437249 ] - [ INFO ]  # url --->/login
2018-06-08 20:52:40  [ http-nio-80-exec-3:437249 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:43  [ http-nio-80-exec-10:440275 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:43  [ http-nio-80-exec-10:440276 ] - [ INFO ]  # user --->null
2018-06-08 20:52:43  [ http-nio-80-exec-10:440276 ] - [ INFO ]  # url --->/login
2018-06-08 20:52:43  [ http-nio-80-exec-10:440276 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:43  [ http-nio-80-exec-10:440277 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:43  [ http-nio-80-exec-10:440277 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@145127bf] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:43  [ http-nio-80-exec-10:440278 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:43  [ http-nio-80-exec-10:440278 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:52:43  [ http-nio-80-exec-10:440279 ] - [ DEBUG ]  ==> Parameters: 0(String), 222222(String), t123456(String)
2018-06-08 20:52:43  [ http-nio-80-exec-10:440282 ] - [ DEBUG ]  <==      Total: 0
2018-06-08 20:52:43  [ http-nio-80-exec-10:440283 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@145127bf]
2018-06-08 20:52:45  [ http-nio-80-exec-9:442849 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:45  [ http-nio-80-exec-9:442849 ] - [ INFO ]  # user --->null
2018-06-08 20:52:45  [ http-nio-80-exec-9:442849 ] - [ INFO ]  # url --->/login
2018-06-08 20:52:45  [ http-nio-80-exec-9:442849 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:45  [ http-nio-80-exec-9:442850 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:45  [ http-nio-80-exec-9:442851 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20cb8eb] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:45  [ http-nio-80-exec-9:442851 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:45  [ http-nio-80-exec-9:442853 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:52:45  [ http-nio-80-exec-9:442854 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 20:52:45  [ http-nio-80-exec-9:442855 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:45  [ http-nio-80-exec-9:442856 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20cb8eb]
2018-06-08 20:52:45  [ http-nio-80-exec-7:442862 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:45  [ http-nio-80-exec-7:442863 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:52:45  [ http-nio-80-exec-7:442863 ] - [ INFO ]  # url --->/main
2018-06-08 20:52:45  [ http-nio-80-exec-7:442863 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:45  [ http-nio-80-exec-7:442866 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:45  [ http-nio-80-exec-7:442866 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@476a7c20] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:45  [ http-nio-80-exec-7:442867 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:45  [ http-nio-80-exec-7:442867 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 20:52:45  [ http-nio-80-exec-7:442868 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:52:45  [ http-nio-80-exec-7:442869 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:45  [ http-nio-80-exec-7:442870 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@476a7c20]
2018-06-08 20:52:46  [ http-nio-80-exec-6:443073 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:46  [ http-nio-80-exec-6:443073 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:52:46  [ http-nio-80-exec-6:443073 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:52:46  [ http-nio-80-exec-6:443074 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:46  [ http-nio-80-exec-6:443075 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:46  [ http-nio-80-exec-6:443076 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1163b27e] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:46  [ http-nio-80-exec-6:443076 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9090909090909091
2018-06-08 20:52:46  [ http-nio-80-exec-6:443089 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:46  [ http-nio-80-exec-6:443089 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 20:52:46  [ http-nio-80-exec-6:443090 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 20:52:46  [ http-nio-80-exec-6:443091 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:46  [ http-nio-80-exec-6:443092 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? LIMIT ? 
2018-06-08 20:52:46  [ http-nio-80-exec-6:443093 ] - [ DEBUG ]  ==> Parameters: 2(String), 10(Integer)
2018-06-08 20:52:46  [ http-nio-80-exec-6:443094 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:46  [ http-nio-80-exec-6:443095 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1163b27e]
2018-06-08 20:52:51  [ http-nio-80-exec-5:448018 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:51  [ http-nio-80-exec-5:448018 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:52:51  [ http-nio-80-exec-5:448019 ] - [ INFO ]  # url --->/join/add
2018-06-08 20:52:51  [ http-nio-80-exec-5:448019 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:51  [ http-nio-80-exec-5:448020 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:51  [ http-nio-80-exec-5:448021 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ac850df] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:51  [ http-nio-80-exec-5:448022 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:51  [ http-nio-80-exec-5:448022 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-08 20:52:51  [ http-nio-80-exec-5:448022 ] - [ DEBUG ]  ==> Parameters: 718751285836(String)
2018-06-08 20:52:51  [ http-nio-80-exec-5:448024 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:51  [ http-nio-80-exec-5:448025 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ac850df]
2018-06-08 20:52:51  [ http-nio-80-exec-5:448025 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:51  [ http-nio-80-exec-5:448027 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ff429d] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:51  [ http-nio-80-exec-5:448028 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:51  [ http-nio-80-exec-5:448028 ] - [ DEBUG ]  ==>  Preparing: select count(0) from join_project where projectid = ? and blockaddr=? 
2018-06-08 20:52:51  [ http-nio-80-exec-5:448029 ] - [ DEBUG ]  ==> Parameters: 718751285836(String), XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:52:51  [ http-nio-80-exec-5:448030 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:51  [ http-nio-80-exec-5:448030 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ff429d]
2018-06-08 20:52:51  [ http-nio-80-exec-5:448032 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:51  [ http-nio-80-exec-5:448032 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4643224e] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:51  [ http-nio-80-exec-5:448032 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:51  [ http-nio-80-exec-5:448033 ] - [ DEBUG ]  ==>  Preparing: insert into join_project( projectid, blockAddr, created,iscome) values (?, ?, ?,?) 
2018-06-08 20:52:51  [ http-nio-80-exec-5:448034 ] - [ DEBUG ]  ==> Parameters: 718751285836(String), XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), 2018-06-08 20:52:51(String), 0(String)
2018-06-08 20:52:51  [ http-nio-80-exec-5:448054 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:52:51  [ http-nio-80-exec-5:448054 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4643224e]
2018-06-08 20:52:51  [ http-nio-80-exec-4:448938 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:51  [ http-nio-80-exec-4:448938 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:52:51  [ http-nio-80-exec-4:448938 ] - [ INFO ]  # url --->/list
2018-06-08 20:52:51  [ http-nio-80-exec-4:448938 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:51  [ http-nio-80-exec-4:448938 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:51  [ http-nio-80-exec-4:448939 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eab4d1b] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:51  [ http-nio-80-exec-4:448940 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:51  [ http-nio-80-exec-4:448940 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? 
2018-06-08 20:52:51  [ http-nio-80-exec-4:448941 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 20:52:51  [ http-nio-80-exec-4:448943 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:51  [ http-nio-80-exec-4:448944 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eab4d1b]
2018-06-08 20:52:52  [ http-nio-80-exec-8:449151 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:52  [ http-nio-80-exec-8:449152 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:52:52  [ http-nio-80-exec-8:449152 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:52:52  [ http-nio-80-exec-8:449152 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:52  [ http-nio-80-exec-8:449153 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:52  [ http-nio-80-exec-8:449153 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c31372] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:52  [ http-nio-80-exec-8:449153 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9166666666666666
2018-06-08 20:52:52  [ http-nio-80-exec-8:449166 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:52  [ http-nio-80-exec-8:449166 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 20:52:52  [ http-nio-80-exec-8:449167 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 20:52:52  [ http-nio-80-exec-8:449168 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:52  [ http-nio-80-exec-8:449169 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? LIMIT ? 
2018-06-08 20:52:52  [ http-nio-80-exec-8:449169 ] - [ DEBUG ]  ==> Parameters: 2(String), 10(Integer)
2018-06-08 20:52:52  [ http-nio-80-exec-8:449171 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:52  [ http-nio-80-exec-8:449172 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c31372]
2018-06-08 20:52:58  [ http-nio-80-exec-1:455306 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:58  [ http-nio-80-exec-1:455306 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:52:58  [ http-nio-80-exec-1:455306 ] - [ INFO ]  # url --->/organize
2018-06-08 20:52:58  [ http-nio-80-exec-1:455307 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:58  [ http-nio-80-exec-1:455309 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:58  [ http-nio-80-exec-1:455309 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a8ae4b] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:58  [ http-nio-80-exec-1:455310 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:58  [ http-nio-80-exec-1:455310 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-08 20:52:58  [ http-nio-80-exec-1:455310 ] - [ DEBUG ]  ==> Parameters: null
2018-06-08 20:52:58  [ http-nio-80-exec-1:455311 ] - [ DEBUG ]  <==      Total: 0
2018-06-08 20:52:58  [ http-nio-80-exec-1:455312 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a8ae4b]
2018-06-08 20:52:58  [ http-nio-80-exec-2:455345 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:58  [ http-nio-80-exec-2:455345 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:52:58  [ http-nio-80-exec-2:455346 ] - [ INFO ]  # url --->/error
2018-06-08 20:52:58  [ http-nio-80-exec-2:455346 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:59  [ http-nio-80-exec-3:456236 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:59  [ http-nio-80-exec-3:456236 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:52:59  [ http-nio-80-exec-3:456236 ] - [ INFO ]  # url --->/join/joinProjectPage
2018-06-08 20:52:59  [ http-nio-80-exec-3:456236 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:59  [ http-nio-80-exec-9:456435 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:52:59  [ http-nio-80-exec-9:456435 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:52:59  [ http-nio-80-exec-9:456436 ] - [ INFO ]  # url --->/join/getListProject
2018-06-08 20:52:59  [ http-nio-80-exec-9:456436 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:52:59  [ http-nio-80-exec-9:456438 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:52:59  [ http-nio-80-exec-9:456438 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bcbb36d] was not registered for synchronization because synchronization is not active
2018-06-08 20:52:59  [ http-nio-80-exec-9:456438 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8461538461538461
2018-06-08 20:52:59  [ http-nio-80-exec-9:456453 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:52:59  [ http-nio-80-exec-9:456453 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM join_project j LEFT JOIN project p ON j.projectid = p.projectid WHERE j.blockaddr = ? 
2018-06-08 20:52:59  [ http-nio-80-exec-9:456453 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:52:59  [ http-nio-80-exec-9:456454 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:59  [ http-nio-80-exec-9:456455 ] - [ DEBUG ]  ==>  Preparing: select p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime, p.limitcount limitCount ,p.coin,p.limitorganizeflag limitOrganizeFlag, p.discript,p.status,j.iscome isCome from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? order by j.created LIMIT ? 
2018-06-08 20:52:59  [ http-nio-80-exec-9:456456 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), 10(Integer)
2018-06-08 20:52:59  [ http-nio-80-exec-9:456457 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:52:59  [ http-nio-80-exec-9:456457 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bcbb36d]
2018-06-08 20:53:00  [ http-nio-80-exec-7:457075 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:00  [ http-nio-80-exec-7:457075 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:00  [ http-nio-80-exec-7:457075 ] - [ INFO ]  # url --->/main
2018-06-08 20:53:00  [ http-nio-80-exec-7:457075 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:00  [ http-nio-80-exec-7:457076 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:00  [ http-nio-80-exec-7:457076 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3906d2e8] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:00  [ http-nio-80-exec-7:457077 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:00  [ http-nio-80-exec-7:457077 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 20:53:00  [ http-nio-80-exec-7:457077 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:53:00  [ http-nio-80-exec-7:457079 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:00  [ http-nio-80-exec-7:457079 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3906d2e8]
2018-06-08 20:53:00  [ http-nio-80-exec-6:457231 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:00  [ http-nio-80-exec-6:457231 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:00  [ http-nio-80-exec-6:457231 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:53:00  [ http-nio-80-exec-6:457231 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:00  [ http-nio-80-exec-6:457232 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:00  [ http-nio-80-exec-6:457232 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6d8fe6] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:00  [ http-nio-80-exec-6:457233 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8571428571428571
2018-06-08 20:53:00  [ http-nio-80-exec-6:457243 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:00  [ http-nio-80-exec-6:457243 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 20:53:00  [ http-nio-80-exec-6:457244 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 20:53:00  [ http-nio-80-exec-6:457245 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:00  [ http-nio-80-exec-6:457246 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.status = ? LIMIT ? 
2018-06-08 20:53:00  [ http-nio-80-exec-6:457246 ] - [ DEBUG ]  ==> Parameters: 2(String), 10(Integer)
2018-06-08 20:53:00  [ http-nio-80-exec-6:457249 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:00  [ http-nio-80-exec-6:457249 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6d8fe6]
2018-06-08 20:53:01  [ http-nio-80-exec-5:458089 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:01  [ http-nio-80-exec-5:458090 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:01  [ http-nio-80-exec-5:458090 ] - [ INFO ]  # url --->/join/joinProjectPage
2018-06-08 20:53:01  [ http-nio-80-exec-5:458091 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:01  [ http-nio-80-exec-4:458267 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:01  [ http-nio-80-exec-4:458268 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:01  [ http-nio-80-exec-4:458268 ] - [ INFO ]  # url --->/join/getListProject
2018-06-08 20:53:01  [ http-nio-80-exec-4:458268 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:01  [ http-nio-80-exec-4:458268 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:01  [ http-nio-80-exec-4:458269 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d284379] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:01  [ http-nio-80-exec-4:458269 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8666666666666667
2018-06-08 20:53:01  [ http-nio-80-exec-4:458284 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:01  [ http-nio-80-exec-4:458285 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM join_project j LEFT JOIN project p ON j.projectid = p.projectid WHERE j.blockaddr = ? 
2018-06-08 20:53:01  [ http-nio-80-exec-4:458285 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:53:01  [ http-nio-80-exec-4:458287 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:01  [ http-nio-80-exec-4:458288 ] - [ DEBUG ]  ==>  Preparing: select p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime, p.limitcount limitCount ,p.coin,p.limitorganizeflag limitOrganizeFlag, p.discript,p.status,j.iscome isCome from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? order by j.created LIMIT ? 
2018-06-08 20:53:01  [ http-nio-80-exec-4:458289 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), 10(Integer)
2018-06-08 20:53:01  [ http-nio-80-exec-4:458295 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:01  [ http-nio-80-exec-4:458296 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d284379]
2018-06-08 20:53:03  [ http-nio-80-exec-8:460317 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:03  [ http-nio-80-exec-8:460318 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:03  [ http-nio-80-exec-8:460318 ] - [ INFO ]  # url --->/join/toSign
2018-06-08 20:53:03  [ http-nio-80-exec-8:460318 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:03  [ http-nio-80-exec-8:460319 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:03  [ http-nio-80-exec-8:460320 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ddf39f8] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:03  [ http-nio-80-exec-8:460320 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:03  [ http-nio-80-exec-8:460320 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-08 20:53:03  [ http-nio-80-exec-8:460320 ] - [ DEBUG ]  ==> Parameters: 718751285836(String)
2018-06-08 20:53:03  [ http-nio-80-exec-8:460322 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:03  [ http-nio-80-exec-8:460323 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ddf39f8]
2018-06-08 20:53:03  [ http-nio-80-exec-8:460325 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:03  [ http-nio-80-exec-8:460326 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48a4b2d7] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:03  [ http-nio-80-exec-8:460326 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:03  [ http-nio-80-exec-8:460326 ] - [ DEBUG ]  ==>  Preparing: select count(0) from join_project where projectid = ? and blockaddr=? 
2018-06-08 20:53:03  [ http-nio-80-exec-8:460327 ] - [ DEBUG ]  ==> Parameters: 718751285836(String), XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:53:03  [ http-nio-80-exec-8:460328 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:03  [ http-nio-80-exec-8:460328 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48a4b2d7]
2018-06-08 20:53:03  [ http-nio-80-exec-8:460329 ] - [ INFO ]   ########## 调用底层Elt接口 - createextenddatatx - 开始 ##########
2018-06-08 20:53:03  [ http-nio-80-exec-8:460330 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-08 20:53:03  [ http-nio-80-exec-8:460330 ] - [ INFO ]   # method :createextenddatatx
2018-06-08 20:53:03  [ http-nio-80-exec-8:460333 ] - [ INFO ]   # Params :[1,"Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","8cd1b963f18ab3fd366601e02667f49e8a812d1d7a5a07ba254fad07edd0bda6",1000,"7B22626C6F636B41646472223A2258634575597062446E4866374E5A46734A365A6D77576D655164557368594B517957222C2270726F6A6563744964223A22373138373531323835383336227D"]
2018-06-08 20:53:03  [ http-nio-80-exec-8:460333 ] - [ INFO ]   # Body   :{"method":"createextenddatatx","params":[1,"Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","8cd1b963f18ab3fd366601e02667f49e8a812d1d7a5a07ba254fad07edd0bda6",1000,"7B22626C6F636B41646472223A2258634575597062446E4866374E5A46734A365A6D77576D655164557368594B517957222C2270726F6A6563744964223A22373138373531323835383336227D"]}
2018-06-08 20:53:03  [ http-nio-80-exec-8:460392 ] - [ INFO ]   # Response :{"result":{"txId":"a4f733373fca638be135d775cb87a14a5ab107e959215eb0490f07810982908c"},"error":null,"id":null}
2018-06-08 20:53:03  [ http-nio-80-exec-8:460392 ] - [ INFO ]   # use time :63
2018-06-08 20:53:03  [ http-nio-80-exec-8:460392 ] - [ INFO ]   ########## 调用底层Elt接口 - createextenddatatx - 结束 ##########
2018-06-08 20:53:03  [ http-nio-80-exec-8:460402 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:03  [ http-nio-80-exec-8:460402 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e9ae829] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:03  [ http-nio-80-exec-8:460402 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:03  [ http-nio-80-exec-8:460403 ] - [ DEBUG ]  ==>  Preparing: update join_project set iscome = ? ,txid = ? where projectid = ? and blockaddr=? 
2018-06-08 20:53:03  [ http-nio-80-exec-8:460403 ] - [ DEBUG ]  ==> Parameters: 1(String), a4f733373fca638be135d775cb87a14a5ab107e959215eb0490f07810982908c(String), 718751285836(String), XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:53:03  [ http-nio-80-exec-8:460424 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:53:03  [ http-nio-80-exec-8:460425 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e9ae829]
2018-06-08 20:53:04  [ http-nio-80-exec-1:461263 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:04  [ http-nio-80-exec-1:461263 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:04  [ http-nio-80-exec-1:461263 ] - [ INFO ]  # url --->/join/getListProject
2018-06-08 20:53:04  [ http-nio-80-exec-1:461264 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:04  [ http-nio-80-exec-1:461264 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:04  [ http-nio-80-exec-1:461264 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7488e244] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:04  [ http-nio-80-exec-1:461265 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.875
2018-06-08 20:53:04  [ http-nio-80-exec-1:461284 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:04  [ http-nio-80-exec-1:461285 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM join_project j LEFT JOIN project p ON j.projectid = p.projectid WHERE j.blockaddr = ? 
2018-06-08 20:53:04  [ http-nio-80-exec-1:461286 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:53:04  [ http-nio-80-exec-1:461287 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:04  [ http-nio-80-exec-1:461288 ] - [ DEBUG ]  ==>  Preparing: select p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime, p.limitcount limitCount ,p.coin,p.limitorganizeflag limitOrganizeFlag, p.discript,p.status,j.iscome isCome from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? order by j.created LIMIT ? 
2018-06-08 20:53:04  [ http-nio-80-exec-1:461288 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), 10(Integer)
2018-06-08 20:53:04  [ http-nio-80-exec-1:461290 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:04  [ http-nio-80-exec-1:461290 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7488e244]
2018-06-08 20:53:31  [ http-nio-80-exec-7:488892 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:31  [ http-nio-80-exec-7:488892 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:31  [ http-nio-80-exec-7:488893 ] - [ INFO ]  # url --->/join/joinProjectPage
2018-06-08 20:53:31  [ http-nio-80-exec-7:488893 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:32  [ http-nio-80-exec-2:489094 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:32  [ http-nio-80-exec-2:489094 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:32  [ http-nio-80-exec-2:489094 ] - [ INFO ]  # url --->/join/getListProject
2018-06-08 20:53:32  [ http-nio-80-exec-2:489094 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:32  [ http-nio-80-exec-2:489094 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:32  [ http-nio-80-exec-2:489095 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d6fb879] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:32  [ http-nio-80-exec-2:489095 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8823529411764706
2018-06-08 20:53:32  [ http-nio-80-exec-2:489106 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:32  [ http-nio-80-exec-2:489106 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM join_project j LEFT JOIN project p ON j.projectid = p.projectid WHERE j.blockaddr = ? 
2018-06-08 20:53:32  [ http-nio-80-exec-2:489106 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:53:32  [ http-nio-80-exec-2:489107 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:32  [ http-nio-80-exec-2:489108 ] - [ DEBUG ]  ==>  Preparing: select p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime, p.limitcount limitCount ,p.coin,p.limitorganizeflag limitOrganizeFlag, p.discript,p.status,j.iscome isCome from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? order by j.created LIMIT ? 
2018-06-08 20:53:32  [ http-nio-80-exec-2:489108 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), 10(Integer)
2018-06-08 20:53:32  [ http-nio-80-exec-2:489109 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:32  [ http-nio-80-exec-2:489110 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d6fb879]
2018-06-08 20:53:35  [ http-nio-80-exec-9:492085 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:35  [ http-nio-80-exec-9:492085 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:35  [ http-nio-80-exec-9:492085 ] - [ INFO ]  # url --->/join/toSign
2018-06-08 20:53:35  [ http-nio-80-exec-9:492085 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:35  [ http-nio-80-exec-9:492086 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:35  [ http-nio-80-exec-9:492087 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@573e6a8d] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:35  [ http-nio-80-exec-9:492087 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:35  [ http-nio-80-exec-9:492087 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? 
2018-06-08 20:53:35  [ http-nio-80-exec-9:492088 ] - [ DEBUG ]  ==> Parameters: 718751285836(String)
2018-06-08 20:53:35  [ http-nio-80-exec-9:492089 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:35  [ http-nio-80-exec-9:492089 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@573e6a8d]
2018-06-08 20:53:35  [ http-nio-80-exec-9:492090 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:35  [ http-nio-80-exec-9:492090 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac37047] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:35  [ http-nio-80-exec-9:492090 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:35  [ http-nio-80-exec-9:492090 ] - [ DEBUG ]  ==>  Preparing: select count(0) from join_project where projectid = ? and blockaddr=? 
2018-06-08 20:53:35  [ http-nio-80-exec-9:492091 ] - [ DEBUG ]  ==> Parameters: 718751285836(String), XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:53:35  [ http-nio-80-exec-9:492091 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:35  [ http-nio-80-exec-9:492092 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac37047]
2018-06-08 20:53:35  [ http-nio-80-exec-9:492092 ] - [ INFO ]   ########## 调用底层Elt接口 - createextenddatatx - 开始 ##########
2018-06-08 20:53:35  [ http-nio-80-exec-9:492092 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-08 20:53:35  [ http-nio-80-exec-9:492092 ] - [ INFO ]   # method :createextenddatatx
2018-06-08 20:53:35  [ http-nio-80-exec-9:492093 ] - [ INFO ]   # Params :[1,"Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","8cd1b963f18ab3fd366601e02667f49e8a812d1d7a5a07ba254fad07edd0bda6",1000,"7B22626C6F636B41646472223A2258634575597062446E4866374E5A46734A365A6D77576D655164557368594B517957222C2270726F6A6563744964223A22373138373531323835383336227D"]
2018-06-08 20:53:35  [ http-nio-80-exec-9:492093 ] - [ INFO ]   # Body   :{"method":"createextenddatatx","params":[1,"Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","8cd1b963f18ab3fd366601e02667f49e8a812d1d7a5a07ba254fad07edd0bda6",1000,"7B22626C6F636B41646472223A2258634575597062446E4866374E5A46734A365A6D77576D655164557368594B517957222C2270726F6A6563744964223A22373138373531323835383336227D"]}
2018-06-08 20:53:35  [ http-nio-80-exec-9:492113 ] - [ INFO ]   # Response :{"result":{"txId":"92913e7149567a17d4ae87db5db6ceeb20e9ce85e461106413bb5dd4a7aa8f9d"},"error":null,"id":null}
2018-06-08 20:53:35  [ http-nio-80-exec-9:492113 ] - [ INFO ]   # use time :21
2018-06-08 20:53:35  [ http-nio-80-exec-9:492113 ] - [ INFO ]   ########## 调用底层Elt接口 - createextenddatatx - 结束 ##########
2018-06-08 20:53:35  [ http-nio-80-exec-9:492113 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:35  [ http-nio-80-exec-9:492114 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@340dc9ce] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:35  [ http-nio-80-exec-9:492115 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:35  [ http-nio-80-exec-9:492116 ] - [ DEBUG ]  ==>  Preparing: update join_project set iscome = ? ,txid = ? where projectid = ? and blockaddr=? 
2018-06-08 20:53:35  [ http-nio-80-exec-9:492118 ] - [ DEBUG ]  ==> Parameters: 1(String), 92913e7149567a17d4ae87db5db6ceeb20e9ce85e461106413bb5dd4a7aa8f9d(String), 718751285836(String), XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:53:35  [ http-nio-80-exec-9:492141 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:53:35  [ http-nio-80-exec-9:492141 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@340dc9ce]
2018-06-08 20:53:36  [ http-nio-80-exec-10:493038 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:36  [ http-nio-80-exec-10:493039 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:36  [ http-nio-80-exec-10:493039 ] - [ INFO ]  # url --->/join/getListProject
2018-06-08 20:53:36  [ http-nio-80-exec-10:493039 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:36  [ http-nio-80-exec-10:493039 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:53:36  [ http-nio-80-exec-10:493040 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e48677] was not registered for synchronization because synchronization is not active
2018-06-08 20:53:36  [ http-nio-80-exec-10:493040 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8888888888888888
2018-06-08 20:53:36  [ http-nio-80-exec-10:493057 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:53:36  [ http-nio-80-exec-10:493057 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM join_project j LEFT JOIN project p ON j.projectid = p.projectid WHERE j.blockaddr = ? 
2018-06-08 20:53:36  [ http-nio-80-exec-10:493057 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:53:36  [ http-nio-80-exec-10:493058 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:36  [ http-nio-80-exec-10:493059 ] - [ DEBUG ]  ==>  Preparing: select p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime, p.limitcount limitCount ,p.coin,p.limitorganizeflag limitOrganizeFlag, p.discript,p.status,j.iscome isCome from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? order by j.created LIMIT ? 
2018-06-08 20:53:36  [ http-nio-80-exec-10:493060 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), 10(Integer)
2018-06-08 20:53:36  [ http-nio-80-exec-10:493061 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:53:36  [ http-nio-80-exec-10:493062 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e48677]
2018-06-08 20:53:54  [ http-nio-80-exec-7:511040 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:54  [ http-nio-80-exec-7:511041 ] - [ INFO ]  # user --->com.bankledger.entity.User@33d7f83b
2018-06-08 20:53:54  [ http-nio-80-exec-7:511041 ] - [ INFO ]  # url --->/loginOut
2018-06-08 20:53:54  [ http-nio-80-exec-7:511041 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:53:54  [ http-nio-80-exec-4:511050 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:53:54  [ http-nio-80-exec-4:511050 ] - [ INFO ]  # user --->null
2018-06-08 20:53:54  [ http-nio-80-exec-4:511050 ] - [ INFO ]  # url --->/login
2018-06-08 20:53:54  [ http-nio-80-exec-4:511051 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:54:05  [ http-nio-80-exec-5:522185 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:54:05  [ http-nio-80-exec-5:522186 ] - [ INFO ]  # user --->null
2018-06-08 20:54:05  [ http-nio-80-exec-5:522186 ] - [ INFO ]  # url --->/login
2018-06-08 20:54:05  [ http-nio-80-exec-5:522186 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:54:05  [ http-nio-80-exec-5:522187 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:54:05  [ http-nio-80-exec-5:522187 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168db645] was not registered for synchronization because synchronization is not active
2018-06-08 20:54:05  [ http-nio-80-exec-5:522188 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:54:05  [ http-nio-80-exec-5:522188 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:54:05  [ http-nio-80-exec-5:522190 ] - [ DEBUG ]  ==> Parameters: 1(String), 111111(String), t123456(String)
2018-06-08 20:54:05  [ http-nio-80-exec-5:522192 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:54:05  [ http-nio-80-exec-5:522193 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168db645]
2018-06-08 20:54:05  [ http-nio-80-exec-2:522206 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:54:05  [ http-nio-80-exec-2:522207 ] - [ INFO ]  # user --->com.bankledger.entity.User@8ab38b
2018-06-08 20:54:05  [ http-nio-80-exec-2:522207 ] - [ INFO ]  # url --->/main
2018-06-08 20:54:05  [ http-nio-80-exec-2:522207 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:54:05  [ http-nio-80-exec-2:522207 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:54:05  [ http-nio-80-exec-2:522208 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4558bc75] was not registered for synchronization because synchronization is not active
2018-06-08 20:54:05  [ http-nio-80-exec-2:522209 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:54:05  [ http-nio-80-exec-2:522209 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 20:54:05  [ http-nio-80-exec-2:522210 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:54:05  [ http-nio-80-exec-2:522211 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:54:05  [ http-nio-80-exec-2:522212 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4558bc75]
2018-06-08 20:54:05  [ http-nio-80-exec-3:522413 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:54:05  [ http-nio-80-exec-3:522413 ] - [ INFO ]  # user --->com.bankledger.entity.User@8ab38b
2018-06-08 20:54:05  [ http-nio-80-exec-3:522413 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:54:05  [ http-nio-80-exec-3:522413 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:54:05  [ http-nio-80-exec-3:522417 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:54:05  [ http-nio-80-exec-3:522417 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f10985b] was not registered for synchronization because synchronization is not active
2018-06-08 20:54:05  [ http-nio-80-exec-3:522418 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8947368421052632
2018-06-08 20:54:05  [ http-nio-80-exec-3:522429 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:54:05  [ http-nio-80-exec-3:522430 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-08 20:54:05  [ http-nio-80-exec-3:522431 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:54:05  [ http-nio-80-exec-3:522432 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:54:05  [ http-nio-80-exec-3:522433 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-08 20:54:05  [ http-nio-80-exec-3:522434 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-08 20:54:05  [ http-nio-80-exec-3:522436 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:54:05  [ http-nio-80-exec-3:522436 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f10985b]
2018-06-08 20:54:06  [ http-nio-80-exec-9:523651 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:54:06  [ http-nio-80-exec-9:523651 ] - [ INFO ]  # user --->com.bankledger.entity.User@8ab38b
2018-06-08 20:54:06  [ http-nio-80-exec-9:523651 ] - [ INFO ]  # url --->/project/publish
2018-06-08 20:54:06  [ http-nio-80-exec-9:523652 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:54:08  [ http-nio-80-exec-8:525012 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:54:08  [ http-nio-80-exec-8:525013 ] - [ INFO ]  # user --->com.bankledger.entity.User@8ab38b
2018-06-08 20:54:08  [ http-nio-80-exec-8:525013 ] - [ INFO ]  # url --->/project/projectPage
2018-06-08 20:54:08  [ http-nio-80-exec-8:525015 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:54:08  [ http-nio-80-exec-1:525211 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:54:08  [ http-nio-80-exec-1:525211 ] - [ INFO ]  # user --->com.bankledger.entity.User@8ab38b
2018-06-08 20:54:08  [ http-nio-80-exec-1:525211 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:54:08  [ http-nio-80-exec-1:525212 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:54:08  [ http-nio-80-exec-1:525214 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:54:08  [ http-nio-80-exec-1:525214 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f2506d3] was not registered for synchronization because synchronization is not active
2018-06-08 20:54:08  [ http-nio-80-exec-1:525215 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.9
2018-06-08 20:54:08  [ http-nio-80-exec-1:525226 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will not be managed by Spring
2018-06-08 20:54:08  [ http-nio-80-exec-1:525226 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-08 20:54:08  [ http-nio-80-exec-1:525227 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:54:08  [ http-nio-80-exec-1:525228 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:54:08  [ http-nio-80-exec-1:525229 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-08 20:54:08  [ http-nio-80-exec-1:525230 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-08 20:54:08  [ http-nio-80-exec-1:525231 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:54:08  [ http-nio-80-exec-1:525232 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f2506d3]
2018-06-08 20:54:13  [ http-nio-80-exec-2:530713 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:54:13  [ http-nio-80-exec-2:530713 ] - [ INFO ]  # user --->com.bankledger.entity.User@8ab38b
2018-06-08 20:54:13  [ http-nio-80-exec-2:530713 ] - [ INFO ]  # url --->/project/offProject
2018-06-08 20:54:13  [ http-nio-80-exec-2:530713 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:54:13  [ http-nio-80-exec-2:530749 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:54:13  [ http-nio-80-exec-2:530750 ] - [ DEBUG ]  Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25c40f8a]
2018-06-08 20:54:13  [ http-nio-80-exec-2:530752 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@1febb47b] will be managed by Spring
2018-06-08 20:54:13  [ http-nio-80-exec-2:530752 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? and blockaddr = ? 
2018-06-08 20:54:13  [ http-nio-80-exec-2:530753 ] - [ DEBUG ]  ==> Parameters: 718751285836(String), 111111(String)
2018-06-08 20:54:13  [ http-nio-80-exec-2:530755 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:54:13  [ http-nio-80-exec-2:530755 ] - [ DEBUG ]  Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25c40f8a]
2018-06-08 20:54:13  [ http-nio-80-exec-2:530755 ] - [ DEBUG ]  Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25c40f8a] from current transaction
2018-06-08 20:54:13  [ http-nio-80-exec-2:530755 ] - [ DEBUG ]  ==>  Preparing: update project set status = ? where projectid = ? and blockaddr = ? 
2018-06-08 20:54:13  [ http-nio-80-exec-2:530756 ] - [ DEBUG ]  ==> Parameters: 3(String), 718751285836(String), 111111(String)
2018-06-08 20:54:13  [ http-nio-80-exec-2:530758 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:54:13  [ http-nio-80-exec-2:530758 ] - [ DEBUG ]  Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25c40f8a]
2018-06-08 20:54:13  [ http-nio-80-exec-2:530758 ] - [ DEBUG ]  Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25c40f8a] from current transaction
2018-06-08 20:54:13  [ http-nio-80-exec-2:530759 ] - [ DEBUG ]  ==>  Preparing: select u.blockaddr blockAddr, u.idcard idCard, j.iscome isCome from join_project j left join user u on j.blockaddr = u.blockaddr where j.projectid = ? 
2018-06-08 20:54:13  [ http-nio-80-exec-2:530759 ] - [ DEBUG ]  ==> Parameters: 718751285836(String)
2018-06-08 20:54:13  [ http-nio-80-exec-2:530760 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:54:13  [ http-nio-80-exec-2:530761 ] - [ DEBUG ]  Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25c40f8a]
2018-06-08 20:54:13  [ http-nio-80-exec-2:530761 ] - [ INFO ]   ########## 调用底层Elt接口 - sendtoaddress - 开始 ##########
2018-06-08 20:54:13  [ http-nio-80-exec-2:530761 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-08 20:54:13  [ http-nio-80-exec-2:530762 ] - [ INFO ]   # method :sendtoaddress
2018-06-08 20:54:13  [ http-nio-80-exec-2:530762 ] - [ INFO ]   # Params :["Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","10"]
2018-06-08 20:54:13  [ http-nio-80-exec-2:530762 ] - [ INFO ]   # Body   :{"method":"sendtoaddress","params":["Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","10"]}
2018-06-08 20:54:13  [ http-nio-80-exec-2:530813 ] - [ INFO ]   # Response :{"result":"75c8dc657e989ff5bb6294985112dd27e124b1c7c972bddcb3003f09000dd043","error":null,"id":null}
2018-06-08 20:54:13  [ http-nio-80-exec-2:530814 ] - [ INFO ]   # use time :53
2018-06-08 20:54:13  [ http-nio-80-exec-2:530814 ] - [ INFO ]   ########## 调用底层Elt接口 - sendtoaddress - 结束 ##########
2018-06-08 20:54:13  [ http-nio-80-exec-2:530815 ] - [ DEBUG ]  Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25c40f8a]
2018-06-08 20:54:13  [ http-nio-80-exec-2:530815 ] - [ DEBUG ]  Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25c40f8a]
2018-06-08 20:54:13  [ http-nio-80-exec-2:530854 ] - [ ERROR ]  ################# Exception ##################
2018-06-08 20:54:13  [ http-nio-80-exec-2:530854 ] - [ ERROR ]  ### RequestUrI: /project/offProject 
2018-06-08 20:54:13  [ http-nio-80-exec-2:530854 ] - [ ERROR ]  ### RequestParam: {projectId=718751285836} 
2018-06-08 20:54:13  [ http-nio-80-exec-2:530855 ] - [ ERROR ]  ### exception: java.lang.String cannot be cast to com.alibaba.fastjson.JSONObject
java.lang.ClassCastException: java.lang.String cannot be cast to com.alibaba.fastjson.JSONObject
	at com.bankledger.service.impl.ProjectServiceImpl.offProject(ProjectServiceImpl.java:140)
	at com.bankledger.service.impl.ProjectServiceImpl$$FastClassBySpringCGLIB$$7e16d355.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bankledger.service.impl.ProjectServiceImpl$$EnhancerBySpringCGLIB$$e718b97c.offProject(<generated>)
	at com.bankledger.controller.back.ProjectController.offProject(ProjectController.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-06-08 20:55:22  [ Thread-6:599766 ] - [ INFO ]  {dataSource-1} closed
2018-06-08 20:55:23  [ restartedMain:600063 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 232 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:55:23  [ restartedMain:600064 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:55:23  [ restartedMain:600064 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:55:23  [ restartedMain:600792 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:55:23  [ restartedMain:600793 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:55:23  [ restartedMain:600800 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:55:23  [ restartedMain:600801 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:55:23  [ restartedMain:600801 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:55:23  [ restartedMain:600801 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:55:23  [ restartedMain:600804 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:55:23  [ restartedMain:600804 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:55:23  [ restartedMain:600804 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:55:23  [ restartedMain:600804 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:55:23  [ restartedMain:600804 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:55:23  [ restartedMain:600804 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:55:23  [ restartedMain:600804 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:55:23  [ restartedMain:600805 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:55:23  [ restartedMain:600908 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:55:23  [ restartedMain:600910 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:55:23  [ restartedMain:600910 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:55:23  [ restartedMain:600911 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:55:23  [ restartedMain:600911 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:55:23  [ restartedMain:600911 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:55:23  [ restartedMain:600912 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:55:23  [ restartedMain:600913 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:55:23  [ restartedMain:600914 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:55:23  [ restartedMain:600914 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:55:23  [ restartedMain:600915 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:55:23  [ restartedMain:600921 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:55:23  [ restartedMain:600922 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:55:23  [ restartedMain:600923 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:55:23  [ restartedMain:600924 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:55:23  [ restartedMain:600924 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:55:24  [ restartedMain:601492 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:55:24  [ restartedMain:601684 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:55:24  [ restartedMain:601684 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:55:24  [ restartedMain:601685 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:55:24  [ restartedMain:601685 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:55:24  [ restartedMain:601686 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:55:24  [ restartedMain:601686 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:55:24  [ restartedMain:601686 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:55:24  [ restartedMain:601686 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:55:24  [ restartedMain:601687 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:55:24  [ restartedMain:601687 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:55:24  [ restartedMain:601687 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:55:24  [ restartedMain:601692 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:55:24  [ restartedMain:601694 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:55:24  [ restartedMain:601695 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:55:24  [ restartedMain:601695 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:55:24  [ restartedMain:601695 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:55:25  [ restartedMain:602081 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:55:25  [ restartedMain:602153 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:55:25  [ restartedMain:602725 ] - [ INFO ]  Started App in 2.711 seconds (JVM running for 603.504)
2018-06-08 20:55:29  [ restartedMain:606720 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 232 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:55:29  [ restartedMain:606720 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:55:29  [ restartedMain:606720 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:55:30  [ restartedMain:607247 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:55:30  [ restartedMain:607248 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:55:30  [ restartedMain:607255 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:55:30  [ restartedMain:607255 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:55:30  [ restartedMain:607255 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:55:30  [ restartedMain:607256 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:55:30  [ restartedMain:607258 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:55:30  [ restartedMain:607259 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:55:30  [ restartedMain:607259 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:55:30  [ restartedMain:607259 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:55:30  [ restartedMain:607259 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:55:30  [ restartedMain:607259 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:55:30  [ restartedMain:607259 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:55:30  [ restartedMain:607259 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:55:30  [ restartedMain:607365 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:55:30  [ restartedMain:607395 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:55:30  [ restartedMain:607398 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:55:30  [ restartedMain:607399 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:55:30  [ restartedMain:607400 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:55:30  [ restartedMain:607401 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:55:30  [ restartedMain:607402 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:55:30  [ restartedMain:607403 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:55:30  [ restartedMain:607404 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:55:30  [ restartedMain:607405 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:55:30  [ restartedMain:607405 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:55:30  [ restartedMain:607412 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:55:30  [ restartedMain:607412 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:55:30  [ restartedMain:607414 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:55:30  [ restartedMain:607415 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:55:30  [ restartedMain:607415 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:55:30  [ restartedMain:607855 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:55:31  [ restartedMain:608061 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:55:31  [ restartedMain:608061 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:55:31  [ restartedMain:608062 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:55:31  [ restartedMain:608063 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:55:31  [ restartedMain:608063 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:55:31  [ restartedMain:608063 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:55:31  [ restartedMain:608064 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:55:31  [ restartedMain:608064 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:55:31  [ restartedMain:608064 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:55:31  [ restartedMain:608065 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:55:31  [ restartedMain:608065 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:55:31  [ restartedMain:608072 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:55:31  [ restartedMain:608072 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:55:31  [ restartedMain:608072 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:55:31  [ restartedMain:608073 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:55:31  [ restartedMain:608073 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:55:31  [ restartedMain:608428 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:55:31  [ restartedMain:608474 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:55:31  [ restartedMain:608956 ] - [ INFO ]  Started App in 2.279 seconds (JVM running for 609.735)
2018-06-08 20:55:38  [ http-nio-80-exec-1:615336 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:55:38  [ http-nio-80-exec-1:615336 ] - [ INFO ]  # user --->null
2018-06-08 20:55:38  [ http-nio-80-exec-1:615336 ] - [ INFO ]  # url --->/loginOut
2018-06-08 20:55:38  [ http-nio-80-exec-1:615337 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:55:38  [ http-nio-80-exec-1:615340 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:55:38  [ http-nio-80-exec-1:615341 ] - [ INFO ]  # user --->null
2018-06-08 20:55:38  [ http-nio-80-exec-1:615341 ] - [ INFO ]  # url --->/login
2018-06-08 20:55:38  [ http-nio-80-exec-1:615341 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:55:38  [ http-nio-80-exec-1:615352 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 20:55:38  [ http-nio-80-exec-1:615379 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@9dffb2
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@685e0e1a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@69fbe1b2
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-08 20:55:38  [ http-nio-80-exec-1:615405 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-08 20:55:43  [ http-nio-80-exec-5:620449 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:55:43  [ http-nio-80-exec-5:620450 ] - [ INFO ]  # user --->null
2018-06-08 20:55:43  [ http-nio-80-exec-5:620451 ] - [ INFO ]  # url --->/login
2018-06-08 20:55:43  [ http-nio-80-exec-5:620451 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:55:43  [ http-nio-80-exec-5:620459 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:55:43  [ http-nio-80-exec-5:620459 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79c4de2d] was not registered for synchronization because synchronization is not active
2018-06-08 20:55:43  [ http-nio-80-exec-5:620462 ] - [ INFO ]  {dataSource-2} inited
2018-06-08 20:55:43  [ http-nio-80-exec-5:620480 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:55:43  [ http-nio-80-exec-5:620481 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:55:43  [ http-nio-80-exec-5:620483 ] - [ DEBUG ]  ==> Parameters: 1(String), 111111(String), t123456(String)
2018-06-08 20:55:43  [ http-nio-80-exec-5:620486 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:55:43  [ http-nio-80-exec-5:620486 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79c4de2d]
2018-06-08 20:55:43  [ http-nio-80-exec-3:620501 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:55:43  [ http-nio-80-exec-3:620501 ] - [ INFO ]  # user --->com.bankledger.entity.User@69e96246
2018-06-08 20:55:43  [ http-nio-80-exec-3:620501 ] - [ INFO ]  # url --->/main
2018-06-08 20:55:43  [ http-nio-80-exec-3:620502 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:55:43  [ http-nio-80-exec-3:620502 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:55:43  [ http-nio-80-exec-3:620503 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cebe11f] was not registered for synchronization because synchronization is not active
2018-06-08 20:55:43  [ http-nio-80-exec-3:620503 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:55:43  [ http-nio-80-exec-3:620504 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 20:55:43  [ http-nio-80-exec-3:620505 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:55:43  [ http-nio-80-exec-3:620507 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:55:43  [ http-nio-80-exec-3:620508 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cebe11f]
2018-06-08 20:55:43  [ http-nio-80-exec-1:620733 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:55:43  [ http-nio-80-exec-1:620733 ] - [ INFO ]  # user --->com.bankledger.entity.User@69e96246
2018-06-08 20:55:43  [ http-nio-80-exec-1:620733 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:55:43  [ http-nio-80-exec-1:620733 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:55:43  [ http-nio-80-exec-1:620738 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:55:43  [ http-nio-80-exec-1:620739 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e5d2a08] was not registered for synchronization because synchronization is not active
2018-06-08 20:55:43  [ http-nio-80-exec-1:620740 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-08 20:55:43  [ http-nio-80-exec-1:620753 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:55:43  [ http-nio-80-exec-1:620753 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-08 20:55:43  [ http-nio-80-exec-1:620754 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:55:43  [ http-nio-80-exec-1:620755 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:55:43  [ http-nio-80-exec-1:620756 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-08 20:55:43  [ http-nio-80-exec-1:620756 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-08 20:55:43  [ http-nio-80-exec-1:620758 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:55:43  [ http-nio-80-exec-1:620758 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e5d2a08]
2018-06-08 20:55:44  [ http-nio-80-exec-4:621531 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:55:44  [ http-nio-80-exec-4:621532 ] - [ INFO ]  # user --->com.bankledger.entity.User@69e96246
2018-06-08 20:55:44  [ http-nio-80-exec-4:621532 ] - [ INFO ]  # url --->/project/projectPage
2018-06-08 20:55:44  [ http-nio-80-exec-4:621532 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:55:44  [ http-nio-80-exec-2:621710 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:55:44  [ http-nio-80-exec-2:621710 ] - [ INFO ]  # user --->com.bankledger.entity.User@69e96246
2018-06-08 20:55:44  [ http-nio-80-exec-2:621710 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:55:44  [ http-nio-80-exec-2:621711 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:55:44  [ http-nio-80-exec-2:621712 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:55:44  [ http-nio-80-exec-2:621713 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e887f5a] was not registered for synchronization because synchronization is not active
2018-06-08 20:55:44  [ http-nio-80-exec-2:621714 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.5
2018-06-08 20:55:44  [ http-nio-80-exec-2:621724 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:55:44  [ http-nio-80-exec-2:621725 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-08 20:55:44  [ http-nio-80-exec-2:621725 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:55:44  [ http-nio-80-exec-2:621726 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:55:44  [ http-nio-80-exec-2:621727 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-08 20:55:44  [ http-nio-80-exec-2:621727 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-08 20:55:44  [ http-nio-80-exec-2:621728 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:55:44  [ http-nio-80-exec-2:621729 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e887f5a]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625609 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:55:48  [ http-nio-80-exec-5:625610 ] - [ INFO ]  # user --->com.bankledger.entity.User@69e96246
2018-06-08 20:55:48  [ http-nio-80-exec-5:625610 ] - [ INFO ]  # url --->/project/offProject
2018-06-08 20:55:48  [ http-nio-80-exec-5:625610 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:55:48  [ http-nio-80-exec-5:625623 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:55:48  [ http-nio-80-exec-5:625624 ] - [ DEBUG ]  Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625624 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will be managed by Spring
2018-06-08 20:55:48  [ http-nio-80-exec-5:625624 ] - [ DEBUG ]  ==>  Preparing: select projectid projectId,projecttype projectType,projectname projectName,address,organize,starttime startTime,endtime endTime,limitcount limitCount,coin,limitorganizeflag limitOrganizeFlag,discript,status,created from project where projectid = ? and blockaddr = ? 
2018-06-08 20:55:48  [ http-nio-80-exec-5:625624 ] - [ DEBUG ]  ==> Parameters: 718751285836(String), 111111(String)
2018-06-08 20:55:48  [ http-nio-80-exec-5:625626 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:55:48  [ http-nio-80-exec-5:625626 ] - [ DEBUG ]  Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625626 ] - [ DEBUG ]  Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052] from current transaction
2018-06-08 20:55:48  [ http-nio-80-exec-5:625627 ] - [ DEBUG ]  ==>  Preparing: update project set status = ? where projectid = ? and blockaddr = ? 
2018-06-08 20:55:48  [ http-nio-80-exec-5:625627 ] - [ DEBUG ]  ==> Parameters: 3(String), 718751285836(String), 111111(String)
2018-06-08 20:55:48  [ http-nio-80-exec-5:625628 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:55:48  [ http-nio-80-exec-5:625629 ] - [ DEBUG ]  Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625629 ] - [ DEBUG ]  Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052] from current transaction
2018-06-08 20:55:48  [ http-nio-80-exec-5:625629 ] - [ DEBUG ]  ==>  Preparing: select u.blockaddr blockAddr, u.idcard idCard, j.iscome isCome from join_project j left join user u on j.blockaddr = u.blockaddr where j.projectid = ? 
2018-06-08 20:55:48  [ http-nio-80-exec-5:625630 ] - [ DEBUG ]  ==> Parameters: 718751285836(String)
2018-06-08 20:55:48  [ http-nio-80-exec-5:625635 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:55:48  [ http-nio-80-exec-5:625636 ] - [ DEBUG ]  Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625637 ] - [ INFO ]   ########## 调用底层Elt接口 - sendtoaddress - 开始 ##########
2018-06-08 20:55:48  [ http-nio-80-exec-5:625638 ] - [ INFO ]   # Host :http://10.0.0.249:2254
2018-06-08 20:55:48  [ http-nio-80-exec-5:625638 ] - [ INFO ]   # method :sendtoaddress
2018-06-08 20:55:48  [ http-nio-80-exec-5:625639 ] - [ INFO ]   # Params :["Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","10"]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625639 ] - [ INFO ]   # Body   :{"method":"sendtoaddress","params":["Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY","10"]}
2018-06-08 20:55:48  [ http-nio-80-exec-5:625671 ] - [ INFO ]   # Response :{"result":"af32c1a99659e357329264cfc95328bd5ccdaaff0dc4b14ae98c3ce7222faf6e","error":null,"id":null}
2018-06-08 20:55:48  [ http-nio-80-exec-5:625671 ] - [ INFO ]   # use time :34
2018-06-08 20:55:48  [ http-nio-80-exec-5:625672 ] - [ INFO ]   ########## 调用底层Elt接口 - sendtoaddress - 结束 ##########
2018-06-08 20:55:48  [ http-nio-80-exec-5:625672 ] - [ DEBUG ]  Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052] from current transaction
2018-06-08 20:55:48  [ http-nio-80-exec-5:625672 ] - [ DEBUG ]  ==>  Preparing: insert into coin_record(blockaddr_from, blockaddr_to,coinnum,projectid,projectname,organize,address,created,txid) values (?,?,?,?,?,?,?,?,?) 
2018-06-08 20:55:48  [ http-nio-80-exec-5:625673 ] - [ DEBUG ]  ==> Parameters: 000000(String), XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), 10(String), 718751285836(String), 活动1(String), 深圳 南山区 南山区义工联(String), G20(String), 2018-06-08 20:55:48(String), af32c1a99659e357329264cfc95328bd5ccdaaff0dc4b14ae98c3ce7222faf6e(String)
2018-06-08 20:55:48  [ http-nio-80-exec-5:625676 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:55:48  [ http-nio-80-exec-5:625676 ] - [ DEBUG ]  Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625677 ] - [ DEBUG ]  Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052] from current transaction
2018-06-08 20:55:48  [ http-nio-80-exec-5:625677 ] - [ DEBUG ]  ==>  Preparing: update user set coincount = coincount + ? where blockaddr = ? 
2018-06-08 20:55:48  [ http-nio-80-exec-5:625677 ] - [ DEBUG ]  ==> Parameters: 10(String), XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:55:48  [ http-nio-80-exec-5:625697 ] - [ DEBUG ]  <==    Updates: 1
2018-06-08 20:55:48  [ http-nio-80-exec-5:625698 ] - [ DEBUG ]  Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625698 ] - [ DEBUG ]  Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052] from current transaction
2018-06-08 20:55:48  [ http-nio-80-exec-5:625699 ] - [ DEBUG ]  ==>  Preparing: update user set coincount = coincount - ? where blockaddr = ? 
2018-06-08 20:55:48  [ http-nio-80-exec-5:625700 ] - [ DEBUG ]  ==> Parameters: 10(String), 000000(String)
2018-06-08 20:55:48  [ http-nio-80-exec-5:625706 ] - [ DEBUG ]  <==    Updates: 0
2018-06-08 20:55:48  [ http-nio-80-exec-5:625706 ] - [ DEBUG ]  Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625707 ] - [ DEBUG ]  Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625707 ] - [ DEBUG ]  Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052]
2018-06-08 20:55:48  [ http-nio-80-exec-5:625707 ] - [ DEBUG ]  Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf64052]
2018-06-08 20:56:01  [ http-nio-80-exec-3:638232 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:01  [ http-nio-80-exec-3:638233 ] - [ INFO ]  # user --->com.bankledger.entity.User@69e96246
2018-06-08 20:56:01  [ http-nio-80-exec-3:638233 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:56:01  [ http-nio-80-exec-3:638233 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:01  [ http-nio-80-exec-3:638233 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:01  [ http-nio-80-exec-3:638234 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bb39aa8] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:01  [ http-nio-80-exec-3:638234 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2018-06-08 20:56:01  [ http-nio-80-exec-3:638252 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:01  [ http-nio-80-exec-3:638253 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-08 20:56:01  [ http-nio-80-exec-3:638253 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 20:56:01  [ http-nio-80-exec-3:638254 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:01  [ http-nio-80-exec-3:638255 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-08 20:56:01  [ http-nio-80-exec-3:638256 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-08 20:56:01  [ http-nio-80-exec-3:638257 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:01  [ http-nio-80-exec-3:638257 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bb39aa8]
2018-06-08 20:56:04  [ http-nio-80-exec-7:641344 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:04  [ http-nio-80-exec-7:641344 ] - [ INFO ]  # user --->com.bankledger.entity.User@69e96246
2018-06-08 20:56:04  [ http-nio-80-exec-7:641344 ] - [ INFO ]  # url --->/loginOut
2018-06-08 20:56:04  [ http-nio-80-exec-7:641344 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:04  [ http-nio-80-exec-8:641366 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:04  [ http-nio-80-exec-8:641367 ] - [ INFO ]  # user --->null
2018-06-08 20:56:04  [ http-nio-80-exec-8:641367 ] - [ INFO ]  # url --->/login
2018-06-08 20:56:04  [ http-nio-80-exec-8:641367 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:11  [ http-nio-80-exec-9:648778 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:11  [ http-nio-80-exec-9:648778 ] - [ INFO ]  # user --->null
2018-06-08 20:56:11  [ http-nio-80-exec-9:648778 ] - [ INFO ]  # url --->/login
2018-06-08 20:56:11  [ http-nio-80-exec-9:648778 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:12  [ http-nio-80-exec-10:649557 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:12  [ http-nio-80-exec-10:649557 ] - [ INFO ]  # user --->null
2018-06-08 20:56:12  [ http-nio-80-exec-10:649557 ] - [ INFO ]  # url --->/login
2018-06-08 20:56:12  [ http-nio-80-exec-10:649557 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:12  [ http-nio-80-exec-10:649558 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:12  [ http-nio-80-exec-10:649558 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a2cd0f2] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:12  [ http-nio-80-exec-10:649559 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:12  [ http-nio-80-exec-10:649559 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:56:12  [ http-nio-80-exec-10:649560 ] - [ DEBUG ]  ==> Parameters: 0(String), 000000(String), t123456(String)
2018-06-08 20:56:12  [ http-nio-80-exec-10:649563 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:12  [ http-nio-80-exec-10:649563 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a2cd0f2]
2018-06-08 20:56:12  [ http-nio-80-exec-1:649578 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:12  [ http-nio-80-exec-1:649579 ] - [ INFO ]  # user --->com.bankledger.entity.User@4f082126
2018-06-08 20:56:12  [ http-nio-80-exec-1:649579 ] - [ INFO ]  # url --->/main
2018-06-08 20:56:12  [ http-nio-80-exec-1:649580 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:12  [ http-nio-80-exec-1:649582 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:12  [ http-nio-80-exec-1:649583 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bb96ff] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:12  [ http-nio-80-exec-1:649584 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:12  [ http-nio-80-exec-1:649584 ] - [ DEBUG ]  ==>  Preparing: select count(0) from project where status= '1' 
2018-06-08 20:56:12  [ http-nio-80-exec-1:649585 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:56:12  [ http-nio-80-exec-1:649588 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:12  [ http-nio-80-exec-1:649588 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bb96ff]
2018-06-08 20:56:12  [ http-nio-80-exec-4:649862 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:12  [ http-nio-80-exec-4:649863 ] - [ INFO ]  # user --->com.bankledger.entity.User@4f082126
2018-06-08 20:56:12  [ http-nio-80-exec-4:649863 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:56:12  [ http-nio-80-exec-4:649863 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:12  [ http-nio-80-exec-4:649865 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:12  [ http-nio-80-exec-4:649865 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@497a6955] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:12  [ http-nio-80-exec-4:649866 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.75
2018-06-08 20:56:12  [ http-nio-80-exec-4:649875 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:12  [ http-nio-80-exec-4:649875 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:56:12  [ http-nio-80-exec-4:649876 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:56:12  [ http-nio-80-exec-4:649877 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:12  [ http-nio-80-exec-4:649878 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:56:12  [ http-nio-80-exec-4:649878 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:56:12  [ http-nio-80-exec-4:649880 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:12  [ http-nio-80-exec-4:649881 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@497a6955]
2018-06-08 20:56:13  [ http-nio-80-exec-2:650565 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:13  [ http-nio-80-exec-2:650565 ] - [ INFO ]  # user --->com.bankledger.entity.User@4f082126
2018-06-08 20:56:13  [ http-nio-80-exec-2:650566 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-08 20:56:13  [ http-nio-80-exec-2:650566 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:13  [ http-nio-80-exec-5:650817 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:13  [ http-nio-80-exec-5:650817 ] - [ INFO ]  # user --->com.bankledger.entity.User@4f082126
2018-06-08 20:56:13  [ http-nio-80-exec-5:650817 ] - [ INFO ]  # url --->/coin/getList
2018-06-08 20:56:13  [ http-nio-80-exec-5:650817 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:13  [ http-nio-80-exec-5:650824 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:13  [ http-nio-80-exec-5:650824 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@481846f0] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:13  [ http-nio-80-exec-5:650827 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6
2018-06-08 20:56:13  [ http-nio-80-exec-5:650828 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:13  [ http-nio-80-exec-5:650829 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM coin_record WHERE 1 = 1 AND blockaddr_from = ? 
2018-06-08 20:56:13  [ http-nio-80-exec-5:650829 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String)
2018-06-08 20:56:13  [ http-nio-80-exec-5:650830 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:13  [ http-nio-80-exec-5:650831 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@481846f0]
2018-06-08 20:56:17  [ http-nio-80-exec-3:654272 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:17  [ http-nio-80-exec-3:654272 ] - [ INFO ]  # user --->com.bankledger.entity.User@4f082126
2018-06-08 20:56:17  [ http-nio-80-exec-3:654273 ] - [ INFO ]  # url --->/loginOut
2018-06-08 20:56:17  [ http-nio-80-exec-3:654273 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:17  [ http-nio-80-exec-7:654279 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:17  [ http-nio-80-exec-7:654280 ] - [ INFO ]  # user --->null
2018-06-08 20:56:17  [ http-nio-80-exec-7:654280 ] - [ INFO ]  # url --->/login
2018-06-08 20:56:17  [ http-nio-80-exec-7:654281 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:21  [ http-nio-80-exec-8:658662 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:21  [ http-nio-80-exec-8:658663 ] - [ INFO ]  # user --->null
2018-06-08 20:56:21  [ http-nio-80-exec-8:658663 ] - [ INFO ]  # url --->/login
2018-06-08 20:56:21  [ http-nio-80-exec-8:658663 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:21  [ http-nio-80-exec-8:658665 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:21  [ http-nio-80-exec-8:658665 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2321232c] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:21  [ http-nio-80-exec-8:658666 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:21  [ http-nio-80-exec-8:658666 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:56:21  [ http-nio-80-exec-8:658667 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 20:56:21  [ http-nio-80-exec-8:658670 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:21  [ http-nio-80-exec-8:658670 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2321232c]
2018-06-08 20:56:21  [ http-nio-80-exec-9:658679 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:21  [ http-nio-80-exec-9:658682 ] - [ INFO ]  # user --->com.bankledger.entity.User@40c7daf9
2018-06-08 20:56:21  [ http-nio-80-exec-9:658683 ] - [ INFO ]  # url --->/main
2018-06-08 20:56:21  [ http-nio-80-exec-9:658683 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:21  [ http-nio-80-exec-9:658683 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:21  [ http-nio-80-exec-9:658684 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f84639] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:21  [ http-nio-80-exec-9:658684 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:21  [ http-nio-80-exec-9:658685 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 20:56:21  [ http-nio-80-exec-9:658685 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:56:21  [ http-nio-80-exec-9:658686 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:21  [ http-nio-80-exec-9:658687 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44f84639]
2018-06-08 20:56:21  [ http-nio-80-exec-10:658902 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:21  [ http-nio-80-exec-10:658902 ] - [ INFO ]  # user --->com.bankledger.entity.User@40c7daf9
2018-06-08 20:56:21  [ http-nio-80-exec-10:658902 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:56:21  [ http-nio-80-exec-10:658902 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:21  [ http-nio-80-exec-10:658903 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:21  [ http-nio-80-exec-10:658903 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65d621fc] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:21  [ http-nio-80-exec-10:658904 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2018-06-08 20:56:21  [ http-nio-80-exec-10:658919 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:21  [ http-nio-80-exec-10:658919 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 20:56:21  [ http-nio-80-exec-10:658920 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 20:56:21  [ http-nio-80-exec-10:658921 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:21  [ http-nio-80-exec-10:658922 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65d621fc]
2018-06-08 20:56:23  [ http-nio-80-exec-1:660034 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:23  [ http-nio-80-exec-1:660035 ] - [ INFO ]  # user --->com.bankledger.entity.User@40c7daf9
2018-06-08 20:56:23  [ http-nio-80-exec-1:660035 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-08 20:56:23  [ http-nio-80-exec-1:660035 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:23  [ http-nio-80-exec-4:660205 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:23  [ http-nio-80-exec-4:660205 ] - [ INFO ]  # user --->com.bankledger.entity.User@40c7daf9
2018-06-08 20:56:23  [ http-nio-80-exec-4:660206 ] - [ INFO ]  # url --->/coin/getList
2018-06-08 20:56:23  [ http-nio-80-exec-4:660206 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:23  [ http-nio-80-exec-4:660206 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:23  [ http-nio-80-exec-4:660207 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51f89d1d] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:23  [ http-nio-80-exec-4:660207 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.7142857142857143
2018-06-08 20:56:23  [ http-nio-80-exec-4:660208 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:23  [ http-nio-80-exec-4:660208 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM coin_record WHERE 1 = 1 AND blockaddr_to = ? 
2018-06-08 20:56:23  [ http-nio-80-exec-4:660209 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 20:56:23  [ http-nio-80-exec-4:660211 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:23  [ http-nio-80-exec-4:660211 ] - [ DEBUG ]  ==>  Preparing: select blockaddr_from blockAddrFrom, blockaddr_to blockaddrTo, coinnum coinNum, projectid projectId,projectname projectName,organize, address,created from coin_record where 1=1 and blockaddr_to = ? LIMIT ? 
2018-06-08 20:56:23  [ http-nio-80-exec-4:660212 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), 10(Integer)
2018-06-08 20:56:23  [ http-nio-80-exec-4:660213 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:23  [ http-nio-80-exec-4:660213 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51f89d1d]
2018-06-08 20:56:36  [ http-nio-80-exec-2:673913 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:36  [ http-nio-80-exec-2:673913 ] - [ INFO ]  # user --->com.bankledger.entity.User@40c7daf9
2018-06-08 20:56:36  [ http-nio-80-exec-2:673914 ] - [ INFO ]  # url --->/loginOut
2018-06-08 20:56:36  [ http-nio-80-exec-2:673915 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:36  [ http-nio-80-exec-6:673929 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:36  [ http-nio-80-exec-6:673931 ] - [ INFO ]  # user --->null
2018-06-08 20:56:36  [ http-nio-80-exec-6:673932 ] - [ INFO ]  # url --->/login
2018-06-08 20:56:36  [ http-nio-80-exec-6:673933 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:37  [ http-nio-80-exec-5:674987 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:37  [ http-nio-80-exec-5:674987 ] - [ INFO ]  # user --->null
2018-06-08 20:56:37  [ http-nio-80-exec-5:674987 ] - [ INFO ]  # url --->/login
2018-06-08 20:56:37  [ http-nio-80-exec-5:674987 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:37  [ http-nio-80-exec-5:674988 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:37  [ http-nio-80-exec-5:674988 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b9917b] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:37  [ http-nio-80-exec-5:674989 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:37  [ http-nio-80-exec-5:674989 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:56:37  [ http-nio-80-exec-5:674989 ] - [ DEBUG ]  ==> Parameters: 0(String), 000000(String), t123456(String)
2018-06-08 20:56:37  [ http-nio-80-exec-5:674992 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:37  [ http-nio-80-exec-5:674993 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b9917b]
2018-06-08 20:56:38  [ http-nio-80-exec-3:675004 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:38  [ http-nio-80-exec-3:675004 ] - [ INFO ]  # user --->com.bankledger.entity.User@9158805
2018-06-08 20:56:38  [ http-nio-80-exec-3:675004 ] - [ INFO ]  # url --->/main
2018-06-08 20:56:38  [ http-nio-80-exec-3:675004 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:38  [ http-nio-80-exec-3:675005 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:38  [ http-nio-80-exec-3:675005 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14b37c54] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:38  [ http-nio-80-exec-3:675005 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:38  [ http-nio-80-exec-3:675005 ] - [ DEBUG ]  ==>  Preparing: select count(0) from project where status= '1' 
2018-06-08 20:56:38  [ http-nio-80-exec-3:675006 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:56:38  [ http-nio-80-exec-3:675007 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:38  [ http-nio-80-exec-3:675007 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14b37c54]
2018-06-08 20:56:38  [ http-nio-80-exec-7:675217 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:38  [ http-nio-80-exec-7:675218 ] - [ INFO ]  # user --->com.bankledger.entity.User@9158805
2018-06-08 20:56:38  [ http-nio-80-exec-7:675218 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:56:38  [ http-nio-80-exec-7:675218 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:38  [ http-nio-80-exec-7:675219 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:38  [ http-nio-80-exec-7:675219 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138f4e0b] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:38  [ http-nio-80-exec-7:675219 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.75
2018-06-08 20:56:38  [ http-nio-80-exec-7:675229 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:38  [ http-nio-80-exec-7:675229 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:56:38  [ http-nio-80-exec-7:675230 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:56:38  [ http-nio-80-exec-7:675231 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:38  [ http-nio-80-exec-7:675232 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:56:38  [ http-nio-80-exec-7:675233 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:56:38  [ http-nio-80-exec-7:675234 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:38  [ http-nio-80-exec-7:675235 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138f4e0b]
2018-06-08 20:56:38  [ http-nio-80-exec-1:675837 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:38  [ http-nio-80-exec-1:675837 ] - [ INFO ]  # user --->com.bankledger.entity.User@9158805
2018-06-08 20:56:38  [ http-nio-80-exec-1:675837 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-08 20:56:38  [ http-nio-80-exec-1:675837 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:39  [ http-nio-80-exec-4:676079 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:39  [ http-nio-80-exec-4:676079 ] - [ INFO ]  # user --->com.bankledger.entity.User@9158805
2018-06-08 20:56:39  [ http-nio-80-exec-4:676079 ] - [ INFO ]  # url --->/coin/getList
2018-06-08 20:56:39  [ http-nio-80-exec-4:676079 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:39  [ http-nio-80-exec-4:676080 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:39  [ http-nio-80-exec-4:676081 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1a2ff4] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:39  [ http-nio-80-exec-4:676082 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.7777777777777778
2018-06-08 20:56:39  [ http-nio-80-exec-4:676083 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:39  [ http-nio-80-exec-4:676084 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM coin_record WHERE 1 = 1 AND blockaddr_from = ? 
2018-06-08 20:56:39  [ http-nio-80-exec-4:676084 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String)
2018-06-08 20:56:39  [ http-nio-80-exec-4:676085 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:39  [ http-nio-80-exec-4:676086 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1a2ff4]
2018-06-08 20:56:48  [ http-nio-80-exec-7:685707 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:48  [ http-nio-80-exec-7:685707 ] - [ INFO ]  # user --->com.bankledger.entity.User@9158805
2018-06-08 20:56:48  [ http-nio-80-exec-7:685707 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-08 20:56:48  [ http-nio-80-exec-7:685708 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:49  [ http-nio-80-exec-1:686004 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:56:49  [ http-nio-80-exec-1:686004 ] - [ INFO ]  # user --->com.bankledger.entity.User@9158805
2018-06-08 20:56:49  [ http-nio-80-exec-1:686004 ] - [ INFO ]  # url --->/coin/getList
2018-06-08 20:56:49  [ http-nio-80-exec-1:686004 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:56:49  [ http-nio-80-exec-1:686005 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:56:49  [ http-nio-80-exec-1:686006 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5befc147] was not registered for synchronization because synchronization is not active
2018-06-08 20:56:49  [ http-nio-80-exec-1:686006 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8
2018-06-08 20:56:49  [ http-nio-80-exec-1:686007 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:56:49  [ http-nio-80-exec-1:686008 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM coin_record WHERE 1 = 1 AND blockaddr_from = ? 
2018-06-08 20:56:49  [ http-nio-80-exec-1:686009 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String)
2018-06-08 20:56:49  [ http-nio-80-exec-1:686010 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:56:49  [ http-nio-80-exec-1:686011 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5befc147]
2018-06-08 20:57:42  [ http-nio-80-exec-2:739284 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:57:42  [ http-nio-80-exec-2:739284 ] - [ INFO ]  # user --->com.bankledger.entity.User@9158805
2018-06-08 20:57:42  [ http-nio-80-exec-2:739284 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-08 20:57:42  [ http-nio-80-exec-2:739285 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:57:42  [ http-nio-80-exec-4:739509 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:57:42  [ http-nio-80-exec-4:739509 ] - [ INFO ]  # user --->com.bankledger.entity.User@9158805
2018-06-08 20:57:42  [ http-nio-80-exec-4:739510 ] - [ INFO ]  # url --->/coin/getList
2018-06-08 20:57:42  [ http-nio-80-exec-4:739510 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:57:42  [ http-nio-80-exec-4:739511 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:57:42  [ http-nio-80-exec-4:739511 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e89e63] was not registered for synchronization because synchronization is not active
2018-06-08 20:57:42  [ http-nio-80-exec-4:739512 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8181818181818182
2018-06-08 20:57:42  [ http-nio-80-exec-4:739513 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@3cc64f71] will not be managed by Spring
2018-06-08 20:57:42  [ http-nio-80-exec-4:739513 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM coin_record WHERE 1 = 1 AND blockaddr_from = ? 
2018-06-08 20:57:42  [ http-nio-80-exec-4:739514 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String)
2018-06-08 20:57:42  [ http-nio-80-exec-4:739516 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:57:42  [ http-nio-80-exec-4:739517 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e89e63]
2018-06-08 20:58:44  [ Thread-16:801162 ] - [ INFO ]  {dataSource-2} closed
2018-06-08 20:58:44  [ restartedMain:801477 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 232 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 20:58:44  [ restartedMain:801477 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 20:58:44  [ restartedMain:801477 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 20:58:45  [ restartedMain:802073 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 20:58:45  [ restartedMain:802077 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 20:58:45  [ restartedMain:802087 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 20:58:45  [ restartedMain:802087 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 20:58:45  [ restartedMain:802087 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 20:58:45  [ restartedMain:802088 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 20:58:45  [ restartedMain:802089 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 20:58:45  [ restartedMain:802090 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 20:58:45  [ restartedMain:802090 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 20:58:45  [ restartedMain:802090 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 20:58:45  [ restartedMain:802090 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 20:58:45  [ restartedMain:802090 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 20:58:45  [ restartedMain:802090 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 20:58:45  [ restartedMain:802090 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 20:58:45  [ restartedMain:802187 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:58:45  [ restartedMain:802188 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:58:45  [ restartedMain:802189 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:58:45  [ restartedMain:802190 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:58:45  [ restartedMain:802191 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:58:45  [ restartedMain:802192 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:58:45  [ restartedMain:802193 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:58:45  [ restartedMain:802198 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:58:45  [ restartedMain:802199 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:58:45  [ restartedMain:802201 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:58:45  [ restartedMain:802202 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:58:45  [ restartedMain:802208 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:58:45  [ restartedMain:802211 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:58:45  [ restartedMain:802212 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:58:45  [ restartedMain:802213 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:58:45  [ restartedMain:802214 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:58:45  [ restartedMain:802654 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 20:58:45  [ restartedMain:802876 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:58:45  [ restartedMain:802877 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 20:58:45  [ restartedMain:802878 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 20:58:45  [ restartedMain:802878 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 20:58:45  [ restartedMain:802878 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 20:58:45  [ restartedMain:802878 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 20:58:45  [ restartedMain:802879 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 20:58:45  [ restartedMain:802879 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 20:58:45  [ restartedMain:802879 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 20:58:45  [ restartedMain:802880 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 20:58:45  [ restartedMain:802880 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 20:58:45  [ restartedMain:802886 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 20:58:45  [ restartedMain:802887 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 20:58:45  [ restartedMain:802887 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 20:58:45  [ restartedMain:802887 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 20:58:45  [ restartedMain:802887 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 20:58:46  [ restartedMain:803267 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 20:58:46  [ restartedMain:803325 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 20:58:46  [ restartedMain:803798 ] - [ INFO ]  Started App in 2.37 seconds (JVM running for 804.578)
2018-06-08 20:59:00  [ http-nio-80-exec-1:817818 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:00  [ http-nio-80-exec-1:817818 ] - [ INFO ]  # user --->null
2018-06-08 20:59:00  [ http-nio-80-exec-1:817818 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-08 20:59:00  [ http-nio-80-exec-1:817819 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:00  [ http-nio-80-exec-2:817823 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:00  [ http-nio-80-exec-2:817824 ] - [ INFO ]  # user --->null
2018-06-08 20:59:00  [ http-nio-80-exec-2:817824 ] - [ INFO ]  # url --->/login
2018-06-08 20:59:00  [ http-nio-80-exec-2:817824 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:00  [ http-nio-80-exec-2:817835 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 20:59:00  [ http-nio-80-exec-2:817854 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@9dffb2
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@685e0e1a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@69fbe1b2
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-08 20:59:00  [ http-nio-80-exec-2:817871 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-08 20:59:02  [ http-nio-80-exec-9:819253 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:02  [ http-nio-80-exec-9:819256 ] - [ INFO ]  # user --->null
2018-06-08 20:59:02  [ http-nio-80-exec-9:819256 ] - [ INFO ]  # url --->/login
2018-06-08 20:59:02  [ http-nio-80-exec-9:819256 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:02  [ http-nio-80-exec-9:819262 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:02  [ http-nio-80-exec-9:819263 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d24fac] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:02  [ http-nio-80-exec-9:819268 ] - [ INFO ]  {dataSource-3} inited
2018-06-08 20:59:02  [ http-nio-80-exec-9:819276 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:02  [ http-nio-80-exec-9:819277 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 20:59:02  [ http-nio-80-exec-9:819278 ] - [ DEBUG ]  ==> Parameters: 0(String), 000000(String), t123456(String)
2018-06-08 20:59:02  [ http-nio-80-exec-9:819284 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:02  [ http-nio-80-exec-9:819284 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d24fac]
2018-06-08 20:59:02  [ http-nio-80-exec-3:819303 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:02  [ http-nio-80-exec-3:819303 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:02  [ http-nio-80-exec-3:819303 ] - [ INFO ]  # url --->/main
2018-06-08 20:59:02  [ http-nio-80-exec-3:819304 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:02  [ http-nio-80-exec-3:819304 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:02  [ http-nio-80-exec-3:819304 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e592cd9] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:02  [ http-nio-80-exec-3:819305 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:02  [ http-nio-80-exec-3:819305 ] - [ DEBUG ]  ==>  Preparing: select count(0) from project where status= '1' 
2018-06-08 20:59:02  [ http-nio-80-exec-3:819306 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:59:02  [ http-nio-80-exec-3:819308 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:02  [ http-nio-80-exec-3:819308 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e592cd9]
2018-06-08 20:59:02  [ http-nio-80-exec-7:819505 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:02  [ http-nio-80-exec-7:819505 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:02  [ http-nio-80-exec-7:819505 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:59:02  [ http-nio-80-exec-7:819505 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:02  [ http-nio-80-exec-7:819510 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:02  [ http-nio-80-exec-7:819511 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@355b645] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:02  [ http-nio-80-exec-7:819511 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-08 20:59:02  [ http-nio-80-exec-7:819529 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:02  [ http-nio-80-exec-7:819530 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:59:02  [ http-nio-80-exec-7:819531 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:59:02  [ http-nio-80-exec-7:819535 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:02  [ http-nio-80-exec-7:819537 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:59:02  [ http-nio-80-exec-7:819537 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:59:02  [ http-nio-80-exec-7:819538 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:02  [ http-nio-80-exec-7:819539 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@355b645]
2018-06-08 20:59:03  [ http-nio-80-exec-10:820194 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:03  [ http-nio-80-exec-10:820194 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:03  [ http-nio-80-exec-10:820194 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-08 20:59:03  [ http-nio-80-exec-10:820194 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:03  [ http-nio-80-exec-5:820423 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:03  [ http-nio-80-exec-5:820423 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:03  [ http-nio-80-exec-5:820423 ] - [ INFO ]  # url --->/coin/getList
2018-06-08 20:59:03  [ http-nio-80-exec-5:820423 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:03  [ http-nio-80-exec-5:820429 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:03  [ http-nio-80-exec-5:820429 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@508048e9] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:03  [ http-nio-80-exec-5:820433 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-08 20:59:03  [ http-nio-80-exec-5:820434 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:03  [ http-nio-80-exec-5:820435 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM coin_record WHERE 1 = 1 AND blockaddr_from = ? 
2018-06-08 20:59:03  [ http-nio-80-exec-5:820436 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String)
2018-06-08 20:59:03  [ http-nio-80-exec-5:820438 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:03  [ http-nio-80-exec-5:820439 ] - [ DEBUG ]  ==>  Preparing: select blockaddr_from blockAddrFrom, blockaddr_to blockaddrTo, coinnum coinNum, projectid projectId,projectname projectName,organize, address,created from coin_record where 1=1 and blockaddr_from = ? LIMIT ? 
2018-06-08 20:59:03  [ http-nio-80-exec-5:820440 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String), 10(Integer)
2018-06-08 20:59:03  [ http-nio-80-exec-5:820441 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:03  [ http-nio-80-exec-5:820441 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@508048e9]
2018-06-08 20:59:06  [ http-nio-80-exec-9:823769 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:06  [ http-nio-80-exec-9:823769 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:06  [ http-nio-80-exec-9:823769 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-08 20:59:06  [ http-nio-80-exec-9:823769 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:06  [ http-nio-80-exec-3:823886 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:06  [ http-nio-80-exec-3:823886 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:06  [ http-nio-80-exec-3:823886 ] - [ INFO ]  # url --->/coin/getList
2018-06-08 20:59:06  [ http-nio-80-exec-3:823886 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:06  [ http-nio-80-exec-3:823887 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:06  [ http-nio-80-exec-3:823887 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad8f55d] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:06  [ http-nio-80-exec-3:823888 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.3333333333333333
2018-06-08 20:59:06  [ http-nio-80-exec-3:823889 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:06  [ http-nio-80-exec-3:823889 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM coin_record WHERE 1 = 1 AND blockaddr_from = ? 
2018-06-08 20:59:06  [ http-nio-80-exec-3:823889 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String)
2018-06-08 20:59:06  [ http-nio-80-exec-3:823890 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:06  [ http-nio-80-exec-3:823891 ] - [ DEBUG ]  ==>  Preparing: select blockaddr_from blockAddrFrom, blockaddr_to blockaddrTo, coinnum coinNum, projectid projectId,projectname projectName,organize, address,created from coin_record where 1=1 and blockaddr_from = ? LIMIT ? 
2018-06-08 20:59:06  [ http-nio-80-exec-3:823892 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String), 10(Integer)
2018-06-08 20:59:06  [ http-nio-80-exec-3:823893 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:06  [ http-nio-80-exec-3:823893 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad8f55d]
2018-06-08 20:59:18  [ http-nio-80-exec-2:835666 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:18  [ http-nio-80-exec-2:835666 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:18  [ http-nio-80-exec-2:835667 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-08 20:59:18  [ http-nio-80-exec-2:835667 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:18  [ http-nio-80-exec-1:835797 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:18  [ http-nio-80-exec-1:835798 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:18  [ http-nio-80-exec-1:835798 ] - [ INFO ]  # url --->/coin/getList
2018-06-08 20:59:18  [ http-nio-80-exec-1:835798 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:18  [ http-nio-80-exec-1:835799 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:18  [ http-nio-80-exec-1:835799 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@128dae0c] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:18  [ http-nio-80-exec-1:835799 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.5
2018-06-08 20:59:18  [ http-nio-80-exec-1:835800 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:18  [ http-nio-80-exec-1:835800 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM coin_record WHERE 1 = 1 AND blockaddr_from = ? 
2018-06-08 20:59:18  [ http-nio-80-exec-1:835800 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String)
2018-06-08 20:59:18  [ http-nio-80-exec-1:835801 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:18  [ http-nio-80-exec-1:835802 ] - [ DEBUG ]  ==>  Preparing: select blockaddr_from blockAddrFrom, blockaddr_to blockaddrTo, coinnum coinNum, projectid projectId,projectname projectName,organize, address,created from coin_record where 1=1 and blockaddr_from = ? LIMIT ? 
2018-06-08 20:59:18  [ http-nio-80-exec-1:835802 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String), 10(Integer)
2018-06-08 20:59:18  [ http-nio-80-exec-1:835804 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:18  [ http-nio-80-exec-1:835804 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@128dae0c]
2018-06-08 20:59:19  [ http-nio-80-exec-7:836660 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:19  [ http-nio-80-exec-7:836660 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:19  [ http-nio-80-exec-7:836660 ] - [ INFO ]  # url --->/project/auth
2018-06-08 20:59:19  [ http-nio-80-exec-7:836660 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:19  [ http-nio-80-exec-8:836741 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:19  [ http-nio-80-exec-8:836741 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:19  [ http-nio-80-exec-8:836741 ] - [ INFO ]  # url --->/project/getListAuth
2018-06-08 20:59:19  [ http-nio-80-exec-8:836741 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:19  [ http-nio-80-exec-8:836742 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:19  [ http-nio-80-exec-8:836743 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7052f521] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:19  [ http-nio-80-exec-8:836743 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6
2018-06-08 20:59:19  [ http-nio-80-exec-8:836757 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:19  [ http-nio-80-exec-8:836757 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:59:19  [ http-nio-80-exec-8:836758 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:59:19  [ http-nio-80-exec-8:836759 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:19  [ http-nio-80-exec-8:836760 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:59:19  [ http-nio-80-exec-8:836760 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:59:19  [ http-nio-80-exec-8:836762 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:19  [ http-nio-80-exec-8:836762 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7052f521]
2018-06-08 20:59:35  [ http-nio-80-exec-5:852602 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:35  [ http-nio-80-exec-5:852602 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:35  [ http-nio-80-exec-5:852602 ] - [ INFO ]  # url --->/main
2018-06-08 20:59:35  [ http-nio-80-exec-5:852602 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:35  [ http-nio-80-exec-5:852602 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:35  [ http-nio-80-exec-5:852603 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57bc32f6] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:35  [ http-nio-80-exec-5:852603 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:35  [ http-nio-80-exec-5:852603 ] - [ DEBUG ]  ==>  Preparing: select count(0) from project where status= '1' 
2018-06-08 20:59:35  [ http-nio-80-exec-5:852603 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:59:35  [ http-nio-80-exec-5:852605 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:35  [ http-nio-80-exec-5:852605 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57bc32f6]
2018-06-08 20:59:35  [ http-nio-80-exec-9:852755 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:35  [ http-nio-80-exec-9:852755 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:35  [ http-nio-80-exec-9:852755 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 20:59:35  [ http-nio-80-exec-9:852755 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:35  [ http-nio-80-exec-9:852756 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:35  [ http-nio-80-exec-9:852757 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b1c67b] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:35  [ http-nio-80-exec-9:852757 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2018-06-08 20:59:35  [ http-nio-80-exec-9:852770 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:35  [ http-nio-80-exec-9:852770 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:59:35  [ http-nio-80-exec-9:852770 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:59:35  [ http-nio-80-exec-9:852772 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:35  [ http-nio-80-exec-9:852773 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:59:35  [ http-nio-80-exec-9:852773 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:59:35  [ http-nio-80-exec-9:852775 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:35  [ http-nio-80-exec-9:852777 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b1c67b]
2018-06-08 20:59:37  [ http-nio-80-exec-3:854753 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:37  [ http-nio-80-exec-3:854753 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:37  [ http-nio-80-exec-3:854753 ] - [ INFO ]  # url --->/project/auth
2018-06-08 20:59:37  [ http-nio-80-exec-3:854754 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:37  [ http-nio-80-exec-4:854842 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:37  [ http-nio-80-exec-4:854842 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:37  [ http-nio-80-exec-4:854842 ] - [ INFO ]  # url --->/project/getListAuth
2018-06-08 20:59:37  [ http-nio-80-exec-4:854842 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:37  [ http-nio-80-exec-4:854845 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:37  [ http-nio-80-exec-4:854846 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@379b6d6] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:37  [ http-nio-80-exec-4:854846 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.7142857142857143
2018-06-08 20:59:37  [ http-nio-80-exec-4:854867 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:37  [ http-nio-80-exec-4:854867 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1) table_count 
2018-06-08 20:59:37  [ http-nio-80-exec-4:854867 ] - [ DEBUG ]  ==> Parameters: 
2018-06-08 20:59:37  [ http-nio-80-exec-4:854868 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:37  [ http-nio-80-exec-4:854869 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 LIMIT ? 
2018-06-08 20:59:37  [ http-nio-80-exec-4:854870 ] - [ DEBUG ]  ==> Parameters: 10(Integer)
2018-06-08 20:59:37  [ http-nio-80-exec-4:854871 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:37  [ http-nio-80-exec-4:854871 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@379b6d6]
2018-06-08 20:59:38  [ http-nio-80-exec-2:855201 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:38  [ http-nio-80-exec-2:855202 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:38  [ http-nio-80-exec-2:855202 ] - [ INFO ]  # url --->/coin/coinPage
2018-06-08 20:59:38  [ http-nio-80-exec-2:855202 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:38  [ http-nio-80-exec-1:855278 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:38  [ http-nio-80-exec-1:855278 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:38  [ http-nio-80-exec-1:855278 ] - [ INFO ]  # url --->/coin/getList
2018-06-08 20:59:38  [ http-nio-80-exec-1:855279 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:38  [ http-nio-80-exec-1:855279 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 20:59:38  [ http-nio-80-exec-1:855280 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c806bc8] was not registered for synchronization because synchronization is not active
2018-06-08 20:59:38  [ http-nio-80-exec-1:855282 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.75
2018-06-08 20:59:38  [ http-nio-80-exec-1:855283 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 20:59:38  [ http-nio-80-exec-1:855283 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM coin_record WHERE 1 = 1 AND blockaddr_from = ? 
2018-06-08 20:59:38  [ http-nio-80-exec-1:855284 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String)
2018-06-08 20:59:38  [ http-nio-80-exec-1:855285 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:38  [ http-nio-80-exec-1:855286 ] - [ DEBUG ]  ==>  Preparing: select blockaddr_from blockAddrFrom, blockaddr_to blockaddrTo, coinnum coinNum, projectid projectId,projectname projectName,organize, address,created from coin_record where 1=1 and blockaddr_from = ? LIMIT ? 
2018-06-08 20:59:38  [ http-nio-80-exec-1:855286 ] - [ DEBUG ]  ==> Parameters: Xv8uGTVzjDtjUtAqjX1gqGP6npUUabySLY(String), 10(Integer)
2018-06-08 20:59:38  [ http-nio-80-exec-1:855287 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 20:59:38  [ http-nio-80-exec-1:855288 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c806bc8]
2018-06-08 20:59:40  [ http-nio-80-exec-6:857616 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:40  [ http-nio-80-exec-6:857616 ] - [ INFO ]  # user --->com.bankledger.entity.User@1b5bb1d6
2018-06-08 20:59:40  [ http-nio-80-exec-6:857616 ] - [ INFO ]  # url --->/loginOut
2018-06-08 20:59:40  [ http-nio-80-exec-6:857616 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 20:59:40  [ http-nio-80-exec-7:857634 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 20:59:40  [ http-nio-80-exec-7:857634 ] - [ INFO ]  # user --->null
2018-06-08 20:59:40  [ http-nio-80-exec-7:857634 ] - [ INFO ]  # url --->/login
2018-06-08 20:59:40  [ http-nio-80-exec-7:857634 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:05  [ http-nio-80-exec-6:942758 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:05  [ http-nio-80-exec-6:942759 ] - [ INFO ]  # user --->null
2018-06-08 21:01:05  [ http-nio-80-exec-6:942759 ] - [ INFO ]  # url --->/login
2018-06-08 21:01:05  [ http-nio-80-exec-6:942759 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:12  [ http-nio-80-exec-5:949241 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:12  [ http-nio-80-exec-5:949242 ] - [ INFO ]  # user --->null
2018-06-08 21:01:12  [ http-nio-80-exec-5:949242 ] - [ INFO ]  # url --->/login
2018-06-08 21:01:12  [ http-nio-80-exec-5:949242 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:12  [ http-nio-80-exec-5:949243 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:01:12  [ http-nio-80-exec-5:949243 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2163e1c8] was not registered for synchronization because synchronization is not active
2018-06-08 21:01:12  [ http-nio-80-exec-5:949246 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 21:01:12  [ http-nio-80-exec-5:949247 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 21:01:12  [ http-nio-80-exec-5:949247 ] - [ DEBUG ]  ==> Parameters: 1(String), 111111(String), t123456(String)
2018-06-08 21:01:12  [ http-nio-80-exec-5:949249 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:01:12  [ http-nio-80-exec-5:949250 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2163e1c8]
2018-06-08 21:01:12  [ http-nio-80-exec-9:949260 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:12  [ http-nio-80-exec-9:949261 ] - [ INFO ]  # user --->com.bankledger.entity.User@35c7ea97
2018-06-08 21:01:12  [ http-nio-80-exec-9:949261 ] - [ INFO ]  # url --->/main
2018-06-08 21:01:12  [ http-nio-80-exec-9:949261 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:12  [ http-nio-80-exec-9:949261 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:01:12  [ http-nio-80-exec-9:949261 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cc18a04] was not registered for synchronization because synchronization is not active
2018-06-08 21:01:12  [ http-nio-80-exec-9:949262 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 21:01:12  [ http-nio-80-exec-9:949262 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 21:01:12  [ http-nio-80-exec-9:949263 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 21:01:12  [ http-nio-80-exec-9:949264 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:01:12  [ http-nio-80-exec-9:949264 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cc18a04]
2018-06-08 21:01:12  [ http-nio-80-exec-1:949511 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:12  [ http-nio-80-exec-1:949511 ] - [ INFO ]  # user --->com.bankledger.entity.User@35c7ea97
2018-06-08 21:01:12  [ http-nio-80-exec-1:949511 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 21:01:12  [ http-nio-80-exec-1:949512 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:12  [ http-nio-80-exec-1:949512 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:01:12  [ http-nio-80-exec-1:949513 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ba8fdd] was not registered for synchronization because synchronization is not active
2018-06-08 21:01:12  [ http-nio-80-exec-1:949513 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.7777777777777778
2018-06-08 21:01:12  [ http-nio-80-exec-1:949523 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 21:01:12  [ http-nio-80-exec-1:949523 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.blockaddr = ?) table_count 
2018-06-08 21:01:12  [ http-nio-80-exec-1:949524 ] - [ DEBUG ]  ==> Parameters: 111111(String)
2018-06-08 21:01:12  [ http-nio-80-exec-1:949525 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:01:12  [ http-nio-80-exec-1:949526 ] - [ DEBUG ]  ==>  Preparing: SELECT p.projectid projectId,p.projecttype projectType,p.projectname projectName,p.address, p.organize,p.starttime startTime,p.endtime endTime,p.limitcount limitCount,p.coin,p.limitorganizeflag limitOrganizeFlag,p.discript,p.status,p.created ,IFNULL(j.iscome,'') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1=1 and p.blockaddr = ? LIMIT ? 
2018-06-08 21:01:12  [ http-nio-80-exec-1:949527 ] - [ DEBUG ]  ==> Parameters: 111111(String), 10(Integer)
2018-06-08 21:01:12  [ http-nio-80-exec-1:949528 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:01:12  [ http-nio-80-exec-1:949528 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ba8fdd]
2018-06-08 21:01:13  [ http-nio-80-exec-4:950521 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:13  [ http-nio-80-exec-4:950522 ] - [ INFO ]  # user --->com.bankledger.entity.User@35c7ea97
2018-06-08 21:01:13  [ http-nio-80-exec-4:950522 ] - [ INFO ]  # url --->/project/publish
2018-06-08 21:01:13  [ http-nio-80-exec-4:950522 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:18  [ http-nio-80-exec-9:955689 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:18  [ http-nio-80-exec-9:955689 ] - [ INFO ]  # user --->com.bankledger.entity.User@35c7ea97
2018-06-08 21:01:18  [ http-nio-80-exec-9:955689 ] - [ INFO ]  # url --->/loginOut
2018-06-08 21:01:18  [ http-nio-80-exec-9:955689 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:18  [ http-nio-80-exec-10:955694 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:18  [ http-nio-80-exec-10:955695 ] - [ INFO ]  # user --->null
2018-06-08 21:01:18  [ http-nio-80-exec-10:955695 ] - [ INFO ]  # url --->/login
2018-06-08 21:01:18  [ http-nio-80-exec-10:955695 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:27  [ http-nio-80-exec-8:964384 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:27  [ http-nio-80-exec-8:964384 ] - [ INFO ]  # user --->null
2018-06-08 21:01:27  [ http-nio-80-exec-8:964385 ] - [ INFO ]  # url --->/login
2018-06-08 21:01:27  [ http-nio-80-exec-8:964385 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:27  [ http-nio-80-exec-8:964385 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:01:27  [ http-nio-80-exec-8:964386 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f9ef620] was not registered for synchronization because synchronization is not active
2018-06-08 21:01:27  [ http-nio-80-exec-8:964386 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 21:01:27  [ http-nio-80-exec-8:964386 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 21:01:27  [ http-nio-80-exec-8:964387 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 21:01:27  [ http-nio-80-exec-8:964388 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:01:27  [ http-nio-80-exec-8:964388 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f9ef620]
2018-06-08 21:01:27  [ http-nio-80-exec-3:964399 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:27  [ http-nio-80-exec-3:964400 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:01:27  [ http-nio-80-exec-3:964400 ] - [ INFO ]  # url --->/main
2018-06-08 21:01:27  [ http-nio-80-exec-3:964400 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:27  [ http-nio-80-exec-3:964400 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:01:27  [ http-nio-80-exec-3:964400 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d2ed4f7] was not registered for synchronization because synchronization is not active
2018-06-08 21:01:27  [ http-nio-80-exec-3:964401 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 21:01:27  [ http-nio-80-exec-3:964402 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 21:01:27  [ http-nio-80-exec-3:964403 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 21:01:27  [ http-nio-80-exec-3:964404 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:01:27  [ http-nio-80-exec-3:964405 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d2ed4f7]
2018-06-08 21:01:27  [ http-nio-80-exec-2:964621 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:27  [ http-nio-80-exec-2:964622 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:01:27  [ http-nio-80-exec-2:964622 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 21:01:27  [ http-nio-80-exec-2:964622 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:27  [ http-nio-80-exec-2:964622 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:01:27  [ http-nio-80-exec-2:964623 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56a7062f] was not registered for synchronization because synchronization is not active
2018-06-08 21:01:27  [ http-nio-80-exec-2:964623 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.8
2018-06-08 21:01:27  [ http-nio-80-exec-2:964639 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@60d0c572] will not be managed by Spring
2018-06-08 21:01:27  [ http-nio-80-exec-2:964640 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 21:01:27  [ http-nio-80-exec-2:964640 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 21:01:27  [ http-nio-80-exec-2:964641 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:01:27  [ http-nio-80-exec-2:964642 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56a7062f]
2018-06-08 21:01:29  [ http-nio-80-exec-1:966046 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:29  [ http-nio-80-exec-1:966047 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:01:29  [ http-nio-80-exec-1:966047 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:01:29  [ http-nio-80-exec-1:966048 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:29  [ http-nio-80-exec-6:966993 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:29  [ http-nio-80-exec-6:966993 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:01:29  [ http-nio-80-exec-6:966993 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:01:29  [ http-nio-80-exec-6:966993 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:01:30  [ http-nio-80-exec-7:967794 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:01:30  [ http-nio-80-exec-7:967794 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:01:30  [ http-nio-80-exec-7:967794 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:01:30  [ http-nio-80-exec-7:967794 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:04:12  [ http-nio-80-exec-2:1129974 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:04:12  [ http-nio-80-exec-2:1129974 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:04:12  [ http-nio-80-exec-2:1129974 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:04:12  [ http-nio-80-exec-2:1129974 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:04:15  [ http-nio-80-exec-8:1132091 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:04:15  [ http-nio-80-exec-8:1132092 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:04:15  [ http-nio-80-exec-8:1132092 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:04:15  [ http-nio-80-exec-8:1132092 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:04:28  [ http-nio-80-exec-9:1145738 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:04:28  [ http-nio-80-exec-9:1145738 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:04:28  [ http-nio-80-exec-9:1145738 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:04:28  [ http-nio-80-exec-9:1145739 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:05:33  [ http-nio-80-exec-1:1210460 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:05:33  [ http-nio-80-exec-1:1210461 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:05:33  [ http-nio-80-exec-1:1210461 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:05:33  [ http-nio-80-exec-1:1210461 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:06:41  [ http-nio-80-exec-8:1278875 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:06:41  [ http-nio-80-exec-8:1278875 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:06:41  [ http-nio-80-exec-8:1278875 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:06:41  [ http-nio-80-exec-8:1278875 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:10:14  [ http-nio-80-exec-7:1491907 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:10:14  [ http-nio-80-exec-7:1491907 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:10:14  [ http-nio-80-exec-7:1491907 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:10:14  [ http-nio-80-exec-7:1491907 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:10:16  [ http-nio-80-exec-6:1493465 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:10:16  [ http-nio-80-exec-6:1493466 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:10:16  [ http-nio-80-exec-6:1493466 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:10:16  [ http-nio-80-exec-6:1493466 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:10:21  [ http-nio-80-exec-1:1498538 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:10:21  [ http-nio-80-exec-1:1498538 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:10:21  [ http-nio-80-exec-1:1498539 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:10:21  [ http-nio-80-exec-1:1498540 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:10:27  [ http-nio-80-exec-2:1504290 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:10:27  [ http-nio-80-exec-2:1504291 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:10:27  [ http-nio-80-exec-2:1504291 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:10:27  [ http-nio-80-exec-2:1504291 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:10:35  [ http-nio-80-exec-10:1512420 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:10:35  [ http-nio-80-exec-10:1512420 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:10:35  [ http-nio-80-exec-10:1512420 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:10:35  [ http-nio-80-exec-10:1512420 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:10:46  [ http-nio-80-exec-1:1523282 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:10:46  [ http-nio-80-exec-1:1523282 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:10:46  [ http-nio-80-exec-1:1523282 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:10:46  [ http-nio-80-exec-1:1523283 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:10:59  [ http-nio-80-exec-9:1536042 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:10:59  [ http-nio-80-exec-9:1536043 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:10:59  [ http-nio-80-exec-9:1536043 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:10:59  [ http-nio-80-exec-9:1536043 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:11:12  [ http-nio-80-exec-4:1548996 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:11:12  [ http-nio-80-exec-4:1548997 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:11:12  [ http-nio-80-exec-4:1548997 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:11:12  [ http-nio-80-exec-4:1548997 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:11:32  [ http-nio-80-exec-8:1569153 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:11:32  [ http-nio-80-exec-8:1569153 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:11:32  [ http-nio-80-exec-8:1569153 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:11:32  [ http-nio-80-exec-8:1569153 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:11:38  [ http-nio-80-exec-1:1575511 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:11:38  [ http-nio-80-exec-1:1575511 ] - [ INFO ]  # user --->com.bankledger.entity.User@15257631
2018-06-08 21:11:38  [ http-nio-80-exec-1:1575511 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:11:38  [ http-nio-80-exec-1:1575512 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:12:41  [ background-preinit:1 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-08 21:12:41  [ background-preinit:3 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-08 21:12:41  [ background-preinit:13 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:12:41  [ background-preinit:18 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:12:41  [ background-preinit:19 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:12:41  [ background-preinit:20 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:12:41  [ background-preinit:20 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:12:41  [ restartedMain:226 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 13880 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 21:12:41  [ restartedMain:227 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 21:12:41  [ restartedMain:228 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 21:12:41  [ background-preinit:247 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:12:41  [ background-preinit:251 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:12:41  [ background-preinit:253 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:12:41  [ background-preinit:255 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:12:41  [ background-preinit:256 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:12:41  [ background-preinit:258 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:12:42  [ restartedMain:1610 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 21:12:42  [ restartedMain:1615 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 21:12:42  [ restartedMain:1628 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 21:12:42  [ restartedMain:1630 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 21:12:42  [ restartedMain:1631 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 21:12:42  [ restartedMain:1632 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 21:12:42  [ restartedMain:1638 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 21:12:42  [ restartedMain:1640 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 21:12:42  [ restartedMain:1640 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 21:12:42  [ restartedMain:1641 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 21:12:42  [ restartedMain:1641 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 21:12:42  [ restartedMain:1642 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 21:12:42  [ restartedMain:1642 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 21:12:42  [ restartedMain:1642 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 21:12:43  [ restartedMain:2152 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:12:43  [ restartedMain:2153 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:12:43  [ restartedMain:2154 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:12:43  [ restartedMain:2155 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 21:12:43  [ restartedMain:2157 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 21:12:43  [ restartedMain:2158 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 21:12:43  [ restartedMain:2160 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:12:43  [ restartedMain:2160 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 21:12:43  [ restartedMain:2161 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:12:43  [ restartedMain:2161 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:12:43  [ restartedMain:2161 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:12:43  [ restartedMain:2168 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:12:43  [ restartedMain:2168 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:12:43  [ restartedMain:2168 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:12:43  [ restartedMain:2169 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:12:43  [ restartedMain:2169 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:12:45  [ restartedMain:4268 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-08 21:12:45  [ restartedMain:4331 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 21:12:45  [ restartedMain:4824 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:12:45  [ restartedMain:4825 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:12:45  [ restartedMain:4835 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:12:45  [ restartedMain:4835 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 21:12:45  [ restartedMain:4836 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 21:12:45  [ restartedMain:4836 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 21:12:45  [ restartedMain:4837 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:12:45  [ restartedMain:4838 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 21:12:45  [ restartedMain:4838 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:12:45  [ restartedMain:4838 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:12:45  [ restartedMain:4839 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:12:45  [ restartedMain:4843 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:12:45  [ restartedMain:4844 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:12:45  [ restartedMain:4844 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:12:45  [ restartedMain:4845 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:12:45  [ restartedMain:4845 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:12:46  [ restartedMain:5826 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 21:12:47  [ restartedMain:5973 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 21:12:47  [ restartedMain:6853 ] - [ INFO ]  Started App in 7.009 seconds (JVM running for 7.628)
2018-06-08 21:12:51  [ http-nio-80-exec-1:10156 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:12:51  [ http-nio-80-exec-1:10156 ] - [ INFO ]  # user --->null
2018-06-08 21:12:51  [ http-nio-80-exec-1:10156 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:12:51  [ http-nio-80-exec-1:10157 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:12:51  [ http-nio-80-exec-1:10172 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:12:51  [ http-nio-80-exec-1:10174 ] - [ INFO ]  # user --->null
2018-06-08 21:12:51  [ http-nio-80-exec-1:10174 ] - [ INFO ]  # url --->/login
2018-06-08 21:12:51  [ http-nio-80-exec-1:10179 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:12:51  [ http-nio-80-exec-1:10258 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 21:12:51  [ http-nio-80-exec-1:10525 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4e2e60a3
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@715e5d0
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1da4b193
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-08 21:12:51  [ http-nio-80-exec-1:10536 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-08 21:12:59  [ http-nio-80-exec-5:17883 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:12:59  [ http-nio-80-exec-5:17883 ] - [ INFO ]  # user --->null
2018-06-08 21:12:59  [ http-nio-80-exec-5:17884 ] - [ INFO ]  # url --->/login
2018-06-08 21:12:59  [ http-nio-80-exec-5:17884 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:12:59  [ http-nio-80-exec-5:17925 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:12:59  [ http-nio-80-exec-5:17942 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78b04b7e] was not registered for synchronization because synchronization is not active
2018-06-08 21:12:59  [ http-nio-80-exec-5:18039 ] - [ INFO ]  {dataSource-1} inited
2018-06-08 21:12:59  [ http-nio-80-exec-5:18324 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7c0d0af] will not be managed by Spring
2018-06-08 21:12:59  [ http-nio-80-exec-5:18330 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 21:12:59  [ http-nio-80-exec-5:18354 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 21:12:59  [ http-nio-80-exec-5:18369 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:12:59  [ http-nio-80-exec-5:18370 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78b04b7e]
2018-06-08 21:12:59  [ http-nio-80-exec-6:18461 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:12:59  [ http-nio-80-exec-6:18462 ] - [ INFO ]  # user --->com.bankledger.entity.User@3a39298a
2018-06-08 21:12:59  [ http-nio-80-exec-6:18463 ] - [ INFO ]  # url --->/main
2018-06-08 21:12:59  [ http-nio-80-exec-6:18463 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:12:59  [ http-nio-80-exec-6:18463 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:12:59  [ http-nio-80-exec-6:18464 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34fed0bd] was not registered for synchronization because synchronization is not active
2018-06-08 21:12:59  [ http-nio-80-exec-6:18465 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7c0d0af] will not be managed by Spring
2018-06-08 21:12:59  [ http-nio-80-exec-6:18465 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 21:12:59  [ http-nio-80-exec-6:18466 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 21:12:59  [ http-nio-80-exec-6:18468 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:12:59  [ http-nio-80-exec-6:18469 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34fed0bd]
2018-06-08 21:12:59  [ http-nio-80-exec-8:18778 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:12:59  [ http-nio-80-exec-8:18779 ] - [ INFO ]  # user --->com.bankledger.entity.User@3a39298a
2018-06-08 21:12:59  [ http-nio-80-exec-8:18779 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 21:12:59  [ http-nio-80-exec-8:18779 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:12:59  [ http-nio-80-exec-8:18792 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:12:59  [ http-nio-80-exec-8:18794 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@671caae6] was not registered for synchronization because synchronization is not active
2018-06-08 21:13:00  [ http-nio-80-exec-8:18924 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-08 21:13:00  [ http-nio-80-exec-8:19002 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7c0d0af] will not be managed by Spring
2018-06-08 21:13:00  [ http-nio-80-exec-8:19002 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 21:13:00  [ http-nio-80-exec-8:19003 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 21:13:00  [ http-nio-80-exec-8:19005 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:13:00  [ http-nio-80-exec-8:19006 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@671caae6]
2018-06-08 21:13:00  [ http-nio-80-exec-10:19760 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:13:00  [ http-nio-80-exec-10:19760 ] - [ INFO ]  # user --->com.bankledger.entity.User@3a39298a
2018-06-08 21:13:00  [ http-nio-80-exec-10:19761 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:13:00  [ http-nio-80-exec-10:19761 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:13:02  [ http-nio-80-exec-3:21570 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:13:02  [ http-nio-80-exec-3:21570 ] - [ INFO ]  # user --->com.bankledger.entity.User@3a39298a
2018-06-08 21:13:02  [ http-nio-80-exec-3:21571 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:13:02  [ http-nio-80-exec-3:21571 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:13:06  [ http-nio-80-exec-5:25047 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:13:06  [ http-nio-80-exec-5:25047 ] - [ INFO ]  # user --->com.bankledger.entity.User@3a39298a
2018-06-08 21:13:06  [ http-nio-80-exec-5:25048 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:13:06  [ http-nio-80-exec-5:25048 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:13:37  [ http-nio-80-exec-2:56619 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:13:37  [ http-nio-80-exec-2:56620 ] - [ INFO ]  # user --->null
2018-06-08 21:13:37  [ http-nio-80-exec-2:56620 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:13:37  [ http-nio-80-exec-2:56620 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:13:37  [ http-nio-80-exec-4:56624 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:13:37  [ http-nio-80-exec-4:56624 ] - [ INFO ]  # user --->null
2018-06-08 21:13:37  [ http-nio-80-exec-4:56624 ] - [ INFO ]  # url --->/login
2018-06-08 21:13:37  [ http-nio-80-exec-4:56624 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:13:44  [ http-nio-80-exec-8:63624 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:13:44  [ http-nio-80-exec-8:63625 ] - [ INFO ]  # user --->null
2018-06-08 21:13:44  [ http-nio-80-exec-8:63625 ] - [ INFO ]  # url --->/login
2018-06-08 21:13:44  [ http-nio-80-exec-8:63625 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:13:44  [ http-nio-80-exec-8:63626 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:13:44  [ http-nio-80-exec-8:63627 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79d3618b] was not registered for synchronization because synchronization is not active
2018-06-08 21:13:44  [ http-nio-80-exec-8:63627 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7c0d0af] will not be managed by Spring
2018-06-08 21:13:44  [ http-nio-80-exec-8:63628 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 21:13:44  [ http-nio-80-exec-8:63628 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 21:13:44  [ http-nio-80-exec-8:63629 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:13:44  [ http-nio-80-exec-8:63630 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79d3618b]
2018-06-08 21:13:44  [ http-nio-80-exec-10:63641 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:13:44  [ http-nio-80-exec-10:63642 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:13:44  [ http-nio-80-exec-10:63642 ] - [ INFO ]  # url --->/main
2018-06-08 21:13:44  [ http-nio-80-exec-10:63644 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:13:44  [ http-nio-80-exec-10:63645 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:13:44  [ http-nio-80-exec-10:63646 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4949ccd4] was not registered for synchronization because synchronization is not active
2018-06-08 21:13:44  [ http-nio-80-exec-10:63647 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7c0d0af] will not be managed by Spring
2018-06-08 21:13:44  [ http-nio-80-exec-10:63648 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 21:13:44  [ http-nio-80-exec-10:63649 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 21:13:44  [ http-nio-80-exec-10:63650 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:13:44  [ http-nio-80-exec-10:63650 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4949ccd4]
2018-06-08 21:13:44  [ http-nio-80-exec-9:63816 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:13:44  [ http-nio-80-exec-9:63817 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:13:44  [ http-nio-80-exec-9:63817 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 21:13:44  [ http-nio-80-exec-9:63817 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:13:44  [ http-nio-80-exec-9:63818 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:13:44  [ http-nio-80-exec-9:63818 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74a9cb3b] was not registered for synchronization because synchronization is not active
2018-06-08 21:13:44  [ http-nio-80-exec-9:63819 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.5
2018-06-08 21:13:44  [ http-nio-80-exec-9:63833 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7c0d0af] will not be managed by Spring
2018-06-08 21:13:44  [ http-nio-80-exec-9:63833 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 21:13:44  [ http-nio-80-exec-9:63834 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 21:13:44  [ http-nio-80-exec-9:63835 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:13:44  [ http-nio-80-exec-9:63836 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74a9cb3b]
2018-06-08 21:13:45  [ http-nio-80-exec-1:64853 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:13:45  [ http-nio-80-exec-1:64854 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:13:45  [ http-nio-80-exec-1:64854 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:13:45  [ http-nio-80-exec-1:64854 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:02  [ http-nio-80-exec-7:81038 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:02  [ http-nio-80-exec-7:81038 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:02  [ http-nio-80-exec-7:81038 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:02  [ http-nio-80-exec-7:81038 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:03  [ http-nio-80-exec-8:82032 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:03  [ http-nio-80-exec-8:82032 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:03  [ http-nio-80-exec-8:82032 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:03  [ http-nio-80-exec-8:82032 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:03  [ http-nio-80-exec-10:82608 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:03  [ http-nio-80-exec-10:82608 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:03  [ http-nio-80-exec-10:82609 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:03  [ http-nio-80-exec-10:82609 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:05  [ http-nio-80-exec-6:84184 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:05  [ http-nio-80-exec-6:84185 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:05  [ http-nio-80-exec-6:84185 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:05  [ http-nio-80-exec-6:84185 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:12  [ http-nio-80-exec-4:91064 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:12  [ http-nio-80-exec-4:91064 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:12  [ http-nio-80-exec-4:91064 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:12  [ http-nio-80-exec-4:91065 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:12  [ http-nio-80-exec-5:91384 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:12  [ http-nio-80-exec-5:91384 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:12  [ http-nio-80-exec-5:91385 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:12  [ http-nio-80-exec-5:91385 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:12  [ http-nio-80-exec-9:91523 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:12  [ http-nio-80-exec-9:91523 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:12  [ http-nio-80-exec-9:91524 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:12  [ http-nio-80-exec-9:91524 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:12  [ http-nio-80-exec-4:91680 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:12  [ http-nio-80-exec-4:91680 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:12  [ http-nio-80-exec-4:91681 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:12  [ http-nio-80-exec-4:91681 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:12  [ http-nio-80-exec-7:91819 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:12  [ http-nio-80-exec-7:91819 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:12  [ http-nio-80-exec-7:91820 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:12  [ http-nio-80-exec-7:91820 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:13  [ http-nio-80-exec-3:91983 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:13  [ http-nio-80-exec-3:91983 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:13  [ http-nio-80-exec-3:91983 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:13  [ http-nio-80-exec-3:91983 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:13  [ http-nio-80-exec-8:92148 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:13  [ http-nio-80-exec-8:92148 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:13  [ http-nio-80-exec-8:92148 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:13  [ http-nio-80-exec-8:92149 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:13  [ http-nio-80-exec-2:92291 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:13  [ http-nio-80-exec-2:92291 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:13  [ http-nio-80-exec-2:92292 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:13  [ http-nio-80-exec-2:92292 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:31  [ http-nio-80-exec-1:109904 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:31  [ http-nio-80-exec-1:109904 ] - [ INFO ]  # user --->com.bankledger.entity.User@7bea32ff
2018-06-08 21:14:31  [ http-nio-80-exec-1:109904 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:31  [ http-nio-80-exec-1:109905 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:43  [ http-nio-80-exec-5:122679 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:43  [ http-nio-80-exec-5:122680 ] - [ INFO ]  # user --->null
2018-06-08 21:14:43  [ http-nio-80-exec-5:122680 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:43  [ http-nio-80-exec-5:122680 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:43  [ http-nio-80-exec-2:122698 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:43  [ http-nio-80-exec-2:122698 ] - [ INFO ]  # user --->null
2018-06-08 21:14:43  [ http-nio-80-exec-2:122698 ] - [ INFO ]  # url --->/login
2018-06-08 21:14:43  [ http-nio-80-exec-2:122699 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:53  [ http-nio-80-exec-10:132239 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:53  [ http-nio-80-exec-10:132239 ] - [ INFO ]  # user --->null
2018-06-08 21:14:53  [ http-nio-80-exec-10:132240 ] - [ INFO ]  # url --->/login
2018-06-08 21:14:53  [ http-nio-80-exec-10:132240 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:53  [ http-nio-80-exec-10:132240 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:14:53  [ http-nio-80-exec-10:132241 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3866ee44] was not registered for synchronization because synchronization is not active
2018-06-08 21:14:53  [ http-nio-80-exec-10:132248 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7c0d0af] will not be managed by Spring
2018-06-08 21:14:53  [ http-nio-80-exec-10:132249 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 21:14:53  [ http-nio-80-exec-10:132249 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 21:14:53  [ http-nio-80-exec-10:132250 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:14:53  [ http-nio-80-exec-10:132251 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3866ee44]
2018-06-08 21:14:53  [ http-nio-80-exec-3:132280 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:53  [ http-nio-80-exec-3:132281 ] - [ INFO ]  # user --->com.bankledger.entity.User@11672656
2018-06-08 21:14:53  [ http-nio-80-exec-3:132281 ] - [ INFO ]  # url --->/main
2018-06-08 21:14:53  [ http-nio-80-exec-3:132281 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:53  [ http-nio-80-exec-3:132281 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:14:53  [ http-nio-80-exec-3:132281 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d2e7cbd] was not registered for synchronization because synchronization is not active
2018-06-08 21:14:53  [ http-nio-80-exec-3:132281 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7c0d0af] will not be managed by Spring
2018-06-08 21:14:53  [ http-nio-80-exec-3:132282 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 21:14:53  [ http-nio-80-exec-3:132282 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 21:14:53  [ http-nio-80-exec-3:132283 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:14:53  [ http-nio-80-exec-3:132284 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d2e7cbd]
2018-06-08 21:14:54  [ http-nio-80-exec-1:133132 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:54  [ http-nio-80-exec-1:133133 ] - [ INFO ]  # user --->com.bankledger.entity.User@11672656
2018-06-08 21:14:54  [ http-nio-80-exec-1:133133 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 21:14:54  [ http-nio-80-exec-1:133133 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:14:54  [ http-nio-80-exec-1:133134 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:14:54  [ http-nio-80-exec-1:133135 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3860c2e5] was not registered for synchronization because synchronization is not active
2018-06-08 21:14:54  [ http-nio-80-exec-1:133135 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2018-06-08 21:14:54  [ http-nio-80-exec-1:133153 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7c0d0af] will not be managed by Spring
2018-06-08 21:14:54  [ http-nio-80-exec-1:133153 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 21:14:54  [ http-nio-80-exec-1:133154 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 21:14:54  [ http-nio-80-exec-1:133155 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:14:54  [ http-nio-80-exec-1:133155 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3860c2e5]
2018-06-08 21:14:55  [ http-nio-80-exec-7:134262 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:14:55  [ http-nio-80-exec-7:134263 ] - [ INFO ]  # user --->com.bankledger.entity.User@11672656
2018-06-08 21:14:55  [ http-nio-80-exec-7:134263 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:14:55  [ http-nio-80-exec-7:134263 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:16:14  [ http-nio-80-exec-1:213145 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:16:14  [ http-nio-80-exec-1:213146 ] - [ INFO ]  # user --->com.bankledger.entity.User@11672656
2018-06-08 21:16:14  [ http-nio-80-exec-1:213146 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:16:14  [ http-nio-80-exec-1:213146 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:16:31  [ http-nio-80-exec-3:229970 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:16:31  [ http-nio-80-exec-3:229971 ] - [ INFO ]  # user --->com.bankledger.entity.User@11672656
2018-06-08 21:16:31  [ http-nio-80-exec-3:229971 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:16:31  [ http-nio-80-exec-3:229971 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:23:14  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-08 21:23:14  [ background-preinit:3 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-08 21:23:14  [ background-preinit:17 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:23:14  [ background-preinit:22 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:23:14  [ background-preinit:23 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:23:14  [ background-preinit:24 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:23:14  [ background-preinit:24 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:23:15  [ restartedMain:223 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 13396 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 21:23:15  [ restartedMain:224 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 21:23:15  [ restartedMain:224 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 21:23:15  [ background-preinit:235 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:23:15  [ background-preinit:238 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:23:15  [ background-preinit:241 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:23:15  [ background-preinit:242 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:23:15  [ background-preinit:244 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:23:15  [ background-preinit:248 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:23:16  [ restartedMain:1850 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 21:23:16  [ restartedMain:1855 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 21:23:16  [ restartedMain:1868 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 21:23:16  [ restartedMain:1871 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 21:23:16  [ restartedMain:1872 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 21:23:16  [ restartedMain:1873 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 21:23:16  [ restartedMain:1877 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 21:23:16  [ restartedMain:1879 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 21:23:16  [ restartedMain:1880 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 21:23:16  [ restartedMain:1881 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 21:23:16  [ restartedMain:1883 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 21:23:16  [ restartedMain:1884 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 21:23:16  [ restartedMain:1884 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 21:23:16  [ restartedMain:1884 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 21:23:17  [ restartedMain:2523 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:23:17  [ restartedMain:2523 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:23:17  [ restartedMain:2524 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:23:17  [ restartedMain:2526 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 21:23:17  [ restartedMain:2527 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 21:23:17  [ restartedMain:2528 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 21:23:17  [ restartedMain:2531 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:23:17  [ restartedMain:2531 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 21:23:17  [ restartedMain:2532 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:23:17  [ restartedMain:2533 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:23:17  [ restartedMain:2534 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:23:17  [ restartedMain:2541 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:23:17  [ restartedMain:2541 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:23:17  [ restartedMain:2541 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:23:17  [ restartedMain:2542 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:23:17  [ restartedMain:2542 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:23:19  [ restartedMain:4598 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-08 21:23:19  [ restartedMain:4660 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 21:23:20  [ restartedMain:5391 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:23:20  [ restartedMain:5392 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:23:20  [ restartedMain:5402 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:23:20  [ restartedMain:5403 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 21:23:20  [ restartedMain:5403 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 21:23:20  [ restartedMain:5403 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 21:23:20  [ restartedMain:5405 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:23:20  [ restartedMain:5406 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 21:23:20  [ restartedMain:5406 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:23:20  [ restartedMain:5407 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:23:20  [ restartedMain:5408 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:23:20  [ restartedMain:5414 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:23:20  [ restartedMain:5414 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:23:20  [ restartedMain:5414 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:23:20  [ restartedMain:5415 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:23:20  [ restartedMain:5416 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:23:21  [ restartedMain:6677 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 21:23:22  [ restartedMain:7180 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 21:23:23  [ restartedMain:8970 ] - [ INFO ]  Started App in 9.148 seconds (JVM running for 9.814)
2018-06-08 21:24:54  [ http-nio-80-exec-10:99250 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:24:54  [ http-nio-80-exec-10:99251 ] - [ INFO ]  # user --->null
2018-06-08 21:24:54  [ http-nio-80-exec-10:99252 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:24:54  [ http-nio-80-exec-10:99252 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:24:54  [ http-nio-80-exec-10:99292 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:24:54  [ http-nio-80-exec-10:99293 ] - [ INFO ]  # user --->null
2018-06-08 21:24:54  [ http-nio-80-exec-10:99293 ] - [ INFO ]  # url --->/login
2018-06-08 21:24:54  [ http-nio-80-exec-10:99295 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:24:54  [ http-nio-80-exec-10:99391 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 21:24:54  [ http-nio-80-exec-10:99583 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@4ba1134c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@41b3634f
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1ad72b1
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-08 21:24:54  [ http-nio-80-exec-10:99593 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-08 21:25:02  [ http-nio-80-exec-5:107832 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:25:02  [ http-nio-80-exec-5:107833 ] - [ INFO ]  # user --->null
2018-06-08 21:25:02  [ http-nio-80-exec-5:107833 ] - [ INFO ]  # url --->/login
2018-06-08 21:25:02  [ http-nio-80-exec-5:107833 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:25:02  [ http-nio-80-exec-5:107884 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:25:02  [ http-nio-80-exec-5:107904 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3134de3c] was not registered for synchronization because synchronization is not active
2018-06-08 21:25:02  [ http-nio-80-exec-5:107995 ] - [ INFO ]  {dataSource-1} inited
2018-06-08 21:25:03  [ http-nio-80-exec-5:108228 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7fb578c7] will not be managed by Spring
2018-06-08 21:25:03  [ http-nio-80-exec-5:108235 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 21:25:03  [ http-nio-80-exec-5:108263 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 21:25:03  [ http-nio-80-exec-5:108278 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:25:03  [ http-nio-80-exec-5:108279 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3134de3c]
2018-06-08 21:25:03  [ http-nio-80-exec-1:108395 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:25:03  [ http-nio-80-exec-1:108396 ] - [ INFO ]  # user --->com.bankledger.entity.User@655340b
2018-06-08 21:25:03  [ http-nio-80-exec-1:108398 ] - [ INFO ]  # url --->/main
2018-06-08 21:25:03  [ http-nio-80-exec-1:108399 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:25:03  [ http-nio-80-exec-1:108399 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:25:03  [ http-nio-80-exec-1:108400 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4357aaa5] was not registered for synchronization because synchronization is not active
2018-06-08 21:25:03  [ http-nio-80-exec-1:108401 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7fb578c7] will not be managed by Spring
2018-06-08 21:25:03  [ http-nio-80-exec-1:108401 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 21:25:03  [ http-nio-80-exec-1:108403 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 21:25:03  [ http-nio-80-exec-1:108409 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:25:03  [ http-nio-80-exec-1:108410 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4357aaa5]
2018-06-08 21:25:03  [ http-nio-80-exec-8:108943 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:25:03  [ http-nio-80-exec-8:108943 ] - [ INFO ]  # user --->com.bankledger.entity.User@655340b
2018-06-08 21:25:03  [ http-nio-80-exec-8:108943 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 21:25:03  [ http-nio-80-exec-8:108944 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:25:03  [ http-nio-80-exec-8:108962 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:25:03  [ http-nio-80-exec-8:108962 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67dd19d6] was not registered for synchronization because synchronization is not active
2018-06-08 21:25:04  [ http-nio-80-exec-8:109101 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-08 21:25:04  [ http-nio-80-exec-8:109162 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@7fb578c7] will not be managed by Spring
2018-06-08 21:25:04  [ http-nio-80-exec-8:109163 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 21:25:04  [ http-nio-80-exec-8:109163 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 21:25:04  [ http-nio-80-exec-8:109165 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:25:04  [ http-nio-80-exec-8:109166 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67dd19d6]
2018-06-08 21:25:04  [ http-nio-80-exec-9:109801 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:25:04  [ http-nio-80-exec-9:109801 ] - [ INFO ]  # user --->com.bankledger.entity.User@655340b
2018-06-08 21:25:04  [ http-nio-80-exec-9:109801 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:25:04  [ http-nio-80-exec-9:109802 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:25:14  [ http-nio-80-exec-6:119142 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:25:14  [ http-nio-80-exec-6:119142 ] - [ INFO ]  # user --->com.bankledger.entity.User@655340b
2018-06-08 21:25:14  [ http-nio-80-exec-6:119143 ] - [ INFO ]  # url --->/changeUser
2018-06-08 21:25:14  [ http-nio-80-exec-6:119143 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:25:14  [ http-nio-80-exec-6:119145 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:25:14  [ http-nio-80-exec-6:119145 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88f0889] was not registered for synchronization because synchronization is not active
2018-06-08 21:25:14  [ http-nio-80-exec-6:119149 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88f0889]
2018-06-08 21:25:14  [ http-nio-80-exec-6:119153 ] - [ ERROR ]  ################# Exception ##################
2018-06-08 21:25:14  [ http-nio-80-exec-6:119154 ] - [ ERROR ]  ### RequestUrI: /changeUser 
2018-06-08 21:25:14  [ http-nio-80-exec-6:119154 ] - [ ERROR ]  ### RequestParam: {skills=交通 教育, nickName=tuyi, sex=女} 
2018-06-08 21:25:14  [ http-nio-80-exec-6:119157 ] - [ ERROR ]  ### exception: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'discript' in 'class com.bankledger.entity.User'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'discript' in 'class com.bankledger.entity.User'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy92.changeUser(Unknown Source)
	at com.bankledger.controller.back.UserController.changeUser(UserController.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'discript' in 'class com.bankledger.entity.User'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:419)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap.get(DynamicContext.java:94)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:108)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2671)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:51)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:83)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy106.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-08 21:26:17  [ background-preinit:0 ] - [ DEBUG ]  Logging Provider: org.jboss.logging.Log4jLoggerProvider
2018-06-08 21:26:17  [ background-preinit:3 ] - [ INFO ]  HV000001: Hibernate Validator 6.0.7.Final
2018-06-08 21:26:17  [ background-preinit:13 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:26:17  [ background-preinit:18 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:26:17  [ background-preinit:19 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:26:17  [ background-preinit:20 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:26:17  [ background-preinit:20 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:26:17  [ restartedMain:211 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 2956 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 21:26:17  [ restartedMain:211 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 21:26:17  [ restartedMain:211 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 21:26:17  [ background-preinit:230 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:26:17  [ background-preinit:246 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:26:17  [ background-preinit:249 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:26:17  [ background-preinit:255 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:26:17  [ background-preinit:257 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:26:17  [ background-preinit:273 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:26:19  [ restartedMain:2022 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 21:26:19  [ restartedMain:2030 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 21:26:19  [ restartedMain:2042 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 21:26:19  [ restartedMain:2044 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 21:26:19  [ restartedMain:2045 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 21:26:19  [ restartedMain:2047 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 21:26:19  [ restartedMain:2056 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 21:26:19  [ restartedMain:2056 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 21:26:19  [ restartedMain:2057 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 21:26:19  [ restartedMain:2057 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 21:26:19  [ restartedMain:2057 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 21:26:19  [ restartedMain:2058 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 21:26:19  [ restartedMain:2058 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 21:26:19  [ restartedMain:2058 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 21:26:20  [ restartedMain:2519 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:26:20  [ restartedMain:2520 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:26:20  [ restartedMain:2522 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:26:20  [ restartedMain:2525 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 21:26:20  [ restartedMain:2527 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 21:26:20  [ restartedMain:2527 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 21:26:20  [ restartedMain:2529 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:26:20  [ restartedMain:2530 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 21:26:20  [ restartedMain:2530 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:26:20  [ restartedMain:2532 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:26:20  [ restartedMain:2532 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:26:20  [ restartedMain:2539 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:26:20  [ restartedMain:2539 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:26:20  [ restartedMain:2540 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:26:20  [ restartedMain:2540 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:26:20  [ restartedMain:2540 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:26:22  [ restartedMain:4432 ] - [ DEBUG ]  Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2018-06-08 21:26:22  [ restartedMain:4500 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 21:26:22  [ restartedMain:4994 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:26:22  [ restartedMain:4994 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:26:22  [ restartedMain:5005 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:26:22  [ restartedMain:5005 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 21:26:22  [ restartedMain:5005 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 21:26:22  [ restartedMain:5005 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 21:26:22  [ restartedMain:5006 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:26:22  [ restartedMain:5006 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 21:26:22  [ restartedMain:5007 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:26:22  [ restartedMain:5007 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:26:22  [ restartedMain:5007 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:26:22  [ restartedMain:5013 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:26:22  [ restartedMain:5013 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:26:22  [ restartedMain:5013 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:26:22  [ restartedMain:5014 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:26:22  [ restartedMain:5014 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:26:23  [ restartedMain:5961 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 21:26:23  [ restartedMain:6094 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 21:26:24  [ restartedMain:7016 ] - [ INFO ]  Started App in 7.171 seconds (JVM running for 7.781)
2018-06-08 21:26:28  [ http-nio-80-exec-1:11345 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:26:28  [ http-nio-80-exec-1:11345 ] - [ INFO ]  # user --->null
2018-06-08 21:26:28  [ http-nio-80-exec-1:11345 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:26:28  [ http-nio-80-exec-1:11346 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:26:28  [ http-nio-80-exec-1:11358 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:26:28  [ http-nio-80-exec-1:11359 ] - [ INFO ]  # user --->null
2018-06-08 21:26:28  [ http-nio-80-exec-1:11359 ] - [ INFO ]  # url --->/login
2018-06-08 21:26:28  [ http-nio-80-exec-1:11359 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:26:29  [ http-nio-80-exec-1:11418 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 21:26:29  [ http-nio-80-exec-1:11629 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2c68fc6f
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7f8aeebe
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@40d67f3b
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-08 21:26:29  [ http-nio-80-exec-1:11640 ] - [ DEBUG ]  [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-08 21:26:35  [ http-nio-80-exec-6:17496 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:26:35  [ http-nio-80-exec-6:17499 ] - [ INFO ]  # user --->null
2018-06-08 21:26:35  [ http-nio-80-exec-6:17499 ] - [ INFO ]  # url --->/login
2018-06-08 21:26:35  [ http-nio-80-exec-6:17499 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:26:35  [ http-nio-80-exec-6:17543 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:26:35  [ http-nio-80-exec-6:17559 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6488b15] was not registered for synchronization because synchronization is not active
2018-06-08 21:26:35  [ http-nio-80-exec-6:17625 ] - [ INFO ]  {dataSource-1} inited
2018-06-08 21:26:35  [ http-nio-80-exec-6:17864 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@761ef25d] will not be managed by Spring
2018-06-08 21:26:35  [ http-nio-80-exec-6:17869 ] - [ DEBUG ]  ==>  Preparing: select blockaddr blockAddr, idcard idCard,nickname , password,type,coincount coinCount from user where type = ? and idcard = ? and password = ? 
2018-06-08 21:26:35  [ http-nio-80-exec-6:17898 ] - [ DEBUG ]  ==> Parameters: 2(String), 222222(String), t123456(String)
2018-06-08 21:26:35  [ http-nio-80-exec-6:17913 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:26:35  [ http-nio-80-exec-6:17915 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6488b15]
2018-06-08 21:26:35  [ http-nio-80-exec-3:18018 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:26:35  [ http-nio-80-exec-3:18018 ] - [ INFO ]  # user --->com.bankledger.entity.User@4ce9f145
2018-06-08 21:26:35  [ http-nio-80-exec-3:18019 ] - [ INFO ]  # url --->/main
2018-06-08 21:26:35  [ http-nio-80-exec-3:18021 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:26:35  [ http-nio-80-exec-3:18023 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:26:35  [ http-nio-80-exec-3:18025 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574ab5d1] was not registered for synchronization because synchronization is not active
2018-06-08 21:26:35  [ http-nio-80-exec-3:18026 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@761ef25d] will not be managed by Spring
2018-06-08 21:26:35  [ http-nio-80-exec-3:18027 ] - [ DEBUG ]  ==>  Preparing: select count(0)from join_project j left join project p on j.projectid = p.projectid where j.blockaddr = ? and p.status = '2' and j.iscome = '0' order by j.created 
2018-06-08 21:26:35  [ http-nio-80-exec-3:18027 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String)
2018-06-08 21:26:35  [ http-nio-80-exec-3:18034 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:26:35  [ http-nio-80-exec-3:18036 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574ab5d1]
2018-06-08 21:26:36  [ http-nio-80-exec-1:18640 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:26:36  [ http-nio-80-exec-1:18640 ] - [ INFO ]  # user --->com.bankledger.entity.User@4ce9f145
2018-06-08 21:26:36  [ http-nio-80-exec-1:18641 ] - [ INFO ]  # url --->/project/getListPoject
2018-06-08 21:26:36  [ http-nio-80-exec-1:18641 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:26:36  [ http-nio-80-exec-1:18656 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:26:36  [ http-nio-80-exec-1:18656 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a64c192] was not registered for synchronization because synchronization is not active
2018-06-08 21:26:36  [ http-nio-80-exec-1:18812 ] - [ DEBUG ]  Cache Hit Ratio [SQL_CACHE]: 0.0
2018-06-08 21:26:36  [ http-nio-80-exec-1:18885 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@761ef25d] will not be managed by Spring
2018-06-08 21:26:36  [ http-nio-80-exec-1:18889 ] - [ DEBUG ]  ==>  Preparing: SELECT count(0) FROM (SELECT p.projectid projectId, p.projecttype projectType, p.projectname projectName, p.address, p.organize, p.starttime startTime, p.endtime endTime, p.limitcount limitCount, p.coin, p.limitorganizeflag limitOrganizeFlag, p.discript, p.status, p.created, IFNULL(j.iscome, '') isCome FROM project p LEFT JOIN join_project j ON p.projectid = j.projectid WHERE 1 = 1 AND p.status = ?) table_count 
2018-06-08 21:26:36  [ http-nio-80-exec-1:18890 ] - [ DEBUG ]  ==> Parameters: 2(String)
2018-06-08 21:26:36  [ http-nio-80-exec-1:18891 ] - [ DEBUG ]  <==      Total: 1
2018-06-08 21:26:36  [ http-nio-80-exec-1:18892 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a64c192]
2018-06-08 21:26:38  [ http-nio-80-exec-7:20551 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:26:38  [ http-nio-80-exec-7:20552 ] - [ INFO ]  # user --->com.bankledger.entity.User@4ce9f145
2018-06-08 21:26:38  [ http-nio-80-exec-7:20552 ] - [ INFO ]  # url --->/usercenter
2018-06-08 21:26:38  [ http-nio-80-exec-7:20552 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:26:46  [ http-nio-80-exec-2:28808 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:26:46  [ http-nio-80-exec-2:28809 ] - [ INFO ]  # user --->com.bankledger.entity.User@4ce9f145
2018-06-08 21:26:46  [ http-nio-80-exec-2:28809 ] - [ INFO ]  # url --->/changeUser
2018-06-08 21:26:46  [ http-nio-80-exec-2:28809 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:26:46  [ http-nio-80-exec-2:28811 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:26:46  [ http-nio-80-exec-2:28811 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@94e776e] was not registered for synchronization because synchronization is not active
2018-06-08 21:26:46  [ http-nio-80-exec-2:28814 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@761ef25d] will not be managed by Spring
2018-06-08 21:26:46  [ http-nio-80-exec-2:28815 ] - [ DEBUG ]  ==>  Preparing: update set blockaddr = ? , nickname = ? , skills = ? , sex = ? 
2018-06-08 21:26:46  [ http-nio-80-exec-2:28816 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), tuyi(String), 交通 教育(String), 女(String)
2018-06-08 21:26:46  [ http-nio-80-exec-2:28831 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@94e776e]
2018-06-08 21:26:46  [ http-nio-80-exec-2:28961 ] - [ ERROR ]  ################# Exception ##################
2018-06-08 21:26:46  [ http-nio-80-exec-2:28967 ] - [ ERROR ]  ### RequestUrI: /changeUser 
2018-06-08 21:26:46  [ http-nio-80-exec-2:28967 ] - [ ERROR ]  ### RequestParam: {skills=交通 教育, nickName=tuyi, sex=女} 
2018-06-08 21:26:46  [ http-nio-80-exec-2:28969 ] - [ ERROR ]  ### exception: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
### The error may exist in com/bankledger/mapper/UserMapper.java (best guess)
### The error may involve com.bankledger.mapper.UserMapper.changeUser-Inline
### The error occurred while setting parameters
### SQL: update set blockaddr = ?   , nickname = ?   , skills = ?  , sex = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
### The error may exist in com/bankledger/mapper/UserMapper.java (best guess)
### The error may involve com.bankledger.mapper.UserMapper.changeUser-Inline
### The error occurred while setting parameters
### SQL: update set blockaddr = ?   , nickname = ?   , skills = ?  , sex = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy92.changeUser(Unknown Source)
	at com.bankledger.controller.back.UserController.changeUser(UserController.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy106.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-08 21:29:30  [ http-nio-80-exec-7:193149 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:29:30  [ http-nio-80-exec-7:193149 ] - [ INFO ]  # user --->com.bankledger.entity.User@4ce9f145
2018-06-08 21:29:30  [ http-nio-80-exec-7:193149 ] - [ INFO ]  # url --->/changeUser
2018-06-08 21:29:30  [ http-nio-80-exec-7:193149 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:29:30  [ http-nio-80-exec-7:193150 ] - [ DEBUG ]  Creating a new SqlSession
2018-06-08 21:29:30  [ http-nio-80-exec-7:193151 ] - [ DEBUG ]  SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59c1ffc9] was not registered for synchronization because synchronization is not active
2018-06-08 21:29:30  [ http-nio-80-exec-7:193170 ] - [ DEBUG ]  JDBC Connection [com.mysql.jdbc.JDBC4Connection@761ef25d] will not be managed by Spring
2018-06-08 21:29:30  [ http-nio-80-exec-7:193171 ] - [ DEBUG ]  ==>  Preparing: update set blockaddr = ? , nickname = ? , skills = ? , sex = ? 
2018-06-08 21:29:30  [ http-nio-80-exec-7:193172 ] - [ DEBUG ]  ==> Parameters: XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW(String), tuyi(String), 交通 教育(String), 女(String)
2018-06-08 21:29:30  [ http-nio-80-exec-7:193174 ] - [ DEBUG ]  Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59c1ffc9]
2018-06-08 21:29:30  [ http-nio-80-exec-7:193175 ] - [ ERROR ]  ################# Exception ##################
2018-06-08 21:29:30  [ http-nio-80-exec-7:193175 ] - [ ERROR ]  ### RequestUrI: /changeUser 
2018-06-08 21:29:30  [ http-nio-80-exec-7:193176 ] - [ ERROR ]  ### RequestParam: {skills=交通 教育, nickName=tuyi, sex=女} 
2018-06-08 21:29:30  [ http-nio-80-exec-7:193176 ] - [ ERROR ]  ### exception: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
### The error may exist in com/bankledger/mapper/UserMapper.java (best guess)
### The error may involve com.bankledger.mapper.UserMapper.changeUser-Inline
### The error occurred while setting parameters
### SQL: update set blockaddr = ?   , nickname = ?   , skills = ?  , sex = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
### The error may exist in com/bankledger/mapper/UserMapper.java (best guess)
### The error may involve com.bankledger.mapper.UserMapper.changeUser-Inline
### The error occurred while setting parameters
### SQL: update set blockaddr = ?   , nickname = ?   , skills = ?  , sex = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy92.changeUser(Unknown Source)
	at com.bankledger.controller.back.UserController.changeUser(UserController.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set blockaddr = 'XcEuYpbDnHf7NZFsJ6ZmwWmeQdUshYKQyW'   , nickname = 'tuyi'   , s' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy106.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 60 more
2018-06-08 21:30:21  [ Thread-6:244062 ] - [ INFO ]  {dataSource-1} closed
2018-06-08 21:30:22  [ restartedMain:244414 ] - [ INFO ]  Starting App on DESKTOP-M9EJ43A with PID 2956 (E:\workspace\volunteer\target\classes started by user in E:\workspace\volunteer)
2018-06-08 21:30:22  [ restartedMain:244415 ] - [ DEBUG ]  Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-06-08 21:30:22  [ restartedMain:244415 ] - [ INFO ]  The following profiles are active: dev
2018-06-08 21:30:22  [ restartedMain:245061 ] - [ DEBUG ]  Searching for mappers annotated with @Mapper
2018-06-08 21:30:22  [ restartedMain:245062 ] - [ DEBUG ]  Using auto-configuration base package 'com.bankledger'
2018-06-08 21:30:22  [ restartedMain:245071 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\CoinRecordMapper.class]
2018-06-08 21:30:22  [ restartedMain:245072 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\JoinProjectMapper.class]
2018-06-08 21:30:22  [ restartedMain:245072 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\ProjectMapper.class]
2018-06-08 21:30:22  [ restartedMain:245072 ] - [ DEBUG ]  Identified candidate component class: file [E:\workspace\volunteer\target\classes\com\bankledger\mapper\UserMapper.class]
2018-06-08 21:30:22  [ restartedMain:245075 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'coinRecordMapper' and 'com.bankledger.mapper.CoinRecordMapper' mapperInterface
2018-06-08 21:30:22  [ restartedMain:245076 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'coinRecordMapper'.
2018-06-08 21:30:22  [ restartedMain:245076 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'joinProjectMapper' and 'com.bankledger.mapper.JoinProjectMapper' mapperInterface
2018-06-08 21:30:22  [ restartedMain:245076 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'joinProjectMapper'.
2018-06-08 21:30:22  [ restartedMain:245077 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'projectMapper' and 'com.bankledger.mapper.ProjectMapper' mapperInterface
2018-06-08 21:30:22  [ restartedMain:245077 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'projectMapper'.
2018-06-08 21:30:22  [ restartedMain:245096 ] - [ DEBUG ]  Creating MapperFactoryBean with name 'userMapper' and 'com.bankledger.mapper.UserMapper' mapperInterface
2018-06-08 21:30:22  [ restartedMain:245097 ] - [ DEBUG ]  Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2018-06-08 21:30:22  [ restartedMain:245318 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:30:22  [ restartedMain:245319 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:30:22  [ restartedMain:245320 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:30:22  [ restartedMain:245322 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 21:30:22  [ restartedMain:245323 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 21:30:22  [ restartedMain:245323 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 21:30:22  [ restartedMain:245324 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:30:22  [ restartedMain:245324 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 21:30:22  [ restartedMain:245326 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:30:22  [ restartedMain:245327 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:30:22  [ restartedMain:245328 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:30:22  [ restartedMain:245342 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:30:22  [ restartedMain:245345 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:30:22  [ restartedMain:245346 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:30:22  [ restartedMain:245346 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:30:22  [ restartedMain:245346 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:30:23  [ restartedMain:246010 ] - [ DEBUG ]  Property 'mapperLocations' was not specified or no matching resources found
2018-06-08 21:30:23  [ restartedMain:246201 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:30:23  [ restartedMain:246202 ] - [ DEBUG ]  Loaded expression factory via original TCCL
2018-06-08 21:30:23  [ restartedMain:246204 ] - [ DEBUG ]  Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2018-06-08 21:30:23  [ restartedMain:246205 ] - [ DEBUG ]  Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-06-08 21:30:23  [ restartedMain:246206 ] - [ DEBUG ]  Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-06-08 21:30:23  [ restartedMain:246206 ] - [ DEBUG ]  Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-06-08 21:30:23  [ restartedMain:246208 ] - [ DEBUG ]  Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-06-08 21:30:23  [ restartedMain:246208 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via user class loader
2018-06-08 21:30:23  [ restartedMain:246209 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via TCCL
2018-06-08 21:30:23  [ restartedMain:246211 ] - [ DEBUG ]  Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-06-08 21:30:23  [ restartedMain:246212 ] - [ DEBUG ]  No META-INF/validation.xml found. Using annotation based configuration only.
2018-06-08 21:30:23  [ restartedMain:246216 ] - [ DEBUG ]  HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-06-08 21:30:23  [ restartedMain:246217 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-06-08 21:30:23  [ restartedMain:246218 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-06-08 21:30:23  [ restartedMain:246218 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-06-08 21:30:23  [ restartedMain:246218 ] - [ DEBUG ]  HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-06-08 21:30:24  [ restartedMain:246628 ] - [ WARN ]  [THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
2018-06-08 21:30:24  [ restartedMain:246754 ] - [ DEBUG ]  No org.mybatis.spring.mapper.MapperFactoryBean found.
2018-06-08 21:30:25  [ restartedMain:247687 ] - [ INFO ]  Started App in 3.33 seconds (JVM running for 248.452)
2018-06-08 21:30:35  [ http-nio-80-exec-10:257368 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:30:35  [ http-nio-80-exec-10:257368 ] - [ INFO ]  # user --->null
2018-06-08 21:30:35  [ http-nio-80-exec-10:257369 ] - [ INFO ]  # url --->/changeUser
2018-06-08 21:30:35  [ http-nio-80-exec-10:257369 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:30:35  [ http-nio-80-exec-10:257369 ] - [ INFO ]  当前请求为Ajax请求
2018-06-08 21:30:37  [ http-nio-80-exec-9:260235 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:30:37  [ http-nio-80-exec-9:260236 ] - [ INFO ]  # user --->null
2018-06-08 21:30:37  [ http-nio-80-exec-9:260237 ] - [ INFO ]  # url --->/loginOut
2018-06-08 21:30:37  [ http-nio-80-exec-9:260238 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:30:37  [ http-nio-80-exec-8:260259 ] - [ INFO ]  ################ LoginInterceptor ################
2018-06-08 21:30:37  [ http-nio-80-exec-8:260259 ] - [ INFO ]  # user --->null
2018-06-08 21:30:37  [ http-nio-80-exec-8:260259 ] - [ INFO ]  # url --->/login
2018-06-08 21:30:37  [ http-nio-80-exec-8:260260 ] - [ INFO ]  # ip --->127.0.0.1

2018-06-08 21:30:37  [ http-nio-80-exec-8:260273 ] - [ DEBUG ]  [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-08 21:30:37  [ http-nio-80-exec-8:260297 ] - [ DEBUG ]  Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2c68fc6f
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7f8aeebe
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@40d67f3b
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
